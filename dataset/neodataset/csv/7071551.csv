issuekey,created,title,description,storypoints
14034537,2018-09-10 14:00:59.295,Add bootstrap-vue's alert,Add https://bootstrap-vue.js.org/docs/components/alert to gitlab-ui,4
13900356,2018-09-04 19:16:14.202,Formalize utility-first css preference,"## Proposal 

Let's formalize a ""utility-first"" CSS preference (this is different than ""utility-only""):

1. Start with utility classes.
2. If composing utility classes into a component class removes code duplication and encapsulates a clear responsibility, do it. 

**Why?**

- ""utility-first"" encourages the organic growth of component classes.
- It prevents the creation of one off not reusable classes.
- It keeps component classes cohesive, since they can be combined with other utility classes.
- It also encourages the creation of design-centered classes (e.g. button, alert, input), rather than domain-centered classes (e.g. security-report-widget, commit-header-icon).

**Inspiration:**

- [Tailwind](https://tailwindcss.com/docs/extracting-components/)

## Description

Throughout all Frontend projects, it is unclear when to prefer utility classes vs. component classes. Let's formalize our preference and add it to our FE documentation.

**What are utility classes?**

`.d-flex.prepend-top-default.append-bottom-default`

[Bootstrap4 introduced many utility classes](https://getbootstrap.com/docs/4.1/utilities/) that each apply a single CSS rule. We've also adopted this pattern and created some custom utility classes. These are helpful for quickly overriding styles that are highly specific. 

**What are component classes?**

`.component-header`

This is the common practice of creating CSS classes that encapsulate a logical set of rules.

## Analysis

**What are our goals?**

- Increase maintainability
- Reduce CSS bloat 

**Advantages of utility classes:**

- Prevents the need for one-off CSS classes that are never reused

**Disadvantages of utility classes:**

- Harder to read
- Harder to edit in the browser inspector
- The set of utility classes applied to an element is not reusable (although the Vue component itself is reusable)

**Advantages of component classes:**

- Easier to read
- Easier to edit in the browser inspector
- Reusable
- Semantically describes the HTML element

**Disadvantages of component classes:**

- When reused in the wrong place, it can cause coupling of unrelated elements, hurting modifiability.
- Naming of these classes can easily be inconsistent and unintuitive (e.g. wrapper, container, content, etc.

## Conclusion

There is nothing keeping us from doing both, but using either inappropriately leads to a brittle style sheet. `utility-first` is a pragmatic way to ensure we are creating the right kind of component classes.

## Related Resources

- https://davidtheclark.com/on-utility-classes/
- https://adamwathan.me/css-utility-classes-and-separation-of-concerns/",1
13436092,2018-08-14 17:57:10.748,Document contribution steps on how to create wrapped components,"Document contribution steps on how to create wrapped components

## Steps
1. Select a component
1. Determine the scenarios (different types of implementations) in which this component is used in gitlab-ce/ee
1. Document those scenarios in an issue
1. Select a scenario that is implemented in gitlab-ce/ee that you will replace with your component
1. Create a MR to [gitlab-ui](https://gitlab.com/gitlab-org/gitlab-ui/) implementing your new component
   1. Be sure to name your MR `feat: <commit message>` as that is needed for our npm release CI job
   1. Create `component.vue` in `components/` directory
   1. Create a story `component.js` in `stories/` directory
   1. Run `yarn test --updateSnapshot` to generate your image snapshots for diffing
1. Create a MR to gitlab-ce/ee to replace the scenario implementation that you previously selected
   1. Update your `package.json` dependency reference of `@gitlab-org/gitlab-ui` to the URL output of the `upload_artifacts` ci job in your gitlab-ui MR
   1. Run `yarn install` to make sure that the `gitlab-ui` contents are installed
   1. Add a new component import to `app/assets/javascripts/commons/gitlab_ui.js` so that your component is globally registered
1. Once you've verified that your integration MR to gitlab-ce/ee is working, assign a maintainer to review both gitlab-ui and gitlab-ce/ee MRs
1. Maintainer will merge the gitlab-ui MR, run the manual CI job on `master` to make a new release onto NPM
1. (You or maintainer) will update your integration MR `package.json` dependency reference to the newly released `gitlab-ui` version
1. Maintainer will merge the integration MR

## Methods to streamline steps
1. Create CLI (eg. yeoman) to create templates for gitlab-ui MR https://gitlab.com/gitlab-org/gitlab-ui/issues/14
   1. Auto generate `component.vue` in components directory
   1. Auto generate `component.js` in stories directory
1. Create system for checking commit messages and MR titles so that they fit the semantic release format",2
13320937,2018-08-08 14:59:03.009,Add bootstrap-vue's pagination,"Add bootstrap-vue's pagination

## Existing Scenarios in CE

- Navigation-based Vue component: pagination buttons are links to next/previous result pages (requires page reload)

## Existing Implementations in CE

- [table_pagination.vue](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/app/assets/javascripts/vue_shared/components/table_pagination.vue) is used in:
  - [container.vue](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/app/assets/javascripts/environments/components/container.vue)
  - [groups.vue](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/app/assets/javascripts/groups/components/groups.vue)
  - [pipelines.vue](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/app/assets/javascripts/pipelines/components/pipelines.vue)
  - [table_registry.vue](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/app/assets/javascripts/registry/components/table_registry.vue)
",4
13320871,2018-08-08 14:55:30.738,Add bootstrap vue's tooltip,"
",4
13319763,2018-08-08 13:56:36.035,Add bootstrap vue's modal to gitlab-ui,"## Scenarios of modal's in GitLab
- Dynamic content modal
   - One modal DOM element with dynamic data loaded across multiple button triggers
- 1 to 1 modal
   - One modal DOM element mapped to one button trigger
- Button in HAML, Modal in Vue

## Current implementations of modal's in GitLab
- [gl_modal.vue](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/app/assets/javascripts/vue_shared/components/gl_modal.vue) - 11 instances in CE
   - Dynamic content modal (4 count)
   - 1:1 (3 count)
   - button in HAML (4 count)
- [deprecated_modal.vue](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/app/assets/javascripts/vue_shared/components/deprecated_modal.vue) - 7 instances in CE
   - Dynamic content modal (1 count)
   - 1:1 (1 count)
   - button in HAML (5 count)",4
13309501,2018-08-08 07:22:52.428,add lint,we should copy eslint (and probably prettier) config from gitlab-ce repo - https://gitlab.com/gitlab-org/gitlab-ce/blob/master/.eslintrc.yml,3
30791244,2018-07-10 10:46:23.914,Frontend for showing × on label to remove the label in sidebar,"We add a chip with an `x` icon (`icn/close`) that can be clicked to delete the label. The chip will change its style and show a background on hover and active states.

The shape of the chip will be a `16px x 16px` circle. The icon inside should be `8px x 8px`. The margin with the label name is `2px` and the padding on the right side of the chip is `4px`. Spec previous will be uploaded with all these measurements.

The target area of the chip will be a `16px x 16px` square independently of its shape.

The hover state for the circle should revert to the color in the label when a white background is used (such as with scoped labels) and the 'x' icon color should be the same color as either the label color or the text color when on a white background (if applicable).

### Solution  
![Screen_Recording_2020-06-16_at_11.24.51_AM](/uploads/196aa5750ce9b3b6f770fb27e740977a/Screen_Recording_2020-06-16_at_11.24.51_AM.mov)

[See Figma UI Pajamas kit for more details on tokens](https://www.figma.com/file/qEddyqCrI7kPSBjGmwkZzQ/Pajamas-UI-Kit?node-id=425%3A141)

<details>
### Previous solution proposal  

We currently underline the label's name when hovering. This underline should be removed when hovering over the chip.

| States | Sidebar |
| ------ | ------- |
| <img src=""https://gitlab.com/gitlab-org/gitlab-ce/uploads/8603ad33cf17624e75c31147cf7f8288/labels--cursors.png"" width=442px> | <img src=""https://gitlab.com/gitlab-org/gitlab-ce/uploads/1585579d865d77987ee0620adef896ce/sidebar.png"" width=288px>

The colors of the badge are based on the label name color:

|     | Resting | Hover | Active |
| --- | ------- | ----- | ------ |
| Icon | Color: `same as text`, Opacity: `100%` | Color: `same as text`, Opacity: `100%` | Color: `same as label`, Opacity: `100%`  |
| Icon Background | Color: `none`, Opacity: `0%` | Color: ` same as text`, Opacity: `30%` | Color: `same as text`, Opacity: `100%`  |
</details>

### In scope
- This should apply to issue, merge request, and epic pages.
- This should apply to the slide out board sidebar for project boards and group boards.",2
12117018,2018-06-18 11:24:57.593,Automated documentation for components,We need a way to build automated documentation for our components and automatically publish them,3
18439101,2017-01-03 22:31:32.158,Update search components in gitlab-ui,"Guidelines:
https://design.gitlab.com/components/search

Specs: https://gitlab-org.gitlab.io/gitlab-design/hosted/design-gitlab-specs/search-spec-previews/

A list of all searchboxes throughout the application (WIP):
https://docs.google.com/spreadsheets/d/13y5NMHi7VUs8jNeEBuMd5C5PcR_hdUfDdwKxLOyIjWU/edit#gid=0

## Proposal


| **1. Search by typing** | **2. Search by enter/click** |
|------------------|-----------------------|
| ![image](/uploads/d5acb38884e6d7f1ec20b39a45419628/image.png) <br>*Default -> Typing (spinner indicates background activity) -> Show the clear icon when there's no background activity*<br><br>- Search icon placed in the left edge of search box<br>- Lack of button indicates automatic search<br>- Focus search box when clear icon is clicked<br>- Hide the clear icon when search box is empty | ![image](/uploads/62102ff170506ba0f7c13268f2faf679/image.png)<br>*Default -> Typing (show clear icon)*<br><br>- Search icon in the button<br>- Button indicates the need for confirming/triggering search<br>- Focus search box when clear icon is clicked<br>- Hide the clear icon when search box is empty |

And also update the most commonly and prominently used one so it's better aligned with the 2. from above.

![image](/uploads/c19521fd99e7a30a269bb30a056b303e/image.png)

Old description:

<details>
### Resources
FE @timzallmann 

We have a number of differently styles search boxes across the site.

Here are three different examples all on the same page:

![Screen_Recording_2017-01-03_at_02.29_PM](/uploads/bfa158f950e2786c4fed39153c7838de/Screen_Recording_2017-01-03_at_02.29_PM.gif)

Let's standarize all the search boxes. The magnifying glass icon should remain, even when text is entered into the search field. We should remove the clear icon, as it doesn't provide enough value. 

### Proposal 

Update the related search components in `gitlab-ui`

![Screen_Shot_2017-06-19_at_3.37.13_PM](https://gitlab.com/gitlab-org/gitlab-ce/uploads/a759276a6e90da5be69de47ce801c4d3/Screen_Shot_2017-06-19_at_3.37.13_PM.png)

![Screen_Shot_2017-06-19_at_3.46.34_PM](https://gitlab.com/gitlab-org/gitlab-ce/uploads/eb73c41970e0145abf52e68d369ebb2f/Screen_Shot_2017-06-19_at_3.46.34_PM.png)

</details>",5
56241907,2020-07-14 00:41:11.270,GlIcon: Add `data-testid` attribute,"Per this thread: https://gitlab.com/gitlab-org/gitlab/-/merge_requests/36240#note_378455487

Occasionally we need to click on an icon in E2E tests. To avoid using CSS classes we should add a `data-testid=""{icon_name}-icon""` attribute to `GlIcon`.

Update https://gitlab.com/gitlab-org/gitlab/-/blob/e044f3946a8773cdeeb4bc8b283ef12b906bfc52/qa/qa/ee/page/group/settings/general.rb#L69 once this is completed",1
54331804,2020-07-11 13:18:25.674,Upgrade BootstrapVue to v2.21.2 & Bootstrap to v4.5.x,"- BootstrapVue v2.21.2 changelog: https://bootstrap-vue.org/docs/reference/changelog#v2212
- Bootstrap v4.5.3 changelog: https://github.com/twbs/bootstrap/releases/tag/v4.5.3

Let's make sure that GitLab UI uses BootstrapVue's latest version so that we can benefit from all the features of the underlying components library. This will be especially useful as we work towards upgrading to Vue 3, as we'll want to make sure that our libraries are compatible with Vue's new APIs.

Note that as of writing this, BootstapVue is not yet compatible with Vue 3: https://github.com/bootstrap-vue/bootstrap-vue/issues/5196

Since we're currently several versions behind the latest BootstrapVue, we will proceed by upgrading to each minor version individually so that we can better evaluate the impacts and fix what needs to be fixed.

| Version                                                             | MR                                                            |
| ------------------------------------------------------------------- | ------------------------------------------------------------- |
| [v2.14.0](https://bootstrap-vue.org/docs/reference/changelog#v2140) | https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/2150 |
| [v2.15.0](https://bootstrap-vue.org/docs/reference/changelog#v2150) | https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/2151 |
| [v2.16.0](https://bootstrap-vue.org/docs/reference/changelog#v2160) | https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/2169                                                           |
| [v2.17.3](https://bootstrap-vue.org/docs/reference/changelog#v2173) | https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/2189 |
| [v2.18.1](https://bootstrap-vue.org/docs/reference/changelog#v2181) | https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/2195                                                           |
| [v2.19.0](https://bootstrap-vue.org/docs/reference/changelog#v2190) | https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/2403                                                           |
| [v2.20.1](https://bootstrap-vue.org/docs/reference/changelog#v2201) | https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/2413                                                           |
| [v2.21.2](https://bootstrap-vue.org/docs/reference/changelog#v2212) | TBC                                                           |",3
54297806,2020-07-10 13:48:08.401,Text area for editing wiki page won't expand taller than 500 pixels,"When editing a Gitlab Wiki page in version 13.0.3, the editor area can be dragged no taller than 500 pixels, which is pretty restrictive. The limitation seems to be the `.markdown-area` style, which has a `max-height` property of `500px`. Using Chrome/Inspect, changing this to `1000px` allows a taller editing window.

(You would think that using the ""Go full screen"" button would be a workaround, but it isn't; the resulting display has larger text and a narrower editing field, which adds unnecessary line wraps. I've filed this separately as issue #880.)",1
53978942,2020-07-06 15:52:43.942,Proposal: Merge GlSkeletonLoading functionality into GlSkeletonLoader and deprecate GlSkeletonLoading,"[`GlSkeletonLoading`](https://gitlab-org.gitlab.io/gitlab-ui/?path=/story/base-skeleton-loading--default) and [`GlSkeletonLoader`](https://gitlab-org.gitlab.io/gitlab-ui/?path=/story/base-skeleton-loader--default) have very similar functionality that could be combined to reduce confusion and make GitLab UI more maintainable.

# Proposal

### Changes to [`GlSkeletonLoader`](https://gitlab-org.gitlab.io/gitlab-ui/?path=/story/base-skeleton-loader--default)

- Add `DEFAULT_LINE_WIDTH_PERCENTAGES` as a constant from https://gitlab.com/gitlab-org/gitlab-ui/-/blob/master/src/components/base/skeleton_loading/skeleton_loading.scss#L4
- Add `lines` prop that defaults to `3` and is used to render the default [`slot`](https://gitlab.com/gitlab-org/gitlab-ui/-/blob/master/src/components/base/skeleton_loader/skeleton_loader.vue#L53) value.
- Add `equal-width-lines` prop that defaults to `false`. The default lines will be the same width if this is `true`.
- Add default value to [`slot`](https://gitlab.com/gitlab-org/gitlab-ui/-/blob/master/src/components/base/skeleton_loader/skeleton_loader.vue#L53). This default value would be a SVG rectangle that is rendered based on the `lines` prop, `equal-width-lines` prop and `DEFAULT_LINE_WIDTH_PERCENTAGES` constant.

### Changes to [`GlSkeletonLoading`](https://gitlab-org.gitlab.io/gitlab-ui/?path=/story/base-skeleton-loading--default)
- Add deprecated message. ""This component is deprecated, please use [`GlSkeletonLoader`](https://gitlab-org.gitlab.io/gitlab-ui/?path=/story/base-skeleton-loader--default).""",3
49944004,2020-06-23 09:12:56.293,Chart legend clickability hover-state,"### Problem

- From: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/614#note_364422937
- Charts do not easily let users know that they can click on the chart legend to show/hide values

### Solution

- Add additional signifiers to the chart's on-hover interaction

[See prototype](https://www.figma.com/proto/GevTEMYLCPyWn2bo564C2V/Grouped-Stacked-Column?node-id=24%3A16&viewport=1665%2C1559%2C2.4460501670837402&scaling=min-zoom)",1
49943761,2020-06-23 09:07:42.580,Reverse order of popover values in stacked column chart,"From: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/614#note_364403374

### Problem

- Values are in reverse order for stacked column chart's popover 

### Solution

- Put them in the same order as how they appear in the chart

![image](/uploads/32ec59acb3139dad1566cbe03395687b/image.png)",1
44633171,2020-06-16 03:43:34.853,Single util class for a 1px solid $border-color'd border,"Currently it takes lots of typing to add a border

```html
class=""gl-border-b-1 gl-border-b-gray-200 gl-border-b-solid""
```

We should add a `.gl-border-bottom` util class that adds width, style, and color at the same time. They are usually `1px`, `solid`, and `$border-color`ed.

Similar to https://gitlab.com/gitlab-org/gitlab-ui/-/issues/844",1
38376510,2020-06-09 18:31:35.550,GlButton > Icon buttons > Add borderless variant,"We need a borderless icon button variant for instances such as actions in the headers:

![Screen_Shot_2020-06-09_at_11.32.07_AM](/uploads/944b8d9ce5fc6e9a58a297eef19148fa/Screen_Shot_2020-06-09_at_11.32.07_AM.png)",1
36482565,2020-06-08 22:10:28.418,Add an off click directive,"Throughout the gitlab codebase we are building diff types of off click handlers, per recommendations from multiple maintainers this should be abstracted to a directive or a component.",2
35353115,2020-06-02 20:48:57.267,Heat map > Toggling legend,"You can toggle the data points off using the legend on all the chart types. But, I notice this doesn't work on the heat maps. You can toggle the groups off...but nothing happens :sweat_smile: We should either disable the toggling feature OR make sure it works

## Proposal

Ensure that toggling heat map legend options correctly toggles content in heat map.",2
35353050,2020-06-02 20:45:39.116,Heat map > Spacing of x axis label,"In the design, we have 8px space between the x-axis label and the top of the legend. Right now, it looks like there's no space between the container holding the legend and the container holding the x-axis label.

![space](https://gitlab.com/gitlab-org/gitlab-ui/uploads/76dc02653d3596f0dc73d6bea7f75e04/space.png)",2
35201188,2020-05-29 20:10:47.059,Segmented control > Update styling of selected button,"The selected button styling for segmented controls needs to be updated to match the new style displayed in Figma

|Current GitLab UI|Figma|
|--|--|
| ![Screen_Shot_2020-05-29_at_1.10.06_PM](/uploads/9f8ec212c16de2a5ef0cd745742d41d1/Screen_Shot_2020-05-29_at_1.10.06_PM.png) |  ![Screen_Shot_2020-05-29_at_1.10.12_PM](/uploads/400a2ae4d19769c952dc5be274096b39/Screen_Shot_2020-05-29_at_1.10.12_PM.png) |

https://www.figma.com/file/qEddyqCrI7kPSBjGmwkZzQ/Pajamas-UI-Kit?node-id=3280%3A6829",1
35196572,2020-05-29 18:07:15.665,Radio and checkbox groups > Only allow stacked version,"In our UI Kit, we've determined that radio and checkbox groups should only be stacked vertically. The horizontal version should be removed from GitLab UI as an option.",1
35152428,2020-05-29 05:35:16.634,Allow only safe urls in GlLink,"[GlLink Component](https://gitlab.com/gitlab-org/gitlab-ui/-/blob/master/src/components/base/link/link.vue) should accept only safe (secure) URLs and thus preventing `javascript://` XSSes.

* should allow URLs only with the following protocols (http, https, ftp, mailto)
* should take care of encoded URIs
* should render as `span` tag when the `href` is unsafe",5
35152277,2020-05-29 05:28:10.875,Vue Directive to Sanitize HTML,Add a Vue Directive `v-safe-html` which would allow you to sanitize html in Vue.,3
35055290,2020-05-27 10:05:35.025,Selected item from Recent searches doesn't populate search input,"Passing a `historyItems` array to `GlFilteredSearch` lists will render those items under a dropdown. Selecting an item from the list will trigger a `search`. However, the search input field won't get populated with the selected item. If we decided that this should not be part of the component's implementation, then we should at expose an event that the outside world can listen to.

![recent_searches](/uploads/ebf0e7fd579e8d841517bc5436a2561a/recent_searches.mp4)",1
35035949,2020-05-26 21:08:37.367,Allow colorize token in filters,"It seems we have already two use cases of using colored token:
Status: ![image](/uploads/77c2d528edf6f00fe497434968fc13f1/image.png)
and labels, where token inherits color of label

We need to provide a way in ~""component:filter"" to create such tokens
/cc @tauriedavis @wortschi",2
35009539,2020-05-26 10:09:34.275,Consider adding lighter-weight table components,"A recent MR made it clear how heavy a component `GlTable` (i.e., `BTable`) really is: https://gitlab.com/gitlab-org/gitlab/-/merge_requests/31471#note_346621145

In short, it adds ~120KB to a page bundle.

This is no doubt why `bootstrap-vue` also has `BTableLite` and `BTableSimple` components! We should consider wrapping those as well in GitLab UI.

**Implementation Plan:**

- [x] Add TableLite component to GitLabUI
- [x] Add TableSimple component to GitLabUI
- [x] Update GitLab to the latest GitLabUI package
- [x] create Epic to reconsider using lightweight tables on existing GlTables in Gitlab",3
35001386,2020-05-26 06:48:15.832,"Create ""NewCard"" Component","This issue captures the implementation of the UI-component for https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/287

Related epics:

* [Components of Pajamas Design System](https://gitlab.com/groups/gitlab-org/-/epics/973)
* [Pajamas component: Cards](https://gitlab.com/groups/gitlab-org/-/epics/1118)

Related issues:

* [FY20-Q2 UX OKR: Improve the quality and consistency of our UI](https://gitlab.com/gitlab-com/www-gitlab-com/issues/4355)
* [Pajamas](https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/287)

Related discussion / Context:

* [Why `NewCard`?](https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/287#note_347484969)

## Implementation Plan

* [ ] Rebase / Update https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/1314
* [ ] Finish work (eg.: add documentation)",3
34909090,2020-05-22 19:17:24.396,Make GlBanner follow design system again,"!1280 revealed that more components than we are expected do not follow design system. `GlBanner` is one of such components, we need to update CSS to make it compatible once again

Figma specs: https://www.figma.com/file/qEddyqCrI7kPSBjGmwkZzQ/Component-library?node-id=19944%3A6",1
34907572,2020-05-22 18:01:55.618,"Create ""Token Selector"" component","## Objective

- Create a token selector that can be used for this feature: https://gitlab.com/gitlab-org/gitlab/-/issues/33143 (Thread discussing design: https://gitlab.com/gitlab-org/gitlab/-/issues/33143#note_333784563)
- Make it flexible enough to be able to replace the ""Invite user dropdown"" (used to add users to projects/groups) in the future
![Screen_Shot_2020-05-22_at_10.24.27_AM](/uploads/31f185ec08f4a3dc1ebbf9dc2d09db39/Screen_Shot_2020-05-22_at_10.24.27_AM.png)

## Examples

See !1460 

## Proposed API

### Props
| Name | Description | Type | Required? | Default Value |
| ------ | ------ | ------ | ------ | ------ |
| `dropdown-items` | Items to display in dropdown | `Array` | `false` | `[]` |
| `selected-tokens` | Tokens that are selected. This prop will automatically be added when using `v-model`. | `Array` | `true` | `[]` |
| `allow-user-defined-tokens` | Should users be allowed to add tokens that are not in the `dropdown-items` | `Function` or `Boolean` | `false` | `true` |
| `loading` | Dropdown options are loading, can be used when requesting new dropdown options | `Boolean` | `false` | `false` |
| `hide-dropdown-with-no-items` | Hide the dropdown if `dropdown-items` is empty. Will show `no-results-content` slot if this is `false` | `Boolean` | `false` | `false` |

### Slots
| Name | Description | Default | Scoped Props |
| ------ | ------ | ------ | ------ |
| `no-results-content` | Content to display when `dropdown-items` is empty and `allow-user-defined-tokens` is `false` | `No matches found` | N/A |
| `user-defined-token-content` | Content to display when adding a user defined token | `Add ""{{ inputText }}""` | `inputText` |
| `token-content` | Content to pass to the token component slot. Can be used to add an avatar to the token | `token.name` | `token` |
| `dropdown-item-content` | Dropdown item content | `dropdownItem.name` | `dropdownItem` |
| `loading-content` | Loading content | `Searching...` | N/A

### Events
| Name | Description | Arguments |
| ------ | ------ | ------ |
| `text-input` | Fired when user types in the text input | `inputText` |
| `input` | Fired when a token is add or removed | `selectedTokens` |
| `focus` | Input focus event | `event` |
| `blur` | Input blur event | `event` |
| `token-add` | Fired when a token is added | `token` |
| `token-remove` | Fired when a token is removed | `token` |

`v-model` will return array of selected tokens

### Keyboard navigation
Based on [Material Chips](https://material.angular.io/components/chips/overview#keyboard-interaction)

| Key | Action |
| ------ | ------ |
| `enter` | Adds selected dropdown as token |
| `escape` | Closes dropdown and clears text input |
| `backspace` | Select last token. `backspace` again to delete |
| `left/right arrows` | Move between selected tokens |
| `up/down arrows` | Move between dropdown options |
| `home` | When token is selected, move focus to first token. When dropdown item is selected, move to first dropdown item |
| `end` | When token is selected, move focus to last token. When dropdown item is selected, move to last dropdown item |

### A11y

References: 

- [`ARIA: listbox role`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role)
- [Material Chips](https://material.angular.io/components/chips/overview#keyboard-interaction)

#### Token container attributes

| Attribute |
| ------ |
| `role=""listbox""` |
| `aria-multiselectable=""false""` |
| `aria-orientation=""horizontal""` |

#### Token 

| Attribute |
| ------ |
| `role=""option""` |",5
34614415,2020-05-15 16:24:03.986,Change GlInfiniteScroll to not display totalItems in its legend if it wasn't supplied,"This will fix the underlying cause for how [this bug](https://gitlab.com/gitlab-org/gitlab/-/issues/196526) occurred.

Rationale:

* `GlInfiniteScroll`'s `totalItems` prop is optional; unfortunately, the component *always* renders its ""legend"". Since `totalItems` defaults to `0`, the legend in this case will say `Showing n items of 0`, which is precisely what caused the [bug](https://gitlab.com/gitlab-org/gitlab/-/issues/196526).
  * `GlInfiniteScroll` should change the legend to not display `totalItems` if it wasn't supplied.",1
34229428,2020-05-06 17:08:04.455,Create a component for truncating filepaths,"We need a component for secure that truncates filepaths intelligently.

Consider the following string, `ee/app/assets/javascripts/vue_shared/security_reports/store/utils.js`:

1. Truncate end: `ee/app/assets/javascript…`
1. Truncate start: `…y_reports/store/utils.js`
1. Smart truncation: `ee/app/…/store/utils.js`

If we truncate the end of the string, we cut out the most important imformation.
If we truncate the start of the string, we could also cut out important information.
The final solution would be ideal, but tricky to impliment.

I've made a quick CSS POC that should help getting started.
https://codepen.io/samdbeckham/pen/JjYpNMd

cc @gitlab-org/secure/frontend 

Related:
https://gitlab.com/gitlab-org/gitlab/-/issues/196148",3
34113464,2020-05-04 14:35:28.413,Automatically add the appropriate `rel` attribute when using `GlButton` with `href`,"When using `GlButton` with an `href` attribute (i.e. `<gl-button href=""..."">`), the developer needs to remember to add a `rel` attribute (if appropriate):

```html
<gl-button href=""https://example.com"" rel=""noopener noreferrer"">Click me</gl-button>
```

We should update `GlButton` to automatically apply the appropriate `rel` attribute, similar to what `GlLink` does. This would save developers from having to remember to add the `rel` attribute manually and enforce a consistent usage of `rel` across our product.

Based on an internal conversation with @ealcantara (https://gitlab.slack.com/archives/C0GQHHPGW/p1588601058335600?thread_ts=1588600819.335400&cid=C0GQHHPGW), this should relatively simple by including the `rel_mixin` in `button.vue`.",1
33925660,2020-04-28 21:06:43.285,Follow-up: Style form_input/textarea readonly and disabled states following Pajamas specs,"The purpose of this follow-up issue is styling the form_input/textarea readonly/disabled states following Pajamas specs.

The following discussion from !1341 should be addressed:

- [ ] @tauriedavis started a [discussion](https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/1341#note_333107121):  (+1 comment)

    > Looks great! I think this is ready to merge. 
    > 
    > The ~~invalid~~ readonly/disabled textarea is incorrect, is there a separate issue to fix that or should we create one?
    > 
    > Also I'm not sure about the two way bound input. Do we use that anywhere? Can it be removed or do we need to update the text underneath to use the current font/spacing? This seems separate from this MR so happy to open a separate issue to take a look.",1
33333565,2020-04-15 17:02:06.588,Upgrade BootstrapVue to latest stable version,"# Our current dependencies state

## GitLab UI

- [`bootstrap-vue@2.1.0`](https://gitlab.com/gitlab-org/gitlab-ui/-/blob/a8223b33965371f052eea14ce10f0d927d4428f2/package.json#L60) (direct dependency)
- [`bootstrap@4.3.1`](https://gitlab.com/gitlab-org/gitlab-ui/-/blob/a8223b33965371f052eea14ce10f0d927d4428f2/package.json#L75) (peer dependency)

## GitLab

- [`bootstrap@4.3.1`](https://gitlab.com/gitlab-org/gitlab/-/blob/fcdb26339eeb7f4a160fe2f663886eefe82f6157/package.json#L57) (direct dependency, matches `@gitlab/ui` peer dependency)

# BootstrapVue's current state

- `bootstrap-vue`'s latest version: [`2.13.1`](https://github.com/bootstrap-vue/bootstrap-vue/blob/dev/package.json#L3)
- [`bootstrap@4.4.1`](https://github.com/bootstrap-vue/bootstrap-vue/blob/dev/package.json#L94) (direct dependency)

# What we're aiming for

## GitLab UI

- `bootstrap-vue@2.13.1` (direct dependency)
- `bootstrap@4.4.1` (peer dependency)

## GitLab

- `bootstrap@4.4.1` (direct dependency, matches `@gitlab/ui` peer dependency)

# Migration plan

- [x] Upgrade to `bootstrap-vue@2.13.1` and `bootstrap@4.4.1` in GitLab UI: https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/1354
- [x] Upgrade to `bootstrap@4.4.1` and `@gitlab/ui@next` in GitLab: https://gitlab.com/gitlab-org/gitlab/-/merge_requests/30846
    - [x] By looking at Bootstrap's changelog, estimate what changes could present a risk to GitLab
    - [x] Document a migration path for every risky change
    - [ ] Proceed with the upgrade and smoke test the app


# BootstrapVue's Changelogs from `2.1.0` to `2.13.1`

<details>

## [v2.13.1](https://github.com/bootstrap-vue/bootstrap-vue/compare/v2.13.0...v2.13.1)

Released: 2020-05-05

### Bug Fixes v2.13.1

- **b-table, b-table-lite, b-table-simple:** handle head/foot variant for sticky columns (fixes
  [#5278](https://github.com/bootstrap-vue/bootstrap-vue/issues/5278))
  ([#5279](https://github.com/bootstrap-vue/bootstrap-vue/issues/5279))
  ([53e309e](https://github.com/bootstrap-vue/bootstrap-vue/commit/53e309e947b4710fcf8d989cc9ef0f31c58487ae))

### Other v2.13.1

- documentation updates
- dev dependency updates

## [v2.13.0](https://github.com/bootstrap-vue/bootstrap-vue/compare/v2.12.0...v2.13.0)

Released: 2020-04-27

### Features v2.13.0

- **b-calendar, b-form-datepicker:** relax `YYYY-MM-DD` string parsing (closes
  [#5232](https://github.com/bootstrap-vue/bootstrap-vue/issues/5232))
  ([#5242](https://github.com/bootstrap-vue/bootstrap-vue/issues/5242))
  ([f362802](https://github.com/bootstrap-vue/bootstrap-vue/commit/f362802b2794f0e5d294bbb004d91ccd623a1e25))
- **b-form-rating:** add `show-value-max` prop to show possible max rating when `show-value` is
  `true` ([#5200](https://github.com/bootstrap-vue/bootstrap-vue/issues/5200))
  ([e9d54e6](https://github.com/bootstrap-vue/bootstrap-vue/commit/e9d54e6c6a736b2a4f9dbf232dd2b20afa0e990c))
- **b-overlay:** add support for overlay `click` event (closes
  [#5243](https://github.com/bootstrap-vue/bootstrap-vue/issues/5243))
  ([#5248](https://github.com/bootstrap-vue/bootstrap-vue/issues/5248))
  ([582560f](https://github.com/bootstrap-vue/bootstrap-vue/commit/582560ff97690ab1e5c1f609d76804b7b3daa104))

### Bug Fixes v2.13.0

- **b-avatar:** set `align-items: center` for default slot content (fixes:
  [#5205](https://github.com/bootstrap-vue/bootstrap-vue/issues/5205))
  ([#5207](https://github.com/bootstrap-vue/bootstrap-vue/issues/5207))
  ([c4981fd](https://github.com/bootstrap-vue/bootstrap-vue/commit/c4981fd098253840a37e731331de65b0e732fc79))
- **b-calendar, b-form-datepicker:** minor adjustments to styling and example updates
  ([#5211](https://github.com/bootstrap-vue/bootstrap-vue/issues/5211))
  ([f0d8ffe](https://github.com/bootstrap-vue/bootstrap-vue/commit/f0d8ffe4253079939008108fe86529a2f69553f1))
- **b-form-datepicker, b-form-timepicker:** fix menu padding in button only mode (fixes
  [#5251](https://github.com/bootstrap-vue/bootstrap-vue/issues/5251))
  ([#5252](https://github.com/bootstrap-vue/bootstrap-vue/issues/5252))
  ([d57a643](https://github.com/bootstrap-vue/bootstrap-vue/commit/d57a643f0c6b5e805a42a3387fb0db4443bfc01f))
- **b-form-datepicker, b-form-timepicker:** adjust scss to support input-groups
  ([#5231](https://github.com/bootstrap-vue/bootstrap-vue/issues/5231))
  ([7b1adc4](https://github.com/bootstrap-vue/bootstrap-vue/commit/7b1adc460f11c2ee54466fe0d204579f3f6f1bd2))
- **b-form-datepicker, b-form-timepicker:** prevent duplicate validation icons (fixes
  [#5237](https://github.com/bootstrap-vue/bootstrap-vue/issues/5237))
  ([#5238](https://github.com/bootstrap-vue/bootstrap-vue/issues/5238))
  ([6354e6e](https://github.com/bootstrap-vue/bootstrap-vue/commit/6354e6eb90b93e668c2794b3b4c2117a7cfc0ab0))
- **types:** update table field definition types to include sticky column (fixes
  [#5263](https://github.com/bootstrap-vue/bootstrap-vue/issues/5263))
  ([#5265](https://github.com/bootstrap-vue/bootstrap-vue/issues/5265))
  ([20eb3ac](https://github.com/bootstrap-vue/bootstrap-vue/commit/20eb3ac9e22ddbcc41d1f1aa923871007abe0dc0))
- handle nested form options normalization
  ([#5247](https://github.com/bootstrap-vue/bootstrap-vue/issues/5247))
  ([0c57ffe](https://github.com/bootstrap-vue/bootstrap-vue/commit/0c57ffe31c946475498fa3554b8b4aba4e9d19df))

### Other v2.13.0

- dev dependencies updates
- documentation updates
- new docs domain [`https://bootstrap-vue.org/`](https://bootstrap-vue.org/)

<a name=""2.12.0""></a>

## [v2.12.0](https://github.com/bootstrap-vue/bootstrap-vue/compare/v2.11.0...v2.12.0)

Released: 2020-04-20

### Features v2.12.0

- **b-avatar:** add support for badges on avatars
  ([#5124](https://github.com/bootstrap-vue/bootstrap-vue/issues/5124))
  ([a2e465b](https://github.com/bootstrap-vue/bootstrap-vue/commit/a2e465b6457cabb88e42bcefd86a86e36c4602de))
- **b-avatar:** if `variant` is empty string, then remove spacing around image (closes
  [#5154](https://github.com/bootstrap-vue/bootstrap-vue/issues/5154))
  ([#5156](https://github.com/bootstrap-vue/bootstrap-vue/issues/5156))
  ([7ff87fc](https://github.com/bootstrap-vue/bootstrap-vue/commit/7ff87fc560a2ad005bdca394cccf1fafa9d5e696))
- **b-calendar, b-form-datepicker:** add prop `weekday-header-format` to specify weekday header
  length (closes [#5171](https://github.com/bootstrap-vue/bootstrap-vue/issues/5171))
  ([#5175](https://github.com/bootstrap-vue/bootstrap-vue/issues/5175))
  ([8241644](https://github.com/bootstrap-vue/bootstrap-vue/commit/8241644477b174042bb163ba1741c3066165d9f9))
- **b-calendar, b-form-datepicker:** add scoped slots for date navigation buttons (closes
  [#5117](https://github.com/bootstrap-vue/bootstrap-vue/issues/5117))
  ([#5147](https://github.com/bootstrap-vue/bootstrap-vue/issues/5147))
  ([5f69864](https://github.com/bootstrap-vue/bootstrap-vue/commit/5f69864497a13a9b18a96b508af6b9ba89a43add))
- **b-form-datepicker:** add pass through prop `date-info-fn` (closes
  [#4826](https://github.com/bootstrap-vue/bootstrap-vue/issues/4826))
  ([#5150](https://github.com/bootstrap-vue/bootstrap-vue/issues/5150))
  ([bf35f80](https://github.com/bootstrap-vue/bootstrap-vue/commit/bf35f80d1c4619cf4494dc8a6256d093140d4052))
- **b-form-rating:** new `b-form-rating` custom component
  ([#5132](https://github.com/bootstrap-vue/bootstrap-vue/issues/5132))
  ([30ad7fe](https://github.com/bootstrap-vue/bootstrap-vue/commit/30ad7fe746cd6187311c86319abf6e9519b81f15))
- **b-sidebar:** add optional backdrop support
  ([#5182](https://github.com/bootstrap-vue/bootstrap-vue/issues/5182))
  ([c6375e5](https://github.com/bootstrap-vue/bootstrap-vue/commit/c6375e5513cb0ec33a9bc9fc894a123d74cf7768))
- **custom components:** avoid using padding/margin utility classes where possible (closes
  [#5117](https://github.com/bootstrap-vue/bootstrap-vue/issues/5117))
  ([#5121](https://github.com/bootstrap-vue/bootstrap-vue/issues/5121))
  ([8c6cfe0](https://github.com/bootstrap-vue/bootstrap-vue/commit/8c6cfe0af919a4e54667bcb4b29d2ba6b6576b67))
- **icons:** new `throb` and `fade` animations
  ([#5122](https://github.com/bootstrap-vue/bootstrap-vue/issues/5122))
  ([bc0117c](https://github.com/bootstrap-vue/bootstrap-vue/commit/bc0117cc794c948b202daf2e17f22eb4c36235cc))

### Bug Fixes v2.12.0

- **b-alert:** fix memory leak by using the correct method to clear the countdown timeout
  ([#5158](https://github.com/bootstrap-vue/bootstrap-vue/issues/5158))
  ([7a7f33d](https://github.com/bootstrap-vue/bootstrap-vue/commit/7a7f33d74f906e5feecf2bf177636c7f85bc4537))
- **b-avatar:** fix button type font size inheritance
  ([#5177](https://github.com/bootstrap-vue/bootstrap-vue/issues/5177))
  ([441ebdc](https://github.com/bootstrap-vue/bootstrap-vue/commit/441ebdc8a262c6c6ed494ddc6a6c0c06604045ef))
- **b-calendar:** use `Intl.NumberFormat` for formatting the number in the date buttons (closes
  [#5171](https://github.com/bootstrap-vue/bootstrap-vue/issues/5171))
  ([#5179](https://github.com/bootstrap-vue/bootstrap-vue/issues/5179))
  ([cbf2cd0](https://github.com/bootstrap-vue/bootstrap-vue/commit/cbf2cd007cce81a5f664fa649b08af6735fe16e4))
- **b-form-datepicker:** make datepicker respect `no-highlight-today` prop
  ([#5159](https://github.com/bootstrap-vue/bootstrap-vue/issues/5159))
  ([c4ead33](https://github.com/bootstrap-vue/bootstrap-vue/commit/c4ead3302b176e4a90fbfcfe6380de0edc22640f))

### Other v2.12.0

- documentation updates
- dev dependency updates

<a name=""2.11.0""></a>

## [v2.11.0](https://github.com/bootstrap-vue/bootstrap-vue/compare/v2.10.1...v2.11.0)

Released: 2020-04-07

### Features v2.11.0

- **b-avatar:** if image `src` fails to load, then show icon, text or fallback icon
  ([#5079](https://github.com/bootstrap-vue/bootstrap-vue/issues/5079))
  ([ed6704d](https://github.com/bootstrap-vue/bootstrap-vue/commit/ed6704d0971ade485393b7f711f05d93ca42ebc3))
- **b-calendar, b-form-datepicker:** add optional decade navigation buttons (addresses
  [#4976](https://github.com/bootstrap-vue/bootstrap-vue/issues/4976))
  ([#5112](https://github.com/bootstrap-vue/bootstrap-vue/issues/5112))
  ([b1f74a8](https://github.com/bootstrap-vue/bootstrap-vue/commit/b1f74a84f4021022e606360ee6824c6645b6fbd0))

### Bug Fixes v2.11.0

- **b-calendar, b-form-datepicker:** handle keyboard navigation when selected date is out of range
  (fixes [#5057](https://github.com/bootstrap-vue/bootstrap-vue/issues/5057))
  ([#5108](https://github.com/bootstrap-vue/bootstrap-vue/issues/5108))
  ([6ed09f4](https://github.com/bootstrap-vue/bootstrap-vue/commit/6ed09f40ae1594c7ad96dedc8c3d7c2a54d4d9c7))
- **b-link:** don't render `target` or `rel` attrs when `router-tag` other than `a` or `area`
  provided ([#5107](https://github.com/bootstrap-vue/bootstrap-vue/issues/5107))
  ([33c6cef](https://github.com/bootstrap-vue/bootstrap-vue/commit/33c6cefc2f46ab8110e39f110d984f230d525c86))
- **tooltip, popover:** handle `'click blur'` trigger on iOS webkit browsers (fixes
  [#5099](https://github.com/bootstrap-vue/bootstrap-vue/issues/5099))
  ([#5103](https://github.com/bootstrap-vue/bootstrap-vue/issues/5103))
  ([27da76c](https://github.com/bootstrap-vue/bootstrap-vue/commit/27da76cdc70449b0564e31f5733df97d758652ea))

### Other v2.11.0

- additional unit testing
- dev dependencies updates
- minor documentation updates

<a name=""2.10.1""></a>

## [v2.10.1](https://github.com/bootstrap-vue/bootstrap-vue/compare/v2.10.0...v2.10.1)

Released: 2020-04-02

### Bug Fixes v2.10.1

- **b-avatar:** remove default padding when in button mode (fixes
  [#5073](https://github.com/bootstrap-vue/bootstrap-vue/issues/5073))
  ([#5076](https://github.com/bootstrap-vue/bootstrap-vue/issues/5076))
  ([26377b3](https://github.com/bootstrap-vue/bootstrap-vue/commit/26377b3479f323baa2d702fab7f5200949ed680d))
- **b-table:** fix context object `currentPage` issue introduced in v2.10.0 (fixes
  [#5065](https://github.com/bootstrap-vue/bootstrap-vue/issues/5065))
  ([#5067](https://github.com/bootstrap-vue/bootstrap-vue/issues/5067))
  ([874dca2](https://github.com/bootstrap-vue/bootstrap-vue/commit/874dca2c8c385fecf7cec76e6cfa44eda9fcabf4))

### Other v2.10.1

- dev dependency updates

<a name=""2.10.0""></a>

## [v2.10.0](https://github.com/bootstrap-vue/bootstrap-vue/compare/v2.9.0...v2.10.0)

Released: 2020-04-01

### Features v2.10.0

- **b-sidebar:** new custom component `<b-sidebar>` (closes
  [#3324](https://github.com/bootstrap-vue/bootstrap-vue/issues/3324),
  [#3210](https://github.com/bootstrap-vue/bootstrap-vue/issues/3210),
  [#1702](https://github.com/bootstrap-vue/bootstrap-vue/issues/1702))
  ([#5021](https://github.com/bootstrap-vue/bootstrap-vue/issues/5021))
  ([a77866f](https://github.com/bootstrap-vue/bootstrap-vue/commit/a77866f6d032f1a5a22be2d12d60be507825769c))

### Bug Fixes v2.10.0

- **b-avatar:** remove duplicate button variant class
  ([#5056](https://github.com/bootstrap-vue/bootstrap-vue/issues/5056))
  ([9f78f32](https://github.com/bootstrap-vue/bootstrap-vue/commit/9f78f32d964b187f35a1feffb7aa4bc264587923))
- **b-card:** handle `header-html` and `footer-html` props correctly (fixes
  [#5038](https://github.com/bootstrap-vue/bootstrap-vue/issues/5038))
  ([#5039](https://github.com/bootstrap-vue/bootstrap-vue/issues/5039))
  ([f378aef](https://github.com/bootstrap-vue/bootstrap-vue/commit/f378aeffdebdc7922f6ad4c5d513642dfb93cf1d))
- **types:** add missing declaration for `b-form-timepicker` (closes
  [#5035](https://github.com/bootstrap-vue/bootstrap-vue/issues/5035))
  ([#5036](https://github.com/bootstrap-vue/bootstrap-vue/issues/5036))
  ([ae84118](https://github.com/bootstrap-vue/bootstrap-vue/commit/ae841184dc3037b5d6f365311cc668bccb0e85da))

### Other v2.10.0

- documentation site improvements and updates
- dev dependency updates

<a name=""2.9.0""></a>

## [v2.9.0](https://github.com/bootstrap-vue/bootstrap-vue/compare/v2.8.0...v2.9.0)

Released: 2020-03-25

### Features v2.9.0

- **b-aspect:** new custom component `<b-aspect>`
  ([#5008](https://github.com/bootstrap-vue/bootstrap-vue/issues/5008))
  ([662c8e0](https://github.com/bootstrap-vue/bootstrap-vue/commit/662c8e0709c8c73fb2119976d1906943cfe6daad))
- **b-avatar:** add `alt` prop for adding alt attribute to image and icon avatars (closes
  [#4990](https://github.com/bootstrap-vue/bootstrap-vue/issues/4990))
  ([#4991](https://github.com/bootstrap-vue/bootstrap-vue/issues/4991))
  ([d1474f2](https://github.com/bootstrap-vue/bootstrap-vue/commit/d1474f28729e4e13ad97b75a87d56f85543d4c96))
- **b-drodpown-item-button, b-drodpown-item-button:** add `button-class` and `link-class` prop
  ([#5014](https://github.com/bootstrap-vue/bootstrap-vue/issues/5014))
  ([b39d31c](https://github.com/bootstrap-vue/bootstrap-vue/commit/b39d31cede76b594b5608fa472d53e3dac525e2b))
- **b-form-datepicker, b-form-timepicker:** emit `shown` and `hidden` events
  ([#5004](https://github.com/bootstrap-vue/bootstrap-vue/issues/5004))
  ([eb259b9](https://github.com/bootstrap-vue/bootstrap-vue/commit/eb259b998dfd3e88a1b04ed8d3f4c97560f69dbb))
- **b-navbar-toggle:** make default slot scoped
  ([#4995](https://github.com/bootstrap-vue/bootstrap-vue/issues/4995))
  ([144d45f](https://github.com/bootstrap-vue/bootstrap-vue/commit/144d45fb0e4d66bbf243b4a4df39d7f3b9b5c7cc))

### Docs v2.9.0

- Ensure that the `IconsPlugin` is imported when exporting from playground to CodePen, CodeSandbox,
  and JsFiddle ([#5003](https://github.com/bootstrap-vue/bootstrap-vue/issues/5003))

### Other v2.9.0

- dev dependency updates

<a name=""2.8.0""></a>

## [v2.8.0](https://github.com/bootstrap-vue/bootstrap-vue/compare/v2.7.0...v2.8.0)

Released: 2020-03-22

### Features v2.8.0

- **icons:** upgrade to Bootstrap Icons `1.0.0.alpha3`
  ([#4966](https://github.com/bootstrap-vue/bootstrap-vue/issues/4966))
  ([d481365](https://github.com/bootstrap-vue/bootstrap-vue/commit/d481365c9f8014e1573026881c3588f2d51999ee))
  - 200+ new icons
  - `skip-*` icon names fixed (closes [#4733](https://github.com/bootstrap-vue/bootstrap-vue/4733))
  - `document-*` icons renamed to `file-*`
  - `alert-*` icons renamed to `exclamation-*`
  - `columns-gutters` icon renamed to `columns-gap`
  - `diamond` icon renamed to `gem` because of new `diamond-*` shape icons
- **b-avatar:** new `<b-avatar>` component
  ([#4974](https://github.com/bootstrap-vue/bootstrap-vue/issues/4974))
  ([b2325a3](https://github.com/bootstrap-vue/bootstrap-vue/commit/b2325a3f87a58207603be0bad41afb3059a575a1))
- **b-form-spinbutton:** add slots for increment and decrement button content (closes
  [#4958](https://github.com/bootstrap-vue/bootstrap-vue/issues/4958))
  ([#4963](https://github.com/bootstrap-vue/bootstrap-vue/issues/4963))
  ([5684405](https://github.com/bootstrap-vue/bootstrap-vue/commit/5684405197c8dd03b0711b0efc11ab6d76fb7714))

### Other v2.8.0

- docs updates
- dev dependencies updates

<a name=""2.7.0""></a>

## [v2.7.0](https://github.com/bootstrap-vue/bootstrap-vue/compare/v2.6.1...v2.7.0)

Released: 2020-03-14

### Features v2.7.0

- **b-overlay:** new component `b-overlay`
  ([#4907](https://github.com/bootstrap-vue/bootstrap-vue/issues/4907))
  ([134d64d](https://github.com/bootstrap-vue/bootstrap-vue/commit/134d64d073bb64fecd74ffc521476bfd97a99fc0))
- **b-calendar, b-form-datepicker:** add new `initial-date` prop, and constrain today/current month
  buttons between `min` and `max` (closes
  [#4899](https://github.com/bootstrap-vue/bootstrap-vue/issues/4899))
  ([#4906](https://github.com/bootstrap-vue/bootstrap-vue/issues/4906))
  ([1d957eb](https://github.com/bootstrap-vue/bootstrap-vue/commit/1d957ebd78a8693e91a8116d12c28fe24bd7c19c))
- **b-form-datepicker, b-form-timepicker:** add support for icon button only mode (closes
  [#4888](https://github.com/bootstrap-vue/bootstrap-vue/issues/4888))
  ([#4915](https://github.com/bootstrap-vue/bootstrap-vue/issues/4915))
  ([13660c3](https://github.com/bootstrap-vue/bootstrap-vue/commit/13660c3ad02f6c692d306ec95f0d2b19212f9423))
- **b-icon:** add animated icon options (closes
  [#4720](https://github.com/bootstrap-vue/bootstrap-vue/issues/4720))
  ([#4934](https://github.com/bootstrap-vue/bootstrap-vue/issues/4934),
  [#4945](https://github.com/bootstrap-vue/bootstrap-vue/issues/4945),
  [#4948](https://github.com/bootstrap-vue/bootstrap-vue/issues/4948))
  ([7c781fa](https://github.com/bootstrap-vue/bootstrap-vue/commit/7c781faea78315a753b2db903b12c500d6547ae1),
  [b786f67](https://github.com/bootstrap-vue/bootstrap-vue/commit/b786f671c3d69bbf9dbfb088840a332d4a066b14),
  [927c234](https://github.com/bootstrap-vue/bootstrap-vue/commit/927c234a6b5d68e23e86f7d1782b179b1ccb8786))

### Bug Fixes v2.7.0

- **b-form-file:** fix value prop validation when using directory mode (fixes
  [#4912](https://github.com/bootstrap-vue/bootstrap-vue/issues/4912))
  ([#4913](https://github.com/bootstrap-vue/bootstrap-vue/issues/4913))
  ([498a262](https://github.com/bootstrap-vue/bootstrap-vue/commit/498a26219571bb6108aaa7134dc25c8e1ff6c98f))
- **b-form-file:** make sure to catch all errors when resetting the input
  ([#4936](https://github.com/bootstrap-vue/bootstrap-vue/issues/4936))
  ([682bc46](https://github.com/bootstrap-vue/bootstrap-vue/commit/682bc46028cacfdb570fe416a051160ee9789fe2))

### Other v2.7.0

- `deps`: update devDependency rollup to 2.0.x
- minor docs updates

<a name=""2.6.1""></a>

## [v2.6.1](https://github.com/bootstrap-vue/bootstrap-vue/compare/v2.6.0...v2.6.1)

Released: 2020-03-06

### Bug Fixes v2.6.1

- **b-form-spinbutton:** respect step value for initial decrement when `wrap` enabled (closes
  [#4884](https://github.com/bootstrap-vue/bootstrap-vue/issues/4884))
  ([#4885](https://github.com/bootstrap-vue/bootstrap-vue/issues/4885))
  ([28e7245](https://github.com/bootstrap-vue/bootstrap-vue/commit/28e724536be4762382328648f203bd46d8f52fdc))

### Other v2.6.1

- documentation updates and fixes
- dev dependency updates

<a name=""2.6.0""></a>

## [v2.6.0](https://github.com/bootstrap-vue/bootstrap-vue/compare/v2.5.0...v2.6.0)

Released: 2020-03-05

### Features v2.6.0

- **b-calendar, b-form-datepicker:** allow customization of in-component displayed date format
  (closes [#4797](https://github.com/bootstrap-vue/bootstrap-vue/issues/4797))
  ([#4835](https://github.com/bootstrap-vue/bootstrap-vue/issues/4835))
  ([85c7e75](https://github.com/bootstrap-vue/bootstrap-vue/commit/85c7e759bc78d2ffb5b026cb5ee484b2567136aa))
- **b-form-datepicker:** add `button-content` optionally scoped slot for calendar icon
  ([#4795](https://github.com/bootstrap-vue/bootstrap-vue/issues/4795))
  ([7a00910](https://github.com/bootstrap-vue/bootstrap-vue/commit/7a0091099025d8bdcf953b00d8619726b54fa937))
- **b-form-datepicker:** add `calendar-width` prop (closes
  [#4817](https://github.com/bootstrap-vue/bootstrap-vue/issues/4817))
  ([#4822](https://github.com/bootstrap-vue/bootstrap-vue/issues/4822))
  ([91b77bc](https://github.com/bootstrap-vue/bootstrap-vue/commit/91b77bc9a6b1a4796698ce3185c0b354156ce563))
- **b-pagination, b-pagination-nav:** improve aria accessibility - changes to inner structure and
  aria attributes (closes: [#4811](https://github.com/bootstrap-vue/bootstrap-vue/issues/4811),
  [#4160](https://github.com/bootstrap-vue/bootstrap-vue/issues/4160))
  ([#4810](https://github.com/bootstrap-vue/bootstrap-vue/issues/4810))
  ([7ee4baa](https://github.com/bootstrap-vue/bootstrap-vue/commit/7ee4baa9a843411cd30a3ee499fc7272b7cf48f2))
- **b-tabs:** add ability to provide custom tab button attributes (closes:
  [#4803](https://github.com/bootstrap-vue/bootstrap-vue/issues/4803))
  ([#4806](https://github.com/bootstrap-vue/bootstrap-vue/issues/4806))
  ([c541d3d](https://github.com/bootstrap-vue/bootstrap-vue/commit/c541d3d89ae88f3193305b61ae8ddc735aa6ec03))
- **b-time, b-form-timepicker:** new components `b-time` and `b-form-timepicker`
  ([#4783](https://github.com/bootstrap-vue/bootstrap-vue/issues/4783))
  ([417ef8f](https://github.com/bootstrap-vue/bootstrap-vue/commit/417ef8f2165e68d182e942219d847511b0fd6e9c))

### Bug Fixes v2.6.0

- **b-form-datepicker:** menu focus handling for Firefox and Safari on MacOS, and fix v-model update
  issue (closes [#4814](https://github.com/bootstrap-vue/bootstrap-vue/issues/4814),
  [#4827](https://github.com/bootstrap-vue/bootstrap-vue/issues/4827))
  ([#4824](https://github.com/bootstrap-vue/bootstrap-vue/issues/4824))
  ([09fa920](https://github.com/bootstrap-vue/bootstrap-vue/commit/09fa920e4a904c6340c60586b40451dce94efc44))
- **b-form-spinbutton:** prevent buttons from re-ordering when parent element is RTL
  ([#4802](https://github.com/bootstrap-vue/bootstrap-vue/issues/4802))
  ([ae2cce9](https://github.com/bootstrap-vue/bootstrap-vue/commit/ae2cce9d593bd310b3d2256ade41df0243447970))
- **b-form-spinbutton:** prevent double increment/decrement on mobile (fixes
  [#4838](https://github.com/bootstrap-vue/bootstrap-vue/issues/4838))
  ([#4842](https://github.com/bootstrap-vue/bootstrap-vue/issues/4842))
  ([9c2c700](https://github.com/bootstrap-vue/bootstrap-vue/commit/9c2c700a91d7a6e57572f579f68996eaceda5c00))

### Other v2.6.0

- documentation updates
- dev dependency updates

<a name=""2.5.0""></a>

## [v2.5.0](https://github.com/bootstrap-vue/bootstrap-vue/compare/v2.4.2...v2.5.0)

Released: 2020-02-18

### Features v2.5.0

- **b-calendar, b-form-datepicker:** new components `b-calendar` and `b-form-datepicker` (closes
  [#3676](https://github.com/bootstrap-vue/bootstrap-vue/issues/3676),
  [#1428](https://github.com/bootstrap-vue/bootstrap-vue/issues/1428))
  ([#4712](https://github.com/bootstrap-vue/bootstrap-vue/issues/4712))
  ([af0ded0](https://github.com/bootstrap-vue/bootstrap-vue/commit/af0ded0a3bdc9d69653e9c55f874d550e4909662))
- **b-form-spinbutton:** new form control component `b-form-spinbutton`
  ([#4744](https://github.com/bootstrap-vue/bootstrap-vue/issues/4744))
  ([da5e473](https://github.com/bootstrap-vue/bootstrap-vue/commit/da5e473bee8866f2940e027e5e7e87e3a2ff8f11))
- **v-b-hover:** new directive for reacting to hover changes
  ([#4771](https://github.com/bootstrap-vue/bootstrap-vue/issues/4771))
  ([b7adc6d](https://github.com/bootstrap-vue/bootstrap-vue/commit/b7adc6dc726f75c0578b3de5208f112bef58b4ad))

### Bug Fixes v2.5.0

- **b-form-tags:** improve accessibility for screen reader users
  ([#4775](https://github.com/bootstrap-vue/bootstrap-vue/issues/4775))
  ([2328630](https://github.com/bootstrap-vue/bootstrap-vue/commit/2328630542defc395912165a964a95107f8a4ba9))
- **b-modal:** additional fixes for show transition behaviour (closes
  [#4761](https://github.com/bootstrap-vue/bootstrap-vue/issues/4761))
  ([#4777](https://github.com/bootstrap-vue/bootstrap-vue/issues/4777))
  ([1113c6f](https://github.com/bootstrap-vue/bootstrap-vue/commit/1113c6f951d86b7e6e6ba2161f935d2b6e0b5ce8))

### Other v2.5.0

- documentation updates
- documentation accessibility improvements
- dev dependency updates

<a name=""2.4.2""></a>

## [v2.4.2](https://github.com/bootstrap-vue/bootstrap-vue/compare/v2.4.1...v2.4.2)

Released: 2020-02-15

### Bug Fixes v2.4.2

- **b-button:** when `href` is ""#"" add `role=button` and appropriate keydown handlers for A11Y
  ([#4768](https://github.com/bootstrap-vue/bootstrap-vue/issues/4768))
  ([087a128](https://github.com/bootstrap-vue/bootstrap-vue/commit/087a1283977061c44d5b059c203f13d2326dabae))
- **b-modal:** fix transition show enter timing (closes
  [#4761](https://github.com/bootstrap-vue/bootstrap-vue/issues/4761))
  ([#4766](https://github.com/bootstrap-vue/bootstrap-vue/issues/4766))
  ([968c957](https://github.com/bootstrap-vue/bootstrap-vue/commit/968c95758e45610a8c002507790c79d87d8fe956))

### Other v2.4.2

- documentation updates
- dev dependency updates

<a name=""2.4.1""></a>

## [v2.4.1](https://github.com/bootstrap-vue/bootstrap-vue/compare/v2.4.0...v2.4.1)

Released: 2020-02-12

### Bug Fixes v2.4.1

- **b-form-input, b-form-textarea:** handle change event for all mobile device keyboards (closes
  [#4724](https://github.com/bootstrap-vue/bootstrap-vue/issues/4724))
  ([#4739](https://github.com/bootstrap-vue/bootstrap-vue/issues/4739))
  ([166a932](https://github.com/bootstrap-vue/bootstrap-vue/commit/166a932fb11fa552714aba7df67992e1265b9047))
- **b-tooltip, v-b-tooltip:** fix arrow margin
  ([#4727](https://github.com/bootstrap-vue/bootstrap-vue/issues/4727))
  ([865a655](https://github.com/bootstrap-vue/bootstrap-vue/commit/865a6557fbf49115c05326f9a96c4f9fdf135e96))

### Other v2.4.1

- dev dependency updates
- minor docs updates

<a name=""2.4.0""></a>

## [v2.4.0](https://github.com/bootstrap-vue/bootstrap-vue/compare/v2.3.0...v2.4.0)

Released: 2020-02-01

### Features v2.4.0

- **b-modal:** add `ignore-enforce-focus-selector` prop (closes
  [#4537](https://github.com/bootstrap-vue/bootstrap-vue/issues/4537))
  ([#4702](https://github.com/bootstrap-vue/bootstrap-vue/issues/4702))
  ([c3ac992](https://github.com/bootstrap-vue/bootstrap-vue/commit/c3ac99283927b5261d1df05d3c479c534011d7c5))
- **b-nav-item-dropdown:** add `boundary` prop, applicable when not in `b-navbar` (closes
  [#4684](https://github.com/bootstrap-vue/bootstrap-vue/issues/4684))
  ([#4691](https://github.com/bootstrap-vue/bootstrap-vue/issues/4691))
  ([3a50ad8](https://github.com/bootstrap-vue/bootstrap-vue/commit/3a50ad85e85e1c6dc55a36665062180687078708))

### Bug Fixes v2.4.0

- **b-dropdown:** focus-in handling for Safari and Firefox on macOS/iOS (closes
  [#4328](https://github.com/bootstrap-vue/bootstrap-vue/issues/4328))
  ([#4426](https://github.com/bootstrap-vue/bootstrap-vue/issues/4426))
  ([2eab55b](https://github.com/bootstrap-vue/bootstrap-vue/commit/2eab55b4672a35a487b30f0f64c63b887b361473))
- **b-form-input, b-form-textarea:** properly handle out-of-sync values (closes
  [#4695](https://github.com/bootstrap-vue/bootstrap-vue/issues/4695))
  ([#4701](https://github.com/bootstrap-vue/bootstrap-vue/issues/4701))
  ([954176d](https://github.com/bootstrap-vue/bootstrap-vue/commit/954176d733dccdd074f5b6cb31c4041081a3b206))

<a name=""2.3.0""></a>

## [v2.3.0](https://github.com/bootstrap-vue/bootstrap-vue/compare/v2.2.2...v2.3.0)

Released: 2020-01-24

### Features v2.3.0

- **b-button-close:** add `content` prop
  ([#4574](https://github.com/bootstrap-vue/bootstrap-vue/issues/4574))
  ([7379c6d](https://github.com/bootstrap-vue/bootstrap-vue/commit/7379c6dd0bac76307720645080741b3b0ed7ed99))
- **b-form-tags:** new option to specify input type (closes
  [#4644](https://github.com/bootstrap-vue/bootstrap-vue/issues/4644))
  ([#4645](https://github.com/bootstrap-vue/bootstrap-vue/issues/4645))
  ([b899fac](https://github.com/bootstrap-vue/bootstrap-vue/commit/b899faceb4c1fd8562454fa93432e70d7113401b))
- **b-pagination, b-pagination-nav:** add page button class props and option to show first/last page
  numbers (closes [#4597](https://github.com/bootstrap-vue/bootstrap-vue/issues/4597),
  [#4533](https://github.com/bootstrap-vue/bootstrap-vue/issues/4533))
  ([#4622](https://github.com/bootstrap-vue/bootstrap-vue/issues/4622))
  ([3a3ee1d](https://github.com/bootstrap-vue/bootstrap-vue/commit/3a3ee1dc9312a1a8c530a5ea42d1d239d5a24351))
- **icons:** add stacking support
  ([#4658](https://github.com/bootstrap-vue/bootstrap-vue/issues/4658))
  ([b185cdb](https://github.com/bootstrap-vue/bootstrap-vue/commit/b185cdb686ddddcde1b98585b1fbc48859fc541a))

### Bug Fixes v2.3.0

- **v-b-modal:** only unbind/rebind during componentUpdated hook if trigger element or modal ID
  changes (closes [#4669](https://github.com/bootstrap-vue/bootstrap-vue/issues/4669))
  ([#4672](https://github.com/bootstrap-vue/bootstrap-vue/issues/4672))
  ([e53a05d](https://github.com/bootstrap-vue/bootstrap-vue/commit/e53a05d960a9de0ca9636ee31e0197e7e554ddbc))
- **utils:** pass all Array/Object util shortcuts as functions, for handling late loaded polyfills
  ([#4647](https://github.com/bootstrap-vue/bootstrap-vue/issues/4647))
  ([f584425](https://github.com/bootstrap-vue/bootstrap-vue/commit/f5844256a03d2f4b8006900419acfa2c5e3803c3))

<a name=""2.2.2""></a>

## [v2.2.2](https://github.com/bootstrap-vue/bootstrap-vue/compare/v2.2.1...v2.2.2)

Released: 2020-01-15

### Bug Fixes v2.2.2

- **nuxt module:** remove unnecessary export statements
  ([#4624](https://github.com/bootstrap-vue/bootstrap-vue/issues/4624))
  ([27f066c](https://github.com/bootstrap-vue/bootstrap-vue/commit/27f066cfa07ee311fe1e312d9a9ebd0eb76750c7))

### Other v2.2.2

- dev dependencies updates
- minor docs updates

<a name=""2.2.1""></a>

## [v2.2.1](https://github.com/bootstrap-vue/bootstrap-vue/compare/v2.2.0...v2.2.1)

Released: 2020-01-13

### Bug Fixes v2.2.1

- **icons:** make icon transform props work with IE 11 (closes
  [#4607](https://github.com/bootstrap-vue/bootstrap-vue/issues/4607))
  ([#4608](https://github.com/bootstrap-vue/bootstrap-vue/issues/4608))
  ([899779f](https://github.com/bootstrap-vue/bootstrap-vue/commit/899779f20015f719198a763136137eea01aa11ea))
- **types:** add missing declarations for `b-form-select-option` & `b-form-select-option-group`
  ([#4595](https://github.com/bootstrap-vue/bootstrap-vue/issues/4595))
  ([8d60832](https://github.com/bootstrap-vue/bootstrap-vue/commit/8d60832d38e74231a4bda15aa045b84aae97d2ed))
- **types:** include named export BootstrapVue in declaration file
  ([#4590](https://github.com/bootstrap-vue/bootstrap-vue/issues/4590))
  ([603307a](https://github.com/bootstrap-vue/bootstrap-vue/commit/603307aeccf6141b94eff2186baee4ec43439033))
- **modal, tooltips, popovers**: remove `nextTick` delay when updating content in transporter portal
  (closes [#4589](https://github.com/bootstrap-vue/bootstrap-vue/issues/4589))
  ([#4604](https://github.com/bootstrap-vue/bootstrap-vue/issues/4604))
  ([0e3e7e0](https://github.com/bootstrap-vue/bootstrap-vue/commit/0e3e7e03370685367ac69949e596c9fff5c68163))
- **utils:** correct `identity` spelling error
  ([#4579](https://github.com/bootstrap-vue/bootstrap-vue/issues/4579))
  ([7fed191](https://github.com/bootstrap-vue/bootstrap-vue/commit/7fed1911d6d9f7eae81526010483c71e1679e770))

### Docs v2.2.1

- add live validation examples in validation reference section
  ([#4584](https://github.com/bootstrap-vue/bootstrap-vue/issues/4584))
  ([aca4a5c](https://github.com/bootstrap-vue/bootstrap-vue/commit/aca4a5c8f9a9ed0d7526de396ff072f0c1f4ebdf))

### Other v2.2.1

- dev dependencies updates

<a name=""2.2.0""></a>

## [v2.2.0](https://github.com/bootstrap-vue/bootstrap-vue/compare/v2.1.0...v2.2.0)

Released: 2020-01-08

### Overview v2.2.0

- New optional icon components based on `BootstrapIcons v1.0.0-alpha2`
- New tagged input component `<b-form-tags>`
- Support for `Bootstrap v4.4.1` CSS/SCSS

### Features v2.2.0

- **icons:** new optional icon components
  ([#4489](https://github.com/bootstrap-vue/bootstrap-vue/issues/4489))
  ([d2bef17](https://github.com/bootstrap-vue/bootstrap-vue/commit/d2bef1715636fcb83de6d51808683e6feda671d0))
- **b-collapse:** add new prop `appear` to animate an initially visible collapse
  ([#4317](https://github.com/bootstrap-vue/bootstrap-vue/issues/4317))
  ([136a72b](https://github.com/bootstrap-vue/bootstrap-vue/commit/136a72b0352d4bb1339ab31f791087cbcda42fa5))
- **b-collapse:** add optional scoping to default slot
  ([#4405](https://github.com/bootstrap-vue/bootstrap-vue/issues/4405))
  ([8e95bac](https://github.com/bootstrap-vue/bootstrap-vue/commit/8e95bacf9d00562f2676689d067ae0db009cbbb6))
- **b-container:** add support for Bootstrap v4.4.x new responsive containers
  ([0e318f4](https://github.com/bootstrap-vue/bootstrap-vue/commit/0e318f4755e65eb569dcc579938d0d72c02abd62))
- **b-dropdown:** add splitClass property to dropdown component
  ([#4394](https://github.com/bootstrap-vue/bootstrap-vue/issues/4394))
  ([a5f342e](https://github.com/bootstrap-vue/bootstrap-vue/commit/a5f342e0e4de2186259e36e42cecda8c20e1c8ab))
- **b-dropdown-form:** new `form-class` prop for adding classes to the form element (closes
  [#4474](https://github.com/bootstrap-vue/bootstrap-vue/issues/4474))
  ([#4475](https://github.com/bootstrap-vue/bootstrap-vue/issues/4475))
  ([eef4200](https://github.com/bootstrap-vue/bootstrap-vue/commit/eef4200976f7921b1bb03f50c0ece8ee7c41ed0e))
- **b-form-select:** add group/tree support and dedicated option and option-group components (closes
  [#3222](https://github.com/bootstrap-vue/bootstrap-vue/issues/3222))
  ([#4267](https://github.com/bootstrap-vue/bootstrap-vue/issues/4267))
  ([f1ed017](https://github.com/bootstrap-vue/bootstrap-vue/commit/f1ed0177c20f9d7e7e340a8815d1b6bc66f7cb76))
- **b-form-select:** support paths for `valueField`, `textField`, `htmlField` and `disabledField`
  props ([#4386](https://github.com/bootstrap-vue/bootstrap-vue/issues/4386))
  ([ed3b736](https://github.com/bootstrap-vue/bootstrap-vue/commit/ed3b7360af415dc3cc56f0b6662c9d48cc165781))
- **b-form-tags:** new tagged input component
  ([#4409](https://github.com/bootstrap-vue/bootstrap-vue/issues/4409))
  ([00eb9d9](https://github.com/bootstrap-vue/bootstrap-vue/commit/00eb9d9fd460adca8227b3b344284b5cc49a734f))
- **b-row:** add Bootstrap v4.4 row columns support
  ([#4439](https://github.com/bootstrap-vue/bootstrap-vue/issues/4439))
  ([833b028](https://github.com/bootstrap-vue/bootstrap-vue/commit/833b028a2d6101d01b7012a7378359db1c801695))
- **b-table:** better sort labeling for screen readers (closes
  [#4487](https://github.com/bootstrap-vue/bootstrap-vue/issues/4487))
  ([#4488](https://github.com/bootstrap-vue/bootstrap-vue/issues/4488))
  ([d4e66fa](https://github.com/bootstrap-vue/bootstrap-vue/commit/d4e66fa48fdd1cd7fd4b93907fe999de3fc577f8))
- **b-table, b-table-lite:** new `tbody-tr-attr` prop for arbitrary row attributes (closes
  [#1864](https://github.com/bootstrap-vue/bootstrap-vue/issues/1864))
  ([#4481](https://github.com/bootstrap-vue/bootstrap-vue/issues/4481))
  ([4acf6ed](https://github.com/bootstrap-vue/bootstrap-vue/commit/4acf6ed863dd5edd85897a01b099c42322097d1b))
- **b-tooltip:** add `noninteractive` prop (closes
  [#4556](https://github.com/bootstrap-vue/bootstrap-vue/issues/4556))
  ([#4563](https://github.com/bootstrap-vue/bootstrap-vue/issues/4563))
  ([b3ad726](https://github.com/bootstrap-vue/bootstrap-vue/commit/b3ad7264d9b10fb1b8dfba70c62eed11a56519d6))
- **build:** configure pre-commit hook (closes
  [#4532](https://github.com/bootstrap-vue/bootstrap-vue/issues/4532))
  ([#4552](https://github.com/bootstrap-vue/bootstrap-vue/issues/4552))
  ([1bf9e59](https://github.com/bootstrap-vue/bootstrap-vue/commit/1bf9e59e8888a7a2cd6f135665103419f603a32d))

### Bug Fixes v2.2.0

- **b-table, b-table-lite:** handle edge case with row events when table is removed from dom.
  instantiate row event handlers only when listeners are registered (fixes
  [#4384](https://github.com/bootstrap-vue/bootstrap-vue/issues/4384))
  ([#4388](https://github.com/bootstrap-vue/bootstrap-vue/issues/4388))
  ([9a81cd4](https://github.com/bootstrap-vue/bootstrap-vue/commit/9a81cd414a2c534b96de0d82c3d00d94651e5a7b))
- **b-toast:** fix internal `ensureToaster` method call when toaster name changes
  ([#4468](https://github.com/bootstrap-vue/bootstrap-vue/issues/4468))
  ([744bb7a](https://github.com/bootstrap-vue/bootstrap-vue/commit/744bb7a77092a04184af31bf285e432110e1ab44))
- **tooltips, popovers:** fix memory leak (closes
  [#4400](https://github.com/bootstrap-vue/bootstrap-vue/issues/4400))
  ([#4401](https://github.com/bootstrap-vue/bootstrap-vue/issues/4401))
  ([c71352d](https://github.com/bootstrap-vue/bootstrap-vue/commit/c71352d674347e5e2d72fe8b82334fc87a4ffd8c))
- **docs:** handle undocumented breaking changes in babel-standalone for IE 11
  ([#4484](https://github.com/bootstrap-vue/bootstrap-vue/issues/4484))
  ([56f8bb5](https://github.com/bootstrap-vue/bootstrap-vue/commit/56f8bb5af7fb7188da035210e8be28d7ae1c7bc1))


</details>


# Bootstrap's Changelogs from `4.3.1` to `4.4.1`

<details>

### v4.4.1

- Fix Dart Sass compatibility
- Add :disabled for disabled fieldset

### v4.4.0

Highlights
Here's what you need to know about v4.4.0. Remember that with every minor and major release of Bootstrap, we ship a new URL for our hosted docs to ensure URLs continue to work.- New responsive containers! Over a year in the making, fluid up to a particular breakpoint, available for all responsive tiers.

- New responsive .row-cols classes for quickly specifying the number of columns across breakpoints. This one is huge for those of you who have asked for responsive card decks.
- New escape-svg() function for simplifying our embedded background-image SVGs for forms and more.
- New add() and subtract() functions for avoiding errors and zero values from CSS's built in calc feature.
- New make-col-auto() mixin to make our .col-auto class available with custom HTML.
- Fixed an issue with Microsoft Edge not picking up :disabled styles by moving selectors to [disabled].
- Deprecated: bg-variant(), nav-divider(), and form-control-focus() mixins are now deprecated as they're going away in v5.
- Updated our spacing and alignment for modal footer elements like buttons to automatically wrap when space is constrained.
- More flexible form control validation styles thanks to fewer chained selectors. Also updated the :invalid validation icon to be an alert instead of an &times; to avoid confusion with browser functionality for clearing the form field value.
- Fixed a couple dozen CSS and JS bugs.
- Moved to GitHub Actions for CI/CD! Expect more updates to our CI setup over time here while Actions evolves.
- Updated documentation to fix links and typos, improved landmarks for secondary navigation, and a new security doc for guidelines on reporting potential vulnerabilities.

</details>

# Key takeaways

Looking at BootsrapVue's and Bootstrap's changelogs, here a few key takeaways that we might want to consider.

Upgrading to BootstrapVue `2.13.0` brings in a few new components and directives, most notably:

- [`<b-form-datepicker>`](https://bootstrap-vue.org/docs/components/form-datepicker)
- [`<b-calendar>`](https://bootstrap-vue.org/docs/components/calendar)
- [`<b-sidebar>`](https://bootstrap-vue.org/docs/components/sidebar)
- [`<b-aspect>`](https://bootstrap-vue.org/docs/components/aspect)
- [`<b-form-spinbutton>`](https://bootstrap-vue.org/docs/components/form-spinbutton)
- [`<b-time>`](https://bootstrap-vue.org/docs/components/time)
- [`<b-form-tags>`](https://bootstrap-vue.org/docs/components/form-tags)
- [`v-b-visible`](https://bootstrap-vue.org/docs/directives/visible)

Bootstrap itself comes with some style updates, some of which seem to impact our components visually:

- Modals' footer spacing has been adjusted, resulting in slight visual diff in `GlModal`:

![storyshots-spec-js-image-storyshots-base-modal-opened-modal-1-diff](/uploads/47200cf4d2501eae297451019d0e7780/storyshots-spec-js-image-storyshots-base-modal-opened-modal-1-diff.png)

Modals are widely used in GitLab's projects, but this impact seems acceptable considering that `GlModal` doesn't comply with Pajamas specifications at the moment. Let's smoke test a few modals in GitLab anyway, to make sure there aren't unexpected effect to this change.


- [Flush list groups](https://getbootstrap.com/docs/4.0/components/list-group/#flush) now remove the top border from the first list item, which impacts `GlPaginatedList`:

![storyshots-spec-js-image-storyshots-base-paginated-list-default-1-diff](/uploads/a406894af3b047e280586e3016769940/storyshots-spec-js-image-storyshots-base-paginated-list-default-1-diff.png)

This has a very low impact on GitLab as `GlPaginatedList` is only used in the **License Compliance** app:

| **Before** | **After** |
| ------ | ------ |
| ![image](/uploads/97010196daa37cf7f97bfe38baf6180f/image.png) | ![image](/uploads/a8ac7a3b6ed956f196805d8d453594e5/image.png) |


Overall, there doesn't seem to be any negative impact.

/cc @ealcantara",3
32748785,2020-04-01 18:00:41.320,Remove outdated links from new_button.md,Fix outdated link in `src/components/base/new_button/new_button.md`,1
31943476,2020-03-13 01:10:18.404,Improve GlIntersectionObserver performance,"## Description

The [`GlIntersectionObserver`](https://gitlab.com/gitlab-org/gitlab-ui/blob/314dda4b7e37ba103daaa797c37a718d504a5b3c/src/components/utilities/intersection_observer/intersection_observer.vue#L1) creates an [IntersectionObserver](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver) for every instance. When implementing the [`GlResizeObserver`](https://gitlab.com/gitlab-org/gitlab-ui/blob/225bf66a8818cbf7f74ae1339b8f19b856f25352/src/directives/resize_observer/resize_observer.js#L6) we learned that these observers are [meant to be shared](https://github.com/WICG/ResizeObserver/issues/59). This is because there's a bottleneck with passing messages from the native environment to the JavaScript environment.

## Demo

Here's a patch that creates a 100x10 table filled with `gl-intersection-observers` which each update with the [`intersectionRatio`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry/intersectionRatio) of the triggered event.

[0001-wip-big-table-example.patch](/uploads/287d49589b28d2182f76f6fc1298341f/0001-wip-big-table-example.patch)

| Observers created for every instance (on `master`) | Observers shared (this proposal) |
|---------|----------|
| ![20200311_lots_of_intersection_observers_slow](/uploads/8fae9d5c39c6db4d1eabd1afd4c05b1f/20200311_lots_of_intersection_observers_slow.mp4) | ![20200311_shared_intersection_observer](/uploads/a530a94a856ba91e2e5f9e99cbd5380b/20200311_shared_intersection_observer.mp4) |

- Notice that the first example the numbers take a long time to update. This is because there's a huge lag for triggering every ""IntersectionObservable"" callback.
- *side note:* I'm not sure where the decimals come from, but I think this has to do with the experimental nature of IntersectionObserver :shrug:
- Here's a dummy WIP patch used for the ""Observers shared"" example: [0002-wip-shared-intersection-observer.patch](/uploads/a4e94b9cce363c0a1b8f9660f46e98ab/0002-wip-shared-intersection-observer.patch)


## Proposal

I suggest following the implementation of [`ResizeObserver`](https://gitlab.com/gitlab-org/gitlab-ui/blob/225bf66a8818cbf7f74ae1339b8f19b856f25352/src/directives/resize_observer/resize_observer.js#L6) as an example for this behavior: 

- Let's just create one intersection observable for now (later we can figure out what to do if we want some more explicit options)
- Let's move this to a directive (this way we don't create unnecessary `<div>`s)",2
31614405,2020-03-05 12:37:13.315,Extend generate component to include basic unit test,"When you run `yarn generate:component`, there is no base unit test created alongside the component file scaffold, nor is there any indication of where to add a test. 

So we will:

1. Add a very basic unit test scaffold to `yarn generate:component`
2. Extend the [contribute guide](https://gitlab.com/gitlab-org/gitlab-ui/-/doc/contributing/adding_components.md) to include information about adding component unit tests.",1
31532459,2020-03-04 08:18:42.229,Add Navbar Component,"Coming from this comment: https://gitlab.com/gitlab-org/status-page/-/merge_requests/3#note_298425624

We are currently building the status page MVC and using the `gitlab/ui` lib heavily. 

One thing we would like is the ability to import a navbar/header from `gitlab/ui` which relies on the [bootstrap-vue navbar](https://bootstrap-vue.js.org/docs/components/navbar/) instead of needing to maintain custom header vue files and css.

Given that, I am opening this issue to tackle the idea of adding a header/navbar component to the library.",2
31081051,2020-02-20 14:56:21.173,GlSearchBoxByType debounce prop support,"## The issue

Based on a conversation with @kushalpandya found here: https://gitlab.com/gitlab-org/gitlab/-/merge_requests/25061#note_290719425

`GlSearchBoxByType` wraps `BFormInput` but doesn't support the `debounce` functionality that the bootstrap form input does.

More information can be read here: https://bootstrap-vue.js.org/docs/components/form-input/#debounce-support

## Examples

```html
<gl-search-box-by-type v-model=""namespaceSearch"" :debounce=""500"" class=""m-2"" />
```

**Network Tab:**
![Screen_Shot_2020-02-20_at_8.44.20_AM](/uploads/793a13dbf3ba09e83890ed7da22acb24/Screen_Shot_2020-02-20_at_8.44.20_AM.png)

```html
<b-form-input v-model=""namespaceSearch"" :debounce=""500"" class=""m-2"" />
```

**Network Tab:**
![Screen_Shot_2020-02-20_at_8.43.10_AM](/uploads/a4cb18063d65b213eccbeda3390de162/Screen_Shot_2020-02-20_at_8.43.10_AM.png)

## Proposal

**Support the following props**

```js
debounce: {
  type: Integer
}
```

This would stop the model from updating until the debounce time has occurred",2
29876826,2020-01-23 10:00:23.127,GlAvatarsInline: Add tooltip to badge,"When using `GlAvatarsInline`, a badge next to the avatars shows the number of remaining avatars when the total number of avatars exceeds the given `maxVisible` prop. Let's add a tooltip to the badge which shows the names.

We should consider the following:
1. We need to specify a prop which will be used for the tooltip content
2. We might need to add a threshold prop (either a `max characters to display` or `max names to display` so in case the of a large number of remaining avatars, the tooltip won't bloat.
3. We should also truncate the tooltip text via JS (and append `...`) when the threshold from (2) is exceeded.

",1
29819740,2020-01-21 19:30:02.777,Add operator to filtered search,"In https://gitlab.com/gitlab-org/gitlab/merge_requests/19011, we added the ability to have an operator filter (NOT, AND). In order to integrate filtered search into the GitLab product completely, we'll have to add this to filtered-search in gitlab-ui.",3
29712681,2020-01-17 18:48:44.957,Fix fonts size of help text in radios/checkboxes,"The following discussion from gitlab-org/gitlab-services/design.gitlab.com!1651 should be addressed:

- [ ] @pedroms started a [discussion](https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/merge_requests/1651#note_271309985):  (+4 comments)

    > @jboyson unsure if related to this MR, the help text paragraph `p` has an odd font-size:
    > 
    > ![image](/uploads/ee7235e8b6dbb5c4fc7c245a234a0685/image.png)",1
29604263,2020-01-14 18:50:23.211,Add disabled option to radio example,"The following discussion from !1651 should be addressed:

- [ ] @jboyson started a [discussion](https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/merge_requests/1651#note_261290489):  (+4 comments)

    > @pedroms review please. Please let me know if you think we need a more detailed example.",1
29588969,2020-01-14 12:16:16.893,"Follow-up from ""ci: add automated integration branch CI job""","When https://gitlab.com/gitlab-org/gitlab/issues/22638 is merged, let's refactor the `create_integration_branch` CI job so it reads the package's URL from environment variables rather than passing through file artifacts.

The following discussion from !1007 should be addressed:

- [ ] @pgascouvaillancourt started a [discussion](https://gitlab.com/gitlab-org/gitlab-ui/merge_requests/1007#note_270619808):  (+1 comment)

    > **note:** We won't need to write the URL to a file anymore once https://gitlab.com/gitlab-org/gitlab/issues/22638 is resolved",1
29434322,2020-01-09 09:04:54.047,Abstract access to `nextTick()` in Jest tests into a utility function,"This is about craziness like `wrapper.vm.nextTick()` and it's bad-brother `vm.vm.nextTick()`.

The following discussion from !999 should be addressed:

- [ ] @ntepluhina started a [discussion](https://gitlab.com/gitlab-org/gitlab-ui/merge_requests/999#note_268989062):  (+1 comment)

    > **nitpick**: out of the scope of the MR but `vm.vm` is triggering me so much :sweat_smile: could we use something like `wrapper` in future tests to distinguish VTU `Wrapper` from the actual Vue instance?

One of the possible solutions: manually update all suits with [the suggestion](https://gitlab.com/gitlab-org/gitlab-ui/merge_requests/999#note_268739060) from https://gitlab.com/gitlab-org/gitlab-ui/merge_requests/999.

However, a more abstract universal utility shared between all suits automatically would be preferable.",2
53813668,2020-01-08 23:16:56.800,"Follow-up from ""Add Search examples and mark search as built""","The following discussion from gitlab-org/gitlab-services/design.gitlab.com!1655 should be addressed:

- [ ] @tauriedavis started a [discussion](https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/merge_requests/1655#note_268796592):  (+3 comments)

    > Also I don't understand this text that says to set the content to ""Something else""
    > 
    > ![Screen_Shot_2020-01-08_at_10.44.30_AM](/uploads/2df1808315cbf97977e710871bfaf4f3/Screen_Shot_2020-01-08_at_10.44.30_AM.png)
    > 
    > Should that be removed?

# Solution

Remove text button from below search bar",1
29367090,2020-01-07 12:18:37.081,Migrate away from deprecated slots syntax,"The following discussion from !993 should be addressed:

- [ ] @ntepluhina started a [discussion](https://gitlab.com/gitlab-org/gitlab-ui/merge_requests/993#note_267967306): 

    > **nitpick**: Again, outside the current MR's scope :sweat_smile: `slot` attribute has been deprecated since Vue 2.6, could we please create a follow-up issue to replace them with `v-slot` directive? Warning: this might affect unit tests as vue-test-utils still work with Vue 2.5 syntax and you will need to stub a component to test its slots.",2
27266277,2019-11-20 16:28:50.674,Prevent style leaking into components,"## The issue

Inheritable styles are being overridden. For example, Pajamas often leaks `line-height` and adds margins to headings (see image below).

## The fix? :thinking: 

Create a class that explicitly sets all known inheritable properties, and use this class on all components.

ex:

```css
.gl-reset {
  line-height: 1rem;
  font-size: 1rem;
  ...
}
```

## Build tool update? :thinking: 

Remembering to add `.gl-reset` to every component is potentially error-prone. Is it possible to update webpack to auto-include this class for every component?

## List of known inheritable properties

* border-collapse
* border-spacing
* caption-side
* color
* cursor
* direction
* empty-cells
* font-family
* font-size
* font-style
* font-variant
* font-weight
* font-size-adjust
* font-stretch
* font
* letter-spacing
* line-height
* list-style-image
* list-style-position
* list-style-type
* list-style
* orphans
* quotes
* tab-size
* text-align
* text-align-last
* text-decoration-color
* text-indent
* text-justify
* text-shadow
* text-transform
* visibility
* white-space
* widows
* word-break
* word-spacing
* word-wrap

## Example of the issue

https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/merge_requests/1620#note_245401786

![image](/uploads/3927ca1641e8f80faad09d30a6676136/image.png)

## What success looks like

* [ ]  Ensure all current demos on design tab match design specs",2
26686666,2019-11-04 22:44:46.435,Use sass functions for box-shadow utilities,"box-shadows do not lend themselves well to be ""just"" utility classes. We need some functions to make it easier to maintain shadows for use in components such as toggles, and buttons.

The following discussion from !876 should be addressed:

- [ ] @jboyson started a [discussion](https://gitlab.com/gitlab-org/gitlab-ui/merge_requests/876#note_239100122):  (+4 comments)

    > @ealcantara can I get some feedback on how I'm proceeding with these? This is the duplicate ""boilerplate"" code I was talking about.",1
26532167,2019-10-31 16:52:34.039,Add toggle and label composition examples,"Add examples for different use cases with toggles.

For example, label on either side, above, with help text.

Details :point_right:  https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/issues/279#note_237461152",1
26498291,2019-10-30 18:41:00.865,Use default import for files using `raw-loader`,"## Description

There are a number of files where we use 

```
import * as description form './something.md';
``` 

instead of a simple 

```
import description from './something.md';
```

It's surprising that these both work, but let's try to be consistent and use the [expected default export](https://github.com/webpack-contrib/raw-loader).

## The list

```
git grep -E ""import \\*.*md['\""]""

src/components/base/avatar/avatar.documentation.js
src/components/base/avatar_labeled/avatar_labeled.documentation.js
src/components/base/avatar_link/avatar_link.documentation.js
src/components/base/breadcrumb/breadcrumb.documentation.js
src/components/base/button/button.documentation.js
src/components/base/button_group/button_group.documentation.js
src/components/base/datepicker/datepicker.documentation.js
src/components/base/daterange_picker/daterange_picker.documentation.js
src/components/base/dropdown/dropdown.documentation.js
src/components/base/dropdown/dropdown_divider.documentation.js
src/components/base/dropdown/dropdown_header.documentation.js
src/components/base/dropdown/dropdown_item.documentation.js
src/components/base/form/form_checkbox/form_checkbox.documentation.js
src/components/base/form/form_group/form_group.documentation.js
src/components/base/form/form_input/form_input.documentation.js
src/components/base/form/form_radio/form_radio.documentation.js
src/components/base/form/form_select/form_select.documentation.js
src/components/base/form/form_textarea/form_textarea.documentation.js
src/components/base/friendly_wrap/friendly_wrap.documentation.js
src/components/base/icon/icon.documentation.js
src/components/base/infinite_scroll/infinite_scroll.documentation.js
src/components/base/intersperse/intersperse.documentation.js
src/components/base/link/link.documentation.js
src/components/base/loading_icon/loading_icon.documentation.js
src/components/base/modal/modal.documentation.js
src/components/base/new_button/new_button.documentation.js
src/components/base/new_dropdown/dropdown_divider.documentation.js
src/components/base/new_dropdown/dropdown_header.documentation.js
src/components/base/new_dropdown/dropdown_item.documentation.js
src/components/base/new_dropdown/new_dropdown.documentation.js
src/components/base/paginated_list/paginated_list.documentation.js
src/components/base/pagination/pagination.documentation.js
src/components/base/search_box_by_click/search_box_by_click.documentation.js
src/components/base/search_box_by_type/search_box_by_type.documentation.js
src/components/base/skeleton_loading/skeleton_loading.documentation.js
src/components/base/sorting/sorting.documentation.js
src/components/base/sorting/sorting_item.documentation.js
src/components/base/table/table.documentation.js
src/components/base/tabs/tab/tab.documentation.js
src/components/base/tabs/tabs/tabs.documentation.js
src/components/base/toast/toast.documentation.js
src/components/base/tooltip/tooltip.documentation.js
src/components/charts/area/area.documentation.js
src/components/charts/chart/chart.documentation.js
src/components/charts/column/column.documentation.js
src/components/charts/discrete_scatter/discrete_scatter.documentation.js
src/components/charts/heatmap/heatmap.documentation.js
src/components/charts/legend/legend.documentation.js
src/components/charts/line/line.documentation.js
src/components/charts/series_label/series_label.documentation.js
src/components/charts/single_stat/single_stat.documentation.js
src/components/charts/stacked_column/stacked_column.documentation.js
src/components/charts/tooltip/tooltip.documentation.js
src/components/regions/dashboard_skeleton/dashboard_skeleton.documentation.js
src/components/regions/empty_state/empty_state.documentation.js
src/directives/resize_observer/resize_observer.documentation.js
```",1
26329461,2019-10-25 20:38:56.437,Prevent `segmented_control` forever loop edge case,"## Description

There's an extreme edge case where usage of `segmented_control` could produce a forever loop. Let's figure out a nice way to prevent this from **ever** happening.

## Context

The following discussion from !689 should be addressed:

- [ ] @pslaughter started a [discussion](https://gitlab.com/gitlab-org/gitlab-ui/merge_requests/689#note_235853534):  (+3 comments)

    > **suggestion (non-blocking):** I just realized that there's some cases where this `$emit('input')` on `watch('checked')` can cause a forever loop. Obviously we can't prevent the client of this component from doing something dangerous... If you think we can improve this, maybe it's worth a follow up issue :shrug:
    > 
    > While we're here what do you think of adding this bit where we don't submit a `oldValue` suggestion if it's equal to the new value (which can happen if they are objects/arrays). It's a bit paranoid I know....
    > 
    > <details>
    > 
    > ```patch
    > diff --git a/src/components/base/segmented_control/segmented_control.vue b/src/components/base/segmented_control/segmented_control.vue
    > index 5906b8dd..0f8e63e2 100644
    > --- a/src/components/base/segmented_control/segmented_control.vue
    > +++ b/src/components/base/segmented_control/segmented_control.vue
    > @@ -47,8 +47,12 @@ export default {
    >        if (!this.enabledOptions.some(({ value }) => value === newValue)) {
    >          // eslint-disable-next-line no-console
    >          console.warn(genericErrorMessage);
    > +
    > +        // prevent a forever loop when values are objects
    > +        const suggestion = oldValue && newValue !== oldValue ? oldValue : null;
    > +
    >          if (this.enabledOptions.length) {
    > -          this.$emit('input', oldValue || this.enabledOptions[0].value);
    > +          this.$emit('input', suggestion || this.enabledOptions[0].value);
    >          }
    >        }
    >      },
    > 
    > ```
    > 
    > </details>

/cc @xanf",2
26011100,2019-10-16 17:01:37.290,Build text badges,"Build **text-only** variations of badges: https://gitlab-org.gitlab.io/gitlab-design/hosted/design-gitlab-specs/badges-spec-previews/

Take into account **size** and **color** variations.

![image](/uploads/a6cf8a393ea1a169e9aba4e3b3842e4d/image.png)",1
26011010,2019-10-16 16:57:17.568,Style text badges,"Style **text-only** variations of badges: https://design.gitlab.com/components/badge#design-specifications

Take into account **size** and **color** variations, and ignore the icons for now.

![Screenshot_from_2020-04-21_15-33-00](/uploads/0bc742ac131af789a037a0e422bea929/Screenshot_from_2020-04-21_15-33-00.png)

## Tasks

* [x]  Implement in GitLab UI https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/1248
    * [x]  Make old `GlBadge` available as `GlDeprecatedBadge`
    * [x]  Implement new badge available as `GlBadge`
* [ ]  Create integration MR for GitLab ~~https://gitlab.com/gitlab-org/gitlab/-/merge_requests/28356~~ https://gitlab.com/gitlab-org/gitlab/-/merge_requests/31646
* [ ]  Create integration MR for [Status Page](https://gitlab.com/gitlab-org/status-page/)  ~~(currently blocked by https://gitlab.com/gitlab-org/status-page/-/merge_requests/78)~~ https://gitlab.com/gitlab-org/status-page/-/merge_requests/90
* [-]  Create integration MR for [Customer Portal](https://gitlab.com/gitlab-org/customers-gitlab-com)
    *  It turns out the Customer Portal doesn't use `GlBadge`, so no integration MR is necessary!
* [x] Create epic to migrate `GlDeprecatedBadge` usage to `GlBadge` https://gitlab.com/groups/gitlab-org/-/epics/3280
* [x]  Open issue under https://gitlab.com/groups/gitlab-org/-/epics/2964 to tackle slightly-wrong colours (https://gitlab.com/gitlab-org/gitlab/-/merge_requests/28356#note_337466265)
    * https://gitlab.com/gitlab-org/gitlab/-/issues/213570 will address the grays being different between gitlab-ui and GitLab. ",2
26004139,2019-10-16 14:31:12.260,Add a close button component,"Some components (e.g., [alert](#454), [banner](#453)) include a close/dismiss button. It makes sense to extract this into a dedicated component, much like [BootstrapVue does](https://github.com/bootstrap-vue/bootstrap-vue/blob/v2.0.0-rc.28/src/components/button/button-close.js).

cc @samdbeckham",1
25935762,2019-10-15 04:37:10.710,gl-popover-title margin 0,"From https://gitlab.com/gitlab-org/gitlab/merge_requests/18543#note_230295935

currently `.md h3` adds styles to popovers in markdown areas (i.e. chart tooltips). We should explicitly set `margin: 0` in the [popover styles](https://gitlab.com/gitlab-org/gitlab-ui/blob/79f157f1433bfc691f56aa3516f3b319bc3d0055/components/base/popover/popover.scss#L45) to prevent this",1
25705004,2019-10-08 00:35:33.404,Customizable heatmap tooltip content,"Add slot content similar to other chart components.

Currently the tooltip just displays the value (as the default tooltip used to).

It should instead have overridable slot similar to other charts",1
25549831,2019-10-02 15:35:54.323,Remove the Wiki,"After adding the [`FAQ.md`](https://gitlab.com/gitlab-org/gitlab-ui/blob/master/FAQ.md) to the repo, I realized that there was already one in the Wiki: https://gitlab.com/gitlab-org/gitlab-ui/wikis/Frequently-asked-questions

When I asked on Slack what we should to about this, @gtsiolis suggested the following:

>  **Suggestion**: To avoid this from happening again, I vote for removing wiki altogether.
Wiki is already hidden for members and completely inaccessible for anonymous users because of the missing home page. See https://gitlab.com/gitlab-org/gitlab/issues/22319, https://gitlab.com/gitlab-org/gitlab/issues/22319, etc. Not sure if dogfooding two (one of them obsolete) wiki pages brings in much value.
>
> **To-do**: Let’s merge FAQ contents and also go through the roadmap page where most of the items have been completed or replaced with newer initiatives. Maybe consider moving one or two items from the roadmap wiki to the WG epic in https://gitlab.com/groups/gitlab-org/-/epics/950 if needed.

# Todos

- [x] Move [questions](https://gitlab.com/gitlab-org/gitlab-ui/wikis/Frequently-asked-questions) from the wiki to [`FAQ.md`](https://gitlab.com/gitlab-org/gitlab-ui/blob/master/FAQ.md)
- [x] Move [items from the roadmap](https://gitlab.com/gitlab-org/gitlab-ui/wikis/Roadmap) to the [epic](https://gitlab.com/groups/gitlab-org/-/epics/950) as needed
- [x] Remove the Wiki",2
25395588,2019-09-27 20:41:55.077,Reimplement storyshots integration to allow for local testing,"Currently it is not possible to run visual regression tests locally (or update them locally) because the generated screenshots render differently from thew way they do in our CI job.  This is due to a difference in operating system and browser versions (different core OS elements, different font-rendering, etc).

I propose that we encapsulate our puppeteer/browser/os scripting for storyshots into a docker image that can be run both locally and in CI to produce deterministic visual regression snapshots regardless of ones working environment.",2
24498021,2019-09-05 13:52:28.333,Increase Chart type maintainability: Explore declarative child components,"Seems like we have a lot of chart components that have overlapping options and duplicated code. We should evaluate how to move forward with maintaining new chart types with echarts so we reduce complexity and duplication.

One suggestion can be found at https://gitlab.com/gitlab-org/gitlab-ce/issues/66393#note_207221124 and https://gitlab.com/gitlab-org/gitlab-ce/merge_requests/32361#note_211103506",5
23981163,2019-08-20 17:10:09.087,Form style updates,"1.  Textarea padding should be `8px 12px` (it's currently `6px 10px`)
2. Help text should be `#707070` (it's currently `#919191`)
3. Inputs are missing the clear icon
4.  disabled inputs styling is wrong

![Screen_Shot_2019-08-20_at_12.01.52_PM](/uploads/e02e53e354b5c741ae027bd83a219660/Screen_Shot_2019-08-20_at_12.01.52_PM.png)

4. I don't see this green validation in the specs so I'm not sure we need it here :thinking: 

![Screen_Shot_2019-08-20_at_12.04.44_PM](/uploads/cd3629764623ca9d3e5c7e32f10d9d67/Screen_Shot_2019-08-20_at_12.04.44_PM.png)




Also, we're missing several examples specified in the [specs](https://gitlab-org.gitlab.io/gitlab-design/hosted/design-gitlab-specs/forms-spec-previews/). For example, I didn't see these: 
*  an input with a character limit
*  input sizes
*  help text with a `more information` link",3
23850064,2019-08-16 18:24:23.458,Legend in stacked line chart needs spacing,"The visualMap/legend in the stacked line chart needs spacing: 

![image](/uploads/8b507a0ad9fdef29227934835b568740/image.png)

Correct spacing should be 8px",1
23822672,2019-08-16 00:25:06.125,Fix spacing in yAxis labels for charts,"The yAxis has no spacing between the labels and the borders, like so: 

![Screen_Shot_2019-08-15_at_5.20.16_PM](/uploads/75bfdcedad99c8422780c33981441395/Screen_Shot_2019-08-15_at_5.20.16_PM.png)

This is a problem in the following charts: 

* Area Chart
* Chart
* Discreet Scatter Chart
* Line Chart

It should match what's in [GitLab UI](https://gitlab-org.gitlab.io/gitlab-ui/?path=/story/charts-area-chart--default).",1
23809467,2019-08-15 14:04:39.915,Update token component to add avatar,The token component has been updated in Pajamas to include an avatar in some cases. Specs can be found here https://gitlab-org.gitlab.io/gitlab-design/hosted/design-gitlab-specs/tokens-spec-previews/,1
23637535,2019-08-09 11:33:48.722,Use rems for everything instead of pixels,"Follow-up to the discussion in https://gitlab.com/gitlab-org/gitlab-ui/merge_requests/684#note_200806252

All spacing utility classes use pixels, based on Pajamas’ spacing specifications that use an 8px grid spacing system. However, using pixels doesn't allow elements and spacing to scale correctly if the user adjusts their browser zoom level (see https://gitlab.com/gitlab-org/gitlab-ui/merge_requests/684#note_201375954)

Use rems for everything instead of pixels fixes this.

The `8px` spacing system from Pajamas uses pixels instead of rems because it's easier for everyone to understand the concept that way, and also because UI design software uses pixels. It would be harder to explain it if we said “We use 0.5rem as the base for determining our spacial system.” as this doesn't mean anything if we don't know the root size, so we would need to add “The root size is 16px”.

When translating designs to the browser, the expectation is that 16px in the design translates to 16px **rendered** in the browser, but that doesn't mean we can't use rems to specify it. So the current spacing utility classes implementation took a literal approach to the `8px` spacing system.",2
23584330,2019-08-07 18:09:46.334,Replace bootstrap overrides in the breadcrumb component,"### Problem

The breadcrumb component was added in https://gitlab.com/gitlab-org/gitlab-ui/merge_requests/387 but this also added some style overrides which affected existing components in the product like the breadcrumb for the repository path. See also relevant slack [discussion](https://gitlab.slack.com/archives/CK75EF2A2/p1565117360157200) (internal).

### Proposal

Let's replace the [overrides](https://gitlab.com/gitlab-org/gitlab-ui/blob/master/components/base/breadcrumb/breadcrumb.scss#L31-43) with `gl-*` classes.",1
23581229,2019-08-07 15:57:48.300,Add support for breadcrumb truncation,"### Problem

The initial breadcrumb component [implementation](https://gitlab.com/gitlab-org/gitlab-ui/merge_requests/387) does *not* support breadcrumb truncation.

### Proposal

Let's add support for breadcrumb truncation per [specs](https://gitlab-org.gitlab.io/gitlab-design/hosted/design-gitlab-specs/breadcrumbs-spec-previews/). See also component [documenation](https://design.gitlab.com/components/breadcrumbs#truncation) for truncation:

> Breadcrumbs should use the following rules to truncate items:
> - Use an ellipsis button to hide groups when there are three or more subgroups in the path.
> - Use an ellipsis button to hide all Wiki page breadcrumb items except the current page.
> - The top-level group and the subgroup closest to the project are never collapsed.
> - All breadcrumb items except the last one are truncated to 128px if there isn’t enough horizontal space to fit them on one line.",3
23547603,2019-08-06 15:40:52.557,Add support for opt-in avatar on every step of the breadcrumb component,"### Problem

Following the dicsussion in https://gitlab.com/gitlab-org/gitlab-ui/merge_requests/387#note_199608310, the initial breadcrumb component implemented does _not_ support opt-in avatar on every step of the breadcrumb. Since the current implementation of the breadcrumb hides or shows the avatar per need, adding support for opt-in avatar on every step of the breadcrumb component could help make this more useful.

### Proposal

Let's add support for opt-in avatar on every step of the breadcrumb.",2
23523138,2019-08-05 23:28:14.362,Add live demo of toggles,"Add demo of stacked and inline checkboxes here https://design.gitlab.com/components/toggles
Add `Vue Component` tab",1
23523123,2019-08-05 23:25:22.165,Add live demo of grouped radio buttons,"Add demo of stacked and inline checkboxes here https://design.gitlab.com/components/radio-buttons
Add `Vue Component` tab",1
23411982,2019-08-01 19:52:43.869,Avatars > avatars can be links > build,"Given the [goal of moving shared UI components](https://gitlab.com/groups/gitlab-org/-/epics/672) from gitlab-ce to gitlab-ui, gitlab-ui avatar component needs to support the features supported gitlab-ce avatar component. Clicking an avatar can take the user to a different URL. See https://gitlab.com/gitlab-org/gitlab-ce/blob/master/app/assets/javascripts/vue_shared/components/user_avatar/user_avatar_link.vue for more information of gitlab-ce avatar component",2
23411894,2019-08-01 19:46:33.072,Avatars > Add tooltip support > build,"Given the [goal of moving shared UI components](https://gitlab.com/groups/gitlab-org/-/epics/672) from gitlab-ce to gitlab-ui, gitlab-ui avatar component needs to support the features supported gitlab-ce avatar component. Tooltips support is one of them. See https://gitlab.com/gitlab-org/gitlab-ce/blob/master/app/assets/javascripts/vue_shared/components/user_avatar/user_avatar_image.vue for more information of gitlab-ce avatar component",2
23363483,2019-07-31 21:52:53.410,Follow-up: Generate arrays from SCSS lists in scss_variables module,"From this [discussion](https://gitlab.com/gitlab-org/gitlab-ui/merge_requests/623#note_198433120): 

`scss_variables` does a great job serving as a SSOT to share concepts such a colors, spacing scales, etc. between JavaScript and CSS. There is a problem in the JS side though. SASSList objects are not converted into JS Array objects by the script that generates `scss_variables.js`. Let’s improve the scss_variables generator to generate matching JS data types for SASS Lists and Maps.",2
23206553,2019-07-26 18:35:15.566,Implement new type scale specifications,"Implement type-scale according to pajamas specifications:

* [prototype](https://gitlab-org.gitlab.io/gitlab-design/hosted/pedro/%23168-responsive-type-prototype-html-previews/)
* [design specs](https://gitlab-org.gitlab.io/gitlab-design/hosted/pedro/%23168-responsive-type-spec-previews/).

Note: See related issues for a breakdown of the individual type scale components.",3
23171534,2019-07-25 20:54:43.178,Create separate variables for each design system spacing scale value,"In `variables.scss` the current representation of the spacing scale is the following:

```scss
$gl-spacing-scale: (
  0: 0,
  1: #{0.25 * $grid-size},
  2: #{0.5 * $grid-size},
  3: $grid-size,
  4: #{1.5 * $grid-size},
  5: #{2 * $grid-size},
  6: #{3 * $grid-size},
  7: #{4 * $grid-size},
  8: #{5 * $grid-size}
);
```

This representation was conceived with the purpose of automating the creation of utility classes. Since we are declaring such utilities manually, using this data structure is cumbersome. Let’s change it to separate variables:

```scss
$gl-spacing-scale-0: 0;
$gl-spacing-scale-1: 0.25 * $grid-size;
// etc
```",1
23095606,2019-07-23 21:19:42.919,Styling the Dropdown Pajamas Component within gitlab-ui,"Iterating on the the dropdown component within https://gitlab-org.gitlab.io/gitlab-ui/?path=/story/base-dropdown--default
to match the specs and usage detailed in https://design.gitlab.com/components/dropdowns/",3
23004297,2019-07-19 15:33:00.351,Label component: remove ? from scoped labels,"Once interactive popups are complete, we can use that instead of the question mark on scoped labels.

**Blocked by: https://gitlab.com/gitlab-org/gitlab/issues/27324/**",1
22974775,2019-07-18 12:59:27.583,First radio button should be `checked` in Vue example,"### Problem:

We have it as a requirement that one radio button in a set should be selected by default, however, the Vue example does not have one with the `checked` attribute.

![Screen_Shot_2019-07-18_at_7.52.26_AM](/uploads/f138c025e1f2085ba7d118628c285b9e/Screen_Shot_2019-07-18_at_7.52.26_AM.png)

### Solution:

Add `checked` to the first radio button in the group.

![Screen_Shot_2019-07-18_at_7.54.34_AM](/uploads/61e2ece3c73d395c78a3ccdff2e7c758/Screen_Shot_2019-07-18_at_7.54.34_AM.png)

### Reason:

It’s a good practice to have elements in states where they can be undone. In the case of radio buttons, once one in a group is selected, you can never unselect all to get back to the original state. For this reason, one radio button in a group should have the `checked attribute`, and typically it’s the first one unless the state reflects a previous choice.

/cc @tauriedavis",1
22703894,2019-07-11 13:33:38.127,Migrate GlProgressBar styles to gitlab-ui,Follow the guidelines described in the migration epic https://gitlab.com/groups/gitlab-org/-/epics/1590,2
22610365,2019-07-08 17:56:34.757,Update heat map tooltip to chart popover,"The current heat map component uses the default ECharts tooltip. We should use the GitLab popover component instead so that the heat map is consistent with the rest of the charts.

Current tooltip:

![Screen_Shot_2019-07-08_at_10.53.50_AM](/uploads/02e10c01c9754697d5626e4f5c871a0e/Screen_Shot_2019-07-08_at_10.53.50_AM.png)

[Expected popover](https://gitlab-org.gitlab.io/gitlab-ui/?path=/story/charts-chart-tooltip--default):

![Screen_Shot_2019-07-08_at_10.55.57_AM](/uploads/8fc8f5521d2c0d37fec18c0ee5f5c7fc/Screen_Shot_2019-07-08_at_10.55.57_AM.png)",2
22515122,2019-07-04 09:22:47.153,Remove onUpdated handler from several charts,"Since we're using `v-on=""$listeners""` on most our charts, we can remove the `onUpdated` handler as long as the handler does not implement any logic except for emitting the `updated` event.",1
22293660,2019-06-26 19:28:07.587,Document styling components guidelines,"I find it useful to have a documented pattern with code examples, like our [Vuex documentation](https://docs.gitlab.com/ee/development/fe_guide/vuex.html). I propose to have something similar for styling components in gitlab-ui.

The documentation is based on the styling component decisions documented in the RFC https://gitlab.com/gitlab-org/frontend/rfcs/issues/2

",3
21640112,2019-06-06 12:48:58.608,Toggle > Add proper styling,"This is a follow up of https://gitlab.com/gitlab-org/gitlab-ui/issues/55.

Should add the styling as is spec'ed in:
[Sketch Measure Preview for toggles](https://gitlab-org.gitlab.io/gitlab-design/hosted/design-gitlab-specs/toggles-spec-previews/)

![Screen_Shot_2019-06-06_at_13.48.20](/uploads/91dee90cdbb78f7620a5fb947b68f75c/Screen_Shot_2019-06-06_at_13.48.20.png)",3
21415757,2019-05-29 16:24:03.537,Toasts > Multiple toasts should stack,"Currently if multiple toasts are introduced, they will dismiss the previous toast prematurely. 

We have updated the usage guidelines to say that toasts should stack of there are more than one on a page. This needs to be implemented still.",3
21415700,2019-05-29 16:21:58.752,Toasts > Steep width change,"When a second toast is introduced, the width of the toast takes the width of the first toast before rending the correct width.

Multiple toasts should render their correct width:

![Screen_Shot_2020-06-01_at_11.07.13_AM](/uploads/a48857ca2e29d8bc6e94d253d78a526e/Screen_Shot_2020-06-01_at_11.07.13_AM.png)",2
21414491,2019-05-29 15:39:28.971,Ensure avatar examples don't rely on external images,"Currently, for our [Avatar stories and examples](https://gitlab.com/gitlab-org/gitlab-ui/blob/6232eb434adf190c8085aafd5787b17dd3b895b4/components/base/avatar/avatar.stories.js#L14), we use an image which is sourced from gitlab.com

This is not ideal and could potentially cause our visual regression test suite to fail in the event that the image changes or becomes unavailable.

## Solution

Ideally, we should be using an image from within gitlab-ui.",2
20640280,2019-05-07 06:48:49.965,Improve/simplify toast styling,"## Summary

Currently, we use vue-toasted as a dependency for our toast component, which means that we're forced to override vue-toasted's styles in order to apply our own styling. 

Since we're overriding vue-toasted's styling we end up with nested CSS which becomes difficult to maintain.

## Improvements

We should come up with a way to make us less dependent on vue-toasted's stylesheet and make our CSS more maintainable.

Perhaps there's a way we can disable their stylesheet entirely?",3
20443271,2019-04-29 15:27:51.403,Switch from vue-toasted to BootstrapVue's toast component,"Our [current toast component](https://gitlab-org.gitlab.io/gitlab-ui/?path=/story/base-toast--default) relies on `vue-toasted`.

BootstrapVue now includes its [own toast component](https://bootstrap-vue.js.org/docs/components/toast), which is in beta as of writing this.

Let's remove the extra dependency on `vue-toasted` by switching to BootstrapVue's component once it's out of beta.

This plan was discussed here: https://gitlab.com/gitlab-org/gitlab-ui/issues/238#note_162944906",3
20440205,2019-04-29 14:05:38.803,Internationalization on chart legend - avg and max,"I noticed that the chart legend `Avg` and `Max` text isn't internationalizable:

![Screenshot_2019-04-29_at_16.04.18](/uploads/8e4717f1b4ba608269a3ab74ea894a7c/Screenshot_2019-04-29_at_16.04.18.png)

It is not possible to internationalize text within gitlab-ui. This could become a bigger issue as more components that contain text are added to gitlab-ui.

This instance could be solved by making the text directly configurable via a prop.",2
19939655,2019-04-10 20:09:47.635,Prettier job failures are confusing,"When Prettier fails in CI, it doesn't print a useful error message. All we get is a lousy `console.log` warning from eslint

Example output:

```
$ yarn lint
yarn run v1.13.0
$ eslint --ext .js,.vue .

/builds/gitlab-org/gitlab-ui/components/base/loading_icon/loading_icon.vue
  68:7  warning  Unexpected console statement  no-console

✖ 1 problem (0 errors, 1 warning)

Done in 7.92s.
$ yarn prettier --list-different '**/*.{js,vue}'
yarn run v1.13.0
$ /builds/gitlab-org/gitlab-ui/node_modules/.bin/prettier --list-different '**/*.{js,vue}'
components/base/form/form_select/form_select.vue
error Command failed with exit code 1.
info Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.
ERROR: Job failed: exit code 1
```

Better would be message saying ""please run `prettier --write` to fix the errors""",1
19767198,2019-04-05 12:05:39.740,Add label component,"https://design.gitlab.com/components/label/

**Note** This should encompass both regular labels and scoped labels

- Specs: https://gitlab-org.gitlab.io/gitlab-design/hosted/design-gitlab-specs/labels-spec-previews/",2
25764601,2019-03-28 00:40:56.149,Scoped labels restyled,"From https://gitlab.com/gitlab-org/gitlab-ee/issues/9175#note_154807790

| Different sizes/colors | In sidebar |
| ------ | ------ |
| ![Screen_Shot_2019-04-11_at_1.08.25_PM](/uploads/8313885213bd48454a1f6473fdb1a143/Screen_Shot_2019-04-11_at_1.08.25_PM.png) | ![130CFA63-2847-460C-851C-FC1DCBEBA930](/uploads/fa97c4af2921f11d434ab65fcee9cdf1/130CFA63-2847-460C-851C-FC1DCBEBA930.png) |


Note that for this iteration, **the question mark icon will still be in the label**, so they'll look like this:

<img src=""/uploads/e1373d2696407ef76440aee03924f603/Screen_Shot_2019-04-11_at_2.31.10_PM.png"" width=""400px"">


### Design notes/specs

* Border on large labels is `2px`; on small labels it's `1px`
* We currently choose the text color based on which color the user selected as background. If the label background is dark, it has white text, if it is light, it has dark text
   * For labels with white text, the label value should have a white background, and the text color should match the background of the scope portion (revert the 2 colors)
   * For labels with dark text, the label value should still have a white background, but the text color should still be the standard dark text color
   * The question mark icon is `$gray-500`: `#a7a7a7`
* Specs- https://gitlab-org.gitlab.io/gitlab-design/hosted/annabel/%23282-scoped-labels-spec-previews/",2
25729794,2019-03-14 12:01:50.531,Update labels in gitlab-ui to use interactive popover,"gitlab-ce~9594407 since GitLabbers use labels heavily.

---

### Problem to solve

We currently have links included in label tooltips, which are not particularly helpful as tooltips disappear as soon as you hover outside the element.

![Screen_Shot_2019-03-14_at_6.59.15_AM](/uploads/91b79cf042d492a0cd8091cf52983a25/Screen_Shot_2019-03-14_at_6.59.15_AM.png)

### Design Solution

| Labels | New label form |
| ------ | ------ |
| ![links_in_labels](/uploads/38dbb21948d34b39c62127c980313375/links_in_labels.png) | ![Label_Popover](/uploads/4ec5209918011aef1a1219107f3b519a/Label_Popover.png) |



<details>
| New label form | Labels |
| ------ | ------ |
| ![Screen_Shot_2019-10-30_at_12.48.57_PM](/uploads/b32f1abc9dc6572af50d30ee12b1c304/Screen_Shot_2019-10-30_at_12.48.57_PM.png) | ![Screen_Shot_2019-10-30_at_12.49.08_PM](/uploads/51507808cb24099a25d5bcd1c376412b/Screen_Shot_2019-10-30_at_12.49.08_PM.png) |
| Links should be blue, scoped labels `?` should link to docs | Convert description `input` to `textarea`; add markdown help text | 


<summary>Previous design</summary>
From @cperessini's comment in https://gitlab.com/gitlab-org/gitlab-design/issues/282#note_150466105

![Screen_Shot_2019-03-14_at_6.58.24_AM](/uploads/04c9ef1af30b048e54054d58578cd2c4/Screen_Shot_2019-03-14_at_6.58.24_AM.png)
</details>

**Blocked by:** https://gitlab.com/gitlab-org/gitlab-ui/merge_requests/855",2
18765462,2019-03-04 07:47:55.125,Standalone `gl-form-radio` components do not work without a `gl-form-radio-group` ancestor,"As of writing, our `gl-form-radio` component wrapper is unusable. Once !192 is merged, it will be usable, but *only* as a descendant of a `gl-form-radio-group` component.

The underlying `b-form-radio` components we wrap *can* be used *without* any ancestor `b-form-radio-group` component, however. The issue is that we're not correctly forwarding the `v-model` directive from the `gl-form-radio` component down to the `b-form-radio`.

Part of #135.",2
17389480,2019-01-16 12:47:23.127,Search box icon is positioned incorrectly in Safari,"spotted in https://gitlab.com/gitlab-org/gitlab-ee/merge_requests/8591#note_132045635

The dropdown search icon appears to be positioned incorrectly in Safari

![Screenshot_2019-01-16_at_12.58.22](/uploads/35ec58b1df39e81dbe8af7e76d1235c2/Screenshot_2019-01-16_at_12.58.22.png)",1
16752951,2018-12-18 12:28:18.551,Add bootstrap-vue's radio button components,To support browser consistent radio buttons we need to wrap https://bootstrap-vue.js.org/docs/components/form-radio for https://design.gitlab.com/components/radio-buttons/ and https://design.gitlab.com/components/segmented-control,2
16630702,2018-12-13 12:20:58.363,Fix spacing in search box component,"From https://gitlab.com/gitlab-org/gitlab-ui/issues/93#note_119655757:

For the paddings I currently use the Bootstrap helpers which results in a different spacing than in the design specs:

![Screen_Shot_2018-11-23_at_12.59.44](https://gitlab.com/gitlab-org/gitlab-ui/uploads/4a4afac9de55c2cedde412e84a9eba92/Screen_Shot_2018-11-23_at_12.59.44.png)

![Screen_Shot_2018-11-23_at_12.59.32](https://gitlab.com/gitlab-org/gitlab-ui/uploads/2a3fbdb345a75455923778e60e7b7c94/Screen_Shot_2018-11-23_at_12.59.32.png)

> I would prefer to have a new css file in gitlab-ce specifically for these kind of use cases, that way it's easier to remove them later on and they aren't scoped to these vue files

> I created https://gitlab.com/gitlab-org/gitlab-ce/merge_requests/23760 now.

> The padding helper classes are now merged but the existing paddings (for example of `.form-control`) take precedence. :disappointed: Do we want to go down the `!important` route as Bootstrap does? Or should we go with https://gitlab.com/gitlab-org/gitlab-ce/issues/55256?",1
16239820,2018-11-30 11:58:26.931,Add bootstrap-vue`s Breadcrumb component,Wrap the component from here https://bootstrap-vue.js.org/docs/components/breadcrumb/,2
15869192,2018-11-15 11:14:21.875,Create a search / filter input field component,"We need a new component that follows the criteria of ""Search by typing"" from https://design.gitlab.com/components/search:

> - The search action is triggered immediately after users start typing
> - a spinner is added in the right corner of the search box
> - A clear icon appears in the right corner when the search box contains content and there is no search activity happening in the background
> - Clicking the clear icon removes the content, focuses the input field (if not already), and hides itself
> - A magnifying glass icon is placed in the left corner of the search box
> - The placeholder in a search box should ideally be just “Search”

![image](https://gitlab.com/gitlab-org/gitlab-ee/uploads/f764adeed9112f69c932a001f9f13979/image.png)

design specs: https://gitlab-org.gitlab.io/gitlab-design/hosted/design-gitlab-specs/search-spec-previews/",3
15868541,2018-11-15 10:49:16.907,Wrap Vue bootstrap dropdown components,"The following components from https://bootstrap-vue.js.org/docs/components/dropdown need to be wrapped:

- [x] `<b-dropdown>`
- [x] `<b-dropdown-item>`
- [x] `<b-dropdown-item-button>`
- [x] `<b-dropdown-header>`
- [x] `<b-dropdown-divider>`",5
15795769,2018-11-13 14:22:58.115,Create avatar component,"Migrate existing or create new avatar component in gitlab-ui.

Design documentation to be added via https://gitlab.com/gitlab-org/design.gitlab.com/issues/129. Documented avatar sizes can be found at https://gitlab.com/gitlab-org/gitlab-design/issues/196

Should leverage vue-bootstrap where possible, such as rounding corners: https://bootstrap-vue.js.org/docs/components/image. Perhaps it should wrap `b-img`?",3
14665658,2018-10-03 21:03:47.560,Move package to new npm namespace,"Now that we've reclaimed the `@gitlab` namespace in npm, let's rename our packages.

1. Update the namespace from `@gitlab-org` to `@gitlab`.
2. Update the package from `gitlab-ui` to just `ui`, since the namespace makes this redundant.

Ultimately we can change our package imports in gitlab-ce like so:

```javascript
// old
import { ProgressBar } from '@gitlab-org/gitlab-ui';

// new
import { ProgressBar } from '@gitlab/ui';
```

Let's also make sure we deprecate the old package namespace with `npm deprecate`.  This will place a friendly warning at the top of the npm page, and in the console when a user installs the old package (we need to make sure this warning message doesn't break old GitLab stable branches).

See [jade (renamed to pug)](https://www.npmjs.com/package/jade) as an example of this.",3
14384275,2018-09-21 19:14:17.028,Follow up from the link component,"In order to preserve the `rel` attribute state, this is required to do

https://gitlab.com/gitlab-org/gitlab-ui/merge_requests/39#note_103511198

Also for href's which target the same domain, we might not want to set the `rel` attribute with `noreferrer noopener`",2
14324673,2018-09-20 05:44:11.873,Toggle > Add to gitlab-ui,"- Add a new button with on, off, and loading state.
- Can have **label** (above) and **help text** (below), using the existing [`form-group` component](https://gitlab-org.gitlab.io/gitlab-ui/?path=/story/base-form-form-group--default)

![Screen_Shot_2018-09-20_at_07.41.40](/uploads/c621e2b16860b9749bd3f851b00b6681/Screen_Shot_2018-09-20_at_07.41.40.png)

![Screen_Shot_2018-09-20_at_07.42.02](/uploads/75182ca682309b03060d6206573a283c/Screen_Shot_2018-09-20_at_07.42.02.png)


From the comments we are going to roll our own based on [our current implementation](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/app/assets/javascripts/vue_shared/components/toggle_button.vue)",2
14034828,2018-09-10 14:11:59.549,Move skeleton loading container from gitlab-ce to gitlab-ui,Move https://gitlab.com/gitlab-org/gitlab-ce/blob/master/app/assets/javascripts/vue_shared/components/skeleton_loading_container.vue to gitlab-ui,2
14034744,2018-09-10 14:09:20.593,Move loading icon from CE to gitlab-ui,Move https://gitlab.com/gitlab-org/gitlab-ce/blob/master/app/assets/javascripts/vue_shared/components/loading_icon.vue to gitlab-ui,2
14034604,2018-09-10 14:03:55.615,Add Text Button,"Create a wrapped component using bootstrap-vue's button that only works for text.

This should also include button links (html that renders href but visually looks like buttons)",5
14034558,2018-09-10 14:01:48.101,Add Bootstrap Vue's links,Add https://bootstrap-vue.js.org/docs/components/link to gitlab-ui,4
85278252,2021-04-15 22:57:41.609,F/u/f gitlab!59537: Add needed CSS utility classes,"Moves the needed CSS utility classes from the `gitlab` codebase to the `gitlab-ui` codebase as part of the cleanup of [the “Highlight Paid Features During Active Trial” experiment](https://gitlab.com/groups/gitlab-org/-/epics/4721) (clean-up issue yet to be made).

The following utility classes need to be migrated over:

```scss
.gl-order-1 {
  order: 1;
}

.gl-sm-order-init {
  @media (min-width: $breakpoint-sm) {
    order: initial;
  }
}

.gl-xs-ml-3 {
  @media (max-width: $breakpoint-sm) {
    @include gl-ml-3;
  }
}

.gl-sm-mr-3 {
  @media (min-width: $breakpoint-sm) {
    @include gl-mr-3;
  }
}
```",1
85228948,2021-04-15 08:18:13.357,Allow only safe urls in GlButton,"### Proposal

[GlButton](https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/src/components/base/button/button.vue) component should accept only secure and valid URLs. This means that it should prevent `javascript://` links.

* should allow URLs only with the following protocols (http, https, ftp, mailto)
* should take care of encoded URIs
* should render as `span` tag when the `href` is unsafe

[`GlSafeLinkDirective`](https://gitlab-org.gitlab.io/gitlab-ui/?path=/story/directives-safe-html-directive--default) can be used for that purpose.

Since GitLab also relies on data URLs in some cases, we'll want to provide a way to set ""unsafe"" URLs that will skip the sanitization step. An idea would be to expose an `unsafe-url` prop.

### Why

The javascript links can lead to cross-site scripting bugs. For example, https://gitlab.com/gitlab-org/gitlab/-/issues/212630. It has been fixed by validating the zoom meeting links which should fix this particular security issue. However, other `GlButton` usages are still vulnerable if we miss any such validations.

### Related Issues

- [Allow only safe urls in GlLink](https://gitlab.com/gitlab-org/gitlab-ui/-/issues/823)
- [Preventing URL Injection](https://gitlab.com/gitlab-org/gitlab/-/issues/219124#prevent-url-injection)
- [XSS Retrospective](https://gitlab.com/gitlab-org/gitlab/-/issues/327824)",2
84613078,2021-04-04 21:04:58.776,Safe Html v-safe-html Documentation Confusion,"Sorry I'm not overly familiar with the project (gitlab-ui) and the documentation etc but there are a few things that strike me as odd:

https://gitlab-org.gitlab.io/gitlab-ui/?path=/docs/directives-safe-html-directive--default

Renders the example like:

![image](/uploads/642e43282c3d7b8b851d830e45124449/image.png)

![image](/uploads/bb8a5bbeedf5eabdaba71da2a87f308a/image.png)

So the `<img` tag is actually being rendered? Isn't the entire purpose of `v-safe-html` to NOT render HTML?

I also find it slightly niggling at my OCD that the example https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/src/directives/safe_html/examples/safe_html.basic.example.vue has a few subtle differences from that https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/src/directives/safe_html/safe_html.md

Should we align them? And/or is there an effort to prevent the need to duplicate the examples?

Thanks!",1
82139816,2021-04-01 18:05:11.288,Enable smooth scrolling in Safari,"## Context

The following discussion from !2067 should be addressed:

- [ ] @pslaughter started a [discussion](https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/2067#note_542567216):  (+2 comments)

    > **issue (ux, safari):** Unfortunately, it looks like the `scrollTo` with options is not supported by Safari ([see MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTo#browser_compatibility)), which I believe is one of our support browsers...
    > 
    > ![20210331_scrollable_tabs_safari](/uploads/8b65223522764200bf562fec3f6fa051/20210331_scrollable_tabs_safari.mp4)
    > 
    > WDYT @jareko & @fguibert? You'll also notice the gradient blur isn't quite working the way we expect here :disappointed: 
    > 
    > @fguibert, if needed we might also have a smooth scroll function in GitLab which has some polyfilled support :thinking:

Our list of supported browsers changed in %15.2: https://docs.gitlab.com/ee/update/removals.html#support-for-older-browsers. So it looks like we only need to worry about Safari >=14.1.",3
81933792,2021-03-30 14:22:28.732,GlAvatar: size validator fails for valid values,"In https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/2102 we introduced some custom logic in `GlAvatar`'s `size` prop validator to log a more helpful error message when the provided size is invalid. A conditional was unfortunately reversed, which resulted in errors being thrown for any valid value.",1
81672516,2021-03-25 21:24:48.829,Form select > Validation > Remove background image icon,"On select fields, we should remove the background image icon that appears on validations (red explanation mark in circle)

![Screen_Shot_2021-03-25_at_2.23.56_PM](/uploads/7e95a1941161e4d048cf94edf2a0ea19/Screen_Shot_2021-03-25_at_2.23.56_PM.png)",1
81672460,2021-03-25 21:22:43.620,Form inputs > Validation > Correct resting state,"From https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/2107#note_538237248, resting states of our form validations should utilize `red-400` for the border color. `red-500` should be used on hover/focus. Currently `red-500` is being used for all states.",1
95058282,2021-03-22 14:45:44.188,Badge > Linked badges > Make examples in Pajamas the SSoT,"## Problem

Embedded badge examples in Pajamas are different from GitLab UI. Having a SSoT will help accurately complete the badge accessibility audit https://gitlab.com/groups/gitlab-org/-/epics/5664.

| **Pajamas** | **GitLab UI** |
| ------ | ------ |
| ![CleanShot_2021-03-22_at_15.10.48](/uploads/bae696a1643959a3567d5fe814ceebb9/CleanShot_2021-03-22_at_15.10.48.gif) | ![CleanShot_2021-03-22_at_15.11.14](/uploads/d9021a99ace7f666979d007b82bc8735/CleanShot_2021-03-22_at_15.11.14.gif) |

## Solution

Ensure badge examples align with the [badge design specs](https://www.figma.com/file/qEddyqCrI7kPSBjGmwkZzQ/Component-library?node-id=425%3A3) and that action badges dont underline text on hover.",2
81191940,2021-03-18 14:15:31.549,Migrate base/form/form_group stories to Component Story Format,"
Migrate `base/form/form_group` stories to the [Component Story Format (CSF)](https://storybook.js.org/docs/react/writing-stories/introduction#component-story-format).

- [ ] Migrated `documentedStoriesOf` usages to the Component Story Format.
- [ ] Migrated or removed examples.
- [ ] Migrated props, slots and events documentation.
    - [ ] If needed, migrated the `bootstrapComponent` parameter.
- [ ] Cleanup
    - [ ] Component's README:
        - [ ] Removed `<!-- STORY -->`.
        - [ ] Removed component's title.
    - [ ] `documentation/documented_stories.js`:
        - [ ] Added component's PascalCase name to `disableForComponents`.

More details about the migration can be found in the epic: https://gitlab.com/groups/gitlab-org/-/epics/5651",2
81191949,2021-03-18 14:15:31.497,Migrate charts/line stories to Component Story Format,"
Migrate `charts/line` stories to the [Component Story Format (CSF)](https://storybook.js.org/docs/react/writing-stories/introduction#component-story-format).

- [ ] Migrated `documentedStoriesOf` usages to the Component Story Format.
- [ ] Migrated or removed examples.
- [ ] Migrated props, slots and events documentation.
    - [ ] If needed, migrated the `bootstrapComponent` parameter.
- [ ] Cleanup
    - [ ] Component's README:
        - [ ] Removed `<!-- STORY -->`.
        - [ ] Removed component's title.
    - [ ] `documentation/documented_stories.js`:
        - [ ] Added component's PascalCase name to `disableForComponents`.

More details about the migration can be found in the epic: https://gitlab.com/groups/gitlab-org/-/epics/5651",2
81191912,2021-03-18 14:15:31.461,Migrate charts/legend stories to Component Story Format,"
Migrate `charts/legend` stories to the [Component Story Format (CSF)](https://storybook.js.org/docs/react/writing-stories/introduction#component-story-format).

- [ ] Migrated `documentedStoriesOf` usages to the Component Story Format.
- [ ] Migrated or removed examples.
- [ ] Migrated props, slots and events documentation.
    - [ ] If needed, migrated the `bootstrapComponent` parameter.
- [ ] Cleanup
    - [ ] Component's README:
        - [ ] Removed `<!-- STORY -->`.
        - [ ] Removed component's title.
    - [ ] `documentation/documented_stories.js`:
        - [ ] Added component's PascalCase name to `disableForComponents`.

More details about the migration can be found in the epic: https://gitlab.com/groups/gitlab-org/-/epics/5651",2
81191901,2021-03-18 14:15:30.995,Migrate base/navbar stories to Component Story Format,"Migrate `base/navbar` stories to the [Component Story Format (CSF)](https://storybook.js.org/docs/react/writing-stories/introduction#component-story-format).

Follow the steps described in the epic: https://gitlab.com/groups/gitlab-org/-/epics/5651",2
81191902,2021-03-18 14:15:30.922,Migrate utilities/intersection_observer stories to Component Story Format,"
Migrate `utilities/intersection_observer` stories to the [Component Story Format (CSF)](https://storybook.js.org/docs/react/writing-stories/introduction#component-story-format).

- [ ] Migrated `documentedStoriesOf` usages to the Component Story Format.
- [ ] Migrated or removed examples.
- [ ] Migrated props, slots and events documentation.
    - [ ] If needed, migrated the `bootstrapComponent` parameter.
- [ ] Cleanup
    - [ ] Component's README:
        - [ ] Removed `<!-- STORY -->`.
        - [ ] Removed component's title.
    - [ ] `documentation/documented_stories.js`:
        - [ ] Added component's PascalCase name to `disableForComponents`.

More details about the migration can be found in the epic: https://gitlab.com/groups/gitlab-org/-/epics/5651",2
81191948,2021-03-18 14:15:30.768,Migrate base/toggle stories to Component Story Format,"Migrate `base/toggle` stories to the [Component Story Format (CSF)](https://storybook.js.org/docs/react/writing-stories/introduction#component-story-format).

Follow the steps described in the epic: https://gitlab.com/groups/gitlab-org/-/epics/5651",2
81191950,2021-03-18 14:15:30.755,Migrate base/tooltip stories to Component Story Format,"
Migrate `base/tooltip` stories to the [Component Story Format (CSF)](https://storybook.js.org/docs/react/writing-stories/introduction#component-story-format).

- [x] Migrated `documentedStoriesOf` usages to the Component Story Format.
- [x] Migrated or removed examples.
- [x] Migrated props, slots and events documentation.
    - [x] If needed, migrated the `bootstrapComponent` parameter.
- [x] Cleanup
    - [x] Component's README:
        - [x] Removed `<!-- STORY -->`.
        - [x] Removed component's title.
    - [x] `documentation/documented_stories.js`:
        - [x] Added component's PascalCase name to `disableForComponents`.

More details about the migration can be found in the epic: https://gitlab.com/groups/gitlab-org/-/epics/5651",2
81191915,2021-03-18 14:15:30.673,Migrate regions/empty_state stories to Component Story Format,"Migrate `regions/empty_state` stories to the [Component Story Format (CSF)](https://storybook.js.org/docs/react/writing-stories/introduction#component-story-format).

Follow the steps described in the epic: https://gitlab.com/groups/gitlab-org/-/epics/5651",2
81191974,2021-03-18 14:15:30.656,Migrate base/tabs stories to Component Story Format,"
Migrate `base/tabs` stories to the [Component Story Format (CSF)](https://storybook.js.org/docs/react/writing-stories/introduction#component-story-format).

- [ ] Migrated `documentedStoriesOf` usages to the Component Story Format.
- [ ] Migrated or removed examples.
- [ ] Migrated props, slots and events documentation.
    - [ ] If needed, migrated the `bootstrapComponent` parameter.
- [ ] Cleanup
    - [ ] Component's README:
        - [ ] Removed `<!-- STORY -->`.
        - [ ] Removed component's title.
    - [ ] `documentation/documented_stories.js`:
        - [ ] Added component's PascalCase name to `disableForComponents`.

More details about the migration can be found in the epic: https://gitlab.com/groups/gitlab-org/-/epics/5651",2
81191955,2021-03-18 14:15:30.640,Migrate base/button stories to Component Story Format,"Migrate `base/button` stories to the [Component Story Format (CSF)](https://storybook.js.org/docs/react/writing-stories/introduction#component-story-format).

Follow the steps described in the epic: https://gitlab.com/groups/gitlab-org/-/epics/5651",2
81191967,2021-03-18 14:15:30.580,Migrate base/path stories to Component Story Format,"
Migrate `base/path` stories to the [Component Story Format (CSF)](https://storybook.js.org/docs/react/writing-stories/introduction#component-story-format).

- [x] Migrated `documentedStoriesOf` usages to the Component Story Format.
- [x] Migrated or removed examples.
- [x] Migrated props, slots and events documentation.
    - [x] If needed, migrated the `bootstrapComponent` parameter.
- [x] Cleanup
    - [x] Component's README:
        - [x] Removed `<!-- STORY -->`.
        - [x] Removed component's title.
    - [x] `documentation/documented_stories.js`:
        - [x] Added component's PascalCase name to `disableForComponents`.

More details about the migration can be found in the epic: https://gitlab.com/groups/gitlab-org/-/epics/5651",2
81191925,2021-03-18 14:15:30.551,Migrate base/token stories to Component Story Format,"Migrate `base/token` stories to the [Component Story Format (CSF)](https://storybook.js.org/docs/react/writing-stories/introduction#component-story-format).

Follow the steps described in the epic: https://gitlab.com/groups/gitlab-org/-/epics/5651",2
81191972,2021-03-18 14:15:30.548,Migrate base/progress_bar stories to Component Story Format,"Migrate `base/progress_bar` stories to the [Component Story Format (CSF)](https://storybook.js.org/docs/react/writing-stories/introduction#component-story-format).

Follow the steps described in the epic: https://gitlab.com/groups/gitlab-org/-/epics/5651",2
81191926,2021-03-18 14:15:30.548,Migrate utilities/sprintf stories to Component Story Format,"Migrate `utilities/sprintf` stories to the [Component Story Format (CSF)](https://storybook.js.org/docs/react/writing-stories/introduction#component-story-format).

Follow the steps described in the epic: https://gitlab.com/groups/gitlab-org/-/epics/5651",2
81191939,2021-03-18 14:15:30.546,Migrate base/dropdown stories to Component Story Format,"
Migrate `base/dropdown` stories to the [Component Story Format (CSF)](https://storybook.js.org/docs/react/writing-stories/introduction#component-story-format).

- [ ] Migrated `documentedStoriesOf` usages to the Component Story Format.
- [ ] Migrated or removed examples.
- [ ] Migrated props, slots and events documentation.
    - [ ] If needed, migrated the `bootstrapComponent` parameter.
- [ ] Cleanup
    - [ ] Component's README:
        - [ ] Removed `<!-- STORY -->`.
        - [ ] Removed component's title.
    - [ ] `documentation/documented_stories.js`:
        - [ ] Added component's PascalCase name to `disableForComponents`.

More details about the migration can be found in the epic: https://gitlab.com/groups/gitlab-org/-/epics/5651",2
81191956,2021-03-18 14:15:30.546,Migrate utilities/friendly_wrap stories to Component Story Format,"
Migrate `utilities/friendly_wrap` stories to the [Component Story Format (CSF)](https://storybook.js.org/docs/react/writing-stories/introduction#component-story-format).

- [x] Migrated `documentedStoriesOf` usages to the Component Story Format.
- [x] Migrated or removed examples.
- [x] Migrated props, slots and events documentation.
    - [x] If needed, migrated the `bootstrapComponent` parameter.
- [x] Cleanup
    - [x] Component's README:
        - [x] Removed `<!-- STORY -->`.
        - [x] Removed component's title.
    - [x] `documentation/documented_stories.js`:
        - [x] Added component's PascalCase name to `disableForComponents`.

More details about the migration can be found in the epic: https://gitlab.com/groups/gitlab-org/-/epics/5651",2
81191891,2021-03-18 14:15:30.539,Migrate charts/chart stories to Component Story Format,"Migrate `charts/chart` stories to the [Component Story Format (CSF)](https://storybook.js.org/docs/react/writing-stories/introduction#component-story-format).

Follow the steps described in the epic: https://gitlab.com/groups/gitlab-org/-/epics/5651",2
81191895,2021-03-18 14:15:30.532,Migrate base/datepicker stories to Component Story Format,"
Migrate `base/datepicker` stories to the [Component Story Format (CSF)](https://storybook.js.org/docs/react/writing-stories/introduction#component-story-format).

- [ ] Migrated `documentedStoriesOf` usages to the Component Story Format.
- [ ] Migrated or removed examples.
- [ ] Migrated props, slots and events documentation.
    - [ ] If needed, migrated the `bootstrapComponent` parameter.
- [ ] Cleanup
    - [ ] Component's README:
        - [ ] Removed `<!-- STORY -->`.
        - [ ] Removed component's title.
    - [ ] `documentation/documented_stories.js`:
        - [ ] Added component's PascalCase name to `disableForComponents`.

More details about the migration can be found in the epic: https://gitlab.com/groups/gitlab-org/-/epics/5651",2
81191528,2021-03-18 14:12:04.577,Migrate regions/dashboard_skeleton stories to Component Story Format,"Migrate `regions/dashboard_skeleton` stories to the [Component Story Format (CSF)](https://storybook.js.org/docs/react/writing-stories/introduction#component-story-format).

Follow the steps described in the epic: https://gitlab.com/groups/gitlab-org/-/epics/5651",2
81190918,2021-03-18 14:07:21.943,Migrate base/alert stories to Component Story Format,"Migrate `base/alert` stories to the [Component Story Format (CSF)](https://storybook.js.org/docs/react/writing-stories/introduction#component-story-format).

Follow the steps described in the epic: https://gitlab.com/groups/gitlab-org/-/epics/5651",2
80701091,2021-03-11 09:21:01.974,Form: Add GlFormInvalidFeedback Component,"https://bootstrap-vue.org/docs/components/input-group#input-groups

> Bootstrap v4 currently does not support contextual state styling (i.e. valid or invalid) of input groups. However, the inputs inside the input group do support contextual state.

So we end up having something like this:

| GlFormInputGroup | Other form input (for comparison) |
| ------ | ------ |
| ![image](/uploads/bcdb3fc58f1035783d068a8445441630/image.png) | ![image](/uploads/75598818f3a41b3e7cc5fc62a93d8f6f/image.png) |

## Problem: No feedback message shown

We use the general sibling selector `~` to display the invalid feedback message, like this:

<img src=""/uploads/2cf3f585f86b103e8e99f4a79379e69e/image.png"" height=300px>

However, this doesn't work for `GlFormInputGroup` because the HTML structure is different. So the general sibling selector doesn't work here.

<img src=""/uploads/2d4192a16796778a69490f7fc28e5834/image.png"" height=300px>

## Proposal

Let's ensure the feedback is displayed, so it looks like this:

![image](/uploads/4aef69bf97cb323d0b220a7338bb7fe1/image.png)

## Solution

Alternatively, we can just use the `b-form-invalid-feedback` > https://bootstrap-vue.org/docs/components/form#comp-ref-b-form-invalid-feedback

It was suggested here > https://github.com/bootstrap-vue/bootstrap-vue/issues/1251#issuecomment-340065341

(So instead of doing some funky css magic, I think this is the best route to take. I've tested it locally and it works perfectly 👍)

## Follow-up

~~1. We might also want to consider look into changing the default message if it's a `<select>` field. As the user doesn't ""fill"", it ""selects"". So a more appropriate default message could be: `Please select an option`.~~

A sibling component would be the `gl-form-valid-feedback`, we might want to also consider creating a follow-up issue to ensure that's available in PJ 👍

## Note

This issue was created as a follow-up to MR > https://gitlab.com/gitlab-org/gitlab/-/merge_requests/55838",3
80620276,2021-03-10 09:40:00.271,Update GlFormGroup stylings to be aligned with Pajamas,"### Context

The following discussion from !55728 should be addressed:

- [x] @pgascouvaillancourt started a [discussion](https://gitlab.com/gitlab-org/gitlab/-/merge_requests/55728#note_525469956):  (+1 comment)

    > **thought:** Having to manually add this margin might indicate that the GitLab UI component might not be following Pajamas specifications :thinking: Do you think that there some change we could do in GitLab UI to make this more consistent?

### Proposal

We should add necessary margins for labels in GlFormGroup and make sure it conforms with ~Pajamas.

### Implementation Plan

- [x] Tweak form styling in GitLab UI, something very similar to [this](https://gitlab.com/gitlab-org/gitlab-ui/blob/15e9c17724049fdf26acb11abc67ff5d87cb1cb5/src/components/base/form/form_group/form_group.scss#L21), as per [suggestion](https://gitlab.com/gitlab-org/gitlab/-/merge_requests/55728#note_525469956)
- [x] Remove the `gl-mt-3` class from the gitlab codebase 
  - [x] This should apply for `<gl-form-text class=""gl-mt-3"">` elements
  - [x] Make sure it affects only the field labels",2
80480173,2021-03-08 15:03:58.760,Add `gl-focus-outline-none:focus` utility class,"### Problem to solve

The GitLab application has several instances of Bootstrap Vue's `bv-no-focus-ring` class.

GitLab issue: https://gitlab.com/gitlab-org/gitlab/-/issues/296949

### Proposed solution

Add a new utility class to replicate `bv-no-focus-ring`'s style.

```css
.bv-no-focus-ring:focus {
  outline: none;
}

.gl-focus-outline-none:focus {
  outline: none;
}
```",1
80332539,2021-03-05 13:01:26.672,Add character count support to GlFormTextarea,"### Proposal

Add character counter to `form-textarea` component which should conform the design specs at https://design.gitlab.com/components/form/#character-counter

- This can be added by using a prop `counter`

| specs | example usage |
| ------ | ------ |
| ![image](/uploads/68fe67ba0821e704456363d8dad67e0c/image.png) | ![image](/uploads/4de4570fa78034b5ef7f02c1a7980440/image.png) |",1
80083748,2021-03-02 11:48:00.240,Instant Load Directive,"As we want to leverage a preloading trick in our Vue apps where you already start loading when the mouse hovers over an element. This issue is about creating an Directive that makes it easy to use that technique in the future. 

*  Call function after a debounced delay of 100ms

Base version was implemented in POC in https://gitlab.com/gitlab-org/gitlab/-/merge_requests/52912/diffs#diff-content-733c824a6df375caae37ccea0ce422a3f384f4d8",3
79802162,2021-02-25 12:41:17.795,Vue Test Utils: migrate usages of find/findAll to findComponent/findAllComponents where applicable,,2
79582543,2021-02-22 19:57:03.273,Rich Text Editor: Set up test environment,"The Rich Text Editor edits HTML produced by the [Markdown API endpoint](https://docs.gitlab.com/ee/api/markdown.html). 

<img src=""/uploads/ff57cab6e332b65fc56dd42aa4c01aa2/image.png"" width=""25%"" />

We have to make sure to catch disparities between the API output and the Rich Text Editor’s assumptions about this output. For this purpose, we want to create a test environment where fixtures are generated for each type of content supported by the editor using the Markdown API endpoint. 

We also want to define testing patterns to verify the accuracy of Markdown generation and testing TipTap extensions. 

## Tasks

- [ ] [MR: Set up test fixtures for Rich Text Editor](https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/2070) - This MR is simply a first iteration of proving we can call the API and generate a file.
- [ ] Add support for generating fixtures and committing the files to git to the CI pipeline config.
- [ ] Add initial Bold extension test that uses the generated fixture.
- [ ] Document how to create a new test fixture. 

## Context

See for a big picture of the Rich Text Editor development: https://gitlab.com/gitlab-org/gitlab/-/issues/321442",3
79580883,2021-02-22 19:33:45.337,Rich Text Editor: Create rich text editor component directory and storybook section,"Create a new component directory for the Rich Text Editor. The Rich Text Editor will contain the following types of artifacts

- Vue components
- Documentation
- TipTap extensions
- Markdown serializers. 

## Context

See for a big picture of the Rich Text Editor development: https://gitlab.com/gitlab-org/gitlab/-/issues/321442",1
79580562,2021-02-22 19:26:28.242,Rich Text Editor: Add TipTap and ProseMirror dependencies to GitLab UI,"## Proposal 

Add ProseMirror and TipTap dependencies to GitLab UI. The editor team will use these dependencies to implement a Rich Text Editor component. 

## License compatibility

TipTap and ProseMirror have compatible licenses with GitLab. See https://gitlab.com/gitlab-org/gitlab/-/issues/231725#note_413595037 for more information. 

## Requirements 

We have to include the Rich Text Editor 3rd party dependencies in the GitLab application while meeting the following expectations

### Performance

- We want to load these dependencies asynchronously.
- If the dependencies are not updated, we want to maintain them in the web browser’s cache.
  To meet this expectation, the bundle where the dependencies is distributed should be independent from the bundle where the Rich Text Editor is located. The reason is that we will update the Rich Text Editor more often than its dependencies.

### Smooth transition to TipTap v2

The methodology we use to load the dependencies should not become a hindrance  for the transition from TipTap 1 to TipTap 2 (currently in private development).

To meet this expectation. We should be aware of the differences between TipTap 1 and TipTap 2 distribution. [TipTap 1 groups all its dependencies](https://tiptap.dev/docs/guide/editor.html) and core components in two packages: `tiptap` and `tiptap-extensions`. 

```html
<script>
import { Editor, EditorContent } from 'tiptap';
import { Bold } from 'tiptap-extensions';

export default {
  components: {
    EditorContent,
  },
  data() {
    return {
      editor: new Editor({
        content: '<p>Initial editor content</p>',
        extensions: [
          new Bold(),
        ],
      })
    }
  },
  beforeDestroy() {
    this.editor.destroy()
  },
}
</script>
<template>
  <editor-content :editor=""editor"" />
</template>
```

TipTap 2 distributes extensions and Vue components in different packages.

```javascript
import { Editor } from '@tiptap/core'
import Document from '@tiptap/extension-document'
import Paragraph from '@tiptap/extension-paragraph'
import Text from '@tiptap/extension-text'

new Editor({
  element: document.querySelector('.element'),
  extensions: [
    Document,
    Paragraph,
    Text,
  ],
  content: '<p>Example Text</p>',
  autofocus: true,
  editable: true,
  injectCSS: false,
})
```

## Implementation guide

- Encapsulate the responsibility of loading tiptap packages in a single factory function. The advantage of putting all import calls in a single place is that we will only have to replace TipTap 1 packages with TipTap 2 packages in that location. 
- Put all tiptap packages in the same bundle using [webpack module methods](https://webpack.js.org/api/module-methods/)

![image](/uploads/30c69a300b042ca0120fe71cffe556af/image.png)

## Context

See for a big picture of the Rich Text Editor development: https://gitlab.com/gitlab-org/gitlab/-/issues/321442",1
80504754,2021-02-15 17:21:31.530,[VSA] Fix stage shape outline and active shape,"### Problem 

- Path component has a slight 1px bump and isn't completely rounded on the pointy part of a stage... this keeps me up at night.
- Path component active highlight is a bit strange too

| Imperfect rounding | Active |
| ------ | ------ |
| ![Screenshot_2021-02-15_at_17.16._2x](/uploads/891310f35c8d66d8952a318eebf3f7e5/Screenshot_2021-02-15_at_17.16._2x.png) | ![Screenshot_2021-02-15_at_17.16._2x](/uploads/d338185be0e2593dd6bba031515983d1/Screenshot_2021-02-15_at_17.16._2x.png) |

### Proposal

1. Fix the pixel bump
1. Make active state the same shape as stage outline",1
78986543,2021-02-12 16:45:49.135,Toast > Accessibility Audit,"Refer to the [parent epic description](https://gitlab.com/groups/gitlab-org/-/epics/5387) for more information on this effort.

## Purpose

Audit the accessibility of the GitLab UI Toast component in all variants and states in order to update the Pajamas component [Status table](https://design.gitlab.com/components/status), and provide more documentation on the component’s page in Pajamas.

## Component description

A toast displays a short system message as a result of a user's action.

## Methods and Tools

Review the [initial testing methods in the parent epic](https://gitlab.com/groups/gitlab-org/-/epics/5387#initial-methods-and-tools). List the testing methods used for your audit below, including any additional testing methods needed for this component that is not listed in the parent epic.

* Evaluate all of the [toast](https://gitlab-org.gitlab.io/gitlab-ui/?path=/story/base-toast--default) variants and options in GitLab UI.
* Visual review for contrast and states.
* Semantic and functional review that assumes a [status](https://www.w3.org/TR/wai-aria-1.2/#status) role.
* Screen reader: VoiceOver + Safari on macOS
* Screen reader: NVDA + Chrome on Windows
* axe DevTools extension in browser) variants and configurations in GitLab UI.

## Audit Criteria 

Review the [general audit criteria in the parent epic](https://gitlab.com/groups/gitlab-org/-/epics/5387#audit-criteria). Add applicable criteria to this section, including any additional criteria needed for this component that is not listed in the parent epic. **A check indicates that the audit has been performed, not that it passes.**

* [x] [WCAG SC 2.2.1 Timing Adjustable](https://www.w3.org/TR/WCAG21/#timing-adjustable) (level A) must be satisfied. See [how to meet timing adjustable](https://www.w3.org/WAI/WCAG21/quickref/#timing-adjustable).
* [x] If the toast message is considered a status (`role=""status""`) then it should have no interactive content within. As a live region, semantics are lost and the content is read as a single string. For example, if the current toast was a status it would be announced as ""Undo. Close. This is a toast message.""
* [x] If a critical message or action was referenced in a toast, it should be available permanently on the page as well.
* [x] A toast shouldn't receive focus.
* [x] All content is presented in text or with a text equivalent. For example, alt text for SVG, or `aria-label` for icons that have meaning or perform actions.
* [x] There should be no negative impact to a user or the experience if a toast is missed.
* [x] Color combinations have [sufficient contrast](https://design.gitlab.com/product-foundations/colors#accessibility).

## Resources

- [Defining 'Toast' Messages](https://adrianroselli.com/2020/01/defining-toast-messages.html), by Adrian Roselli
- [A toast to an accessible toast…](https://www.scottohara.me/blog/2019/07/08/a-toast-to-a11y-toasts.html), by Scott O'Hara

## Results

### Summary

After research, `role=""status""` seems to be the best fit for a pattern, which will assume certain expectations and requirements for timing and function. [This example](https://scottaohara.github.io/tests/html-output/toastput-aria.html) seems to be the best reference for behavior (although the example mentions updates to make it more robust).

| **Problem** | **Solution** | **Related Issue/MR** |
| ----------- | ------------ | -------------- |
| Toast is using `role=""alert""` and `aria-live=""assertive""`. | Only use `role=""status""` which has an implicit value of `aria-live=""polite""`. | TBD |
| Toast is placed near the bottom of the DOM, making it difficult to move focus there fast enough to access the controls. | Don't include actions (link, button) within the toast message. | TBD |
| Toast can have critical actions in it. For example, ""Undo"". I think this would be a failure of WCAG SC 2.2.1 Timing Adjustable, since a user couldn't adjust timing to access critical functionality. The toast doesn't (and shouldn't) receive focus, so again, anything interactive within the toast isn't easily accessed. | Don't include actions (link, button) within the toast message. | TBD |
| Close button is before the toast content in the DOM, so it get's announced first. | Keep the close button outside of the `role=""status""` and place at the end. | TBD |
| [Toast guidelines](https://design.gitlab.com/components/toast) promote including an action. | Update guidelines to not include an action. | TBD |

## Completing the audit

After the solutions have been explored and applied, review the [completing the audit section in the parent epic](https://gitlab.com/groups/gitlab-org/-/epics/5387#completing-the-audit). Complete all items prior to closing this issue.

~accessibility ~""Category:FE/UX Foundations"" ~""component:toast""",5
78986541,2021-02-12 16:45:48.928,Table > Accessibility Audit,"Refer to the [parent epic description](https://gitlab.com/groups/gitlab-org/-/epics/5387) for more information on this effort.

## Purpose

Audit the accessibility of the GitLab UI Table component in all variants and states in order to update the Pajamas component [Status table](https://design.gitlab.com/components/status), and provide more documentation on the component’s page in Pajamas.

## Component description

Tables display tabular data in a basic grid composed of cells, columns, and rows. This format makes it easy for users to scan and compare large amounts of data. Tables are not for layout.

## Methods and Tools

Review the [initial testing methods in the parent epic](https://gitlab.com/groups/gitlab-org/-/epics/5387#initial-methods-and-tools). List the testing methods used for your audit below, including any additional testing methods needed for this component that is not listed in the parent epic.

* Evaluate all of the [table](https://gitlab-org.gitlab.io/gitlab-ui/?path=/story/base-table-table--default) variants and configurations in GitLab UI.
* Visual review for contrast and states.
# Semantic and functional review for tables using the `<table>` element.
* Semantic and functional review for tables not using the `<table>` element align with [WAI-ARIA Authoring Practices for tables](https://www.w3.org/TR/wai-aria-practices/#table) (if present).
* Keyboard only
* Screen reader: VoiceOver + Safari on macOS
* Screen reader: NVDA + Chrome on Windows
* axe DevTools extension in browser

## Audit Criteria 

Review the [general audit criteria in the parent epic](https://gitlab.com/groups/gitlab-org/-/epics/5387#audit-criteria). Add applicable criteria to this section, including any additional criteria needed for this component that is not listed in the parent epic. A check indicates that the audit has been performed, not that it passes.

* [ ] All actions and functionality can be done with a [keyboard](https://design.gitlab.com/accessibility-audits/2-keyboard-only).
* [ ] Color combinations have [sufficient contrast](https://design.gitlab.com/product-foundations/colors#accessibility).
* [ ] Table heading, column, and row relationships are clearly defined and communicated with the correct scope.
* [ ] Tables include a `caption` or are directly preceded by a heading (a `caption` is preferred).

## Results

| **Problem** | **Solution** | **Related MR** |
| ----------- | ------------ | -------------- |
| Some ARIA attributes and roles are either unnecessary or not allowed on a `<table>` and sub elements. | Evaluate each ARIA attribute a/role and either remove or document correct use. | TBD |
| No `<caption>` element is present to explain the table's purpose. | Include a `<caption>` element that describes the purpose of the table. | TBD |
| The ability to select a row interferes with expected behavior. `tab-index=""0""` shouldn't be used at all here. | Introduce plain table examples and document requirements of expected behavior for selectable table elements (if they should exist). | TBD |
| Using literal ""column one"" and ""column two"" text in the examples makes testing confusion, since columns are also announced. | Update text in Storybook stories. | TBD |
| Stacked layout has several issues that make it difficult or impossible to use or understand. Including, but not limited to no table headers, pseudo content, and other items that are already mentioned. | Rethink responsive tables and accessible options. | TBD |
| Filter variant unusable in NVDA. | Update filter capabilities, see the [Web Experience Toolkit Tables](https://wet-boew.github.io/v4.0-ci/demos/tables/tables-en.html) for examples. | TBD |

## Completing the audit

After the solutions have been explored and applied, review the [completing the audit section in the parent epic](https://gitlab.com/groups/gitlab-org/-/epics/5387#completing-the-audit). Complete all items prior to closing this issue.

## Resources and reference

- [Data Tables](https://inclusive-components.design/data-tables/) by Heydon Pickering
- [Tables, CSS Display Properties, and ARIA](https://adrianroselli.com/2018/02/tables-css-display-properties-and-aria.html#TheTweet) by Adrian Roselli
- [Web Experience Toolkit Tables](https://wet-boew.github.io/v4.0-ci/demos/tables/tables-en.html), great examples of tables with filtering, sorting, and pagination.

~accessibility ~""Category:FE/UX Foundations"" ~""component:table""",5
78986521,2021-02-12 16:45:46.855,Dropdown > Accessibility Audit,"Refer to the [parent epic description](https://gitlab.com/groups/gitlab-org/-/epics/5387) for more information on this effort.

## Purpose

Audit the accessibility of the GitLab UI Dropdown component in all variants and states in order to provide more documentation on the component’s page in Pajamas and address any items that need fixed.

## Initial methods and tools

Review the [initial testing methods in the parent epic](https://gitlab.com/groups/gitlab-org/-/epics/5387#initial-methods-and-tools). List the testing methods used for your audit below, including any additional testing methods needed for this component that is not listed in the parent epic.

### Methods

- Visual scan
- Code/semantics review
- Keyboarding text
- Screen reader test

### Tools

- NVDA + Chrome version 92
- VoiceOver + Safari

## Audit criteria 

Review the [general audit criteria in the parent epic](https://gitlab.com/groups/gitlab-org/-/epics/5387#audit-criteria). Add applicable criteria to this section, including any additional criteria needed for this component that is not listed in the parent epic.

A completed task here indicates that testing has been done, not that the result was passing.

* [x] All actions and functionality can be done with a [keyboard](https://design.gitlab.com/accessibility-audits/2-keyboard-only).
* [x] Links, buttons, and controls have a visible [focus state](https://design.gitlab.com/accessibility-audits/2-keyboard-only#focus-states).
* [x] All content is presented in text or with a text equivalent. For example, alt text for SVG, or `aria-label` for icons that have meaning or perform actions.
* [x] Changes in a component’s state are announced by a screen reader. For example, changing `aria-expanded=""false""` to `aria-expanded=""true""` when an accordion is expanded.
* [x] Color combinations have [sufficient contrast](https://design.gitlab.com/product-foundations/colors#accessibility).

## Results

**Watch recordings  of the audit** (internal)

1. [▶︎ Intro](https://drive.google.com/file/d/1dNbOpgUOJb6s8R8r01gdXU9J9gs2XdQO/view?usp=sharing)
1. [▶︎ Visual scan](https://drive.google.com/file/d/1qCB9-KfC1p-D7ao0QiwzQQMehERZZvUS/view?usp=sharing)
1. [▶︎ Code and semantic review](https://drive.google.com/file/d/1z-Epc8tTuH32PzPq6Pr9jrOqI9KKXbNx/view?usp=sharing)
1. [▶︎ Screen reader demo](https://drive.google.com/file/d/12K20wzxrMuMrAq4T4HNXC_MiDXhE8NlO/view?usp=sharing)

| **Problem** | **Solution** | **Related Issue/MR** |
| ----------- | ------------ | -------------- |
| From the visual scan, I don't think there are any large issues, but I would like to consider the focus ring in general based on potential forthcoming WCAG updates. [This article](https://www.sarasoueidan.com/blog/focus-indicators/) summarizes it well. | Explore global updates to the focus ring. |                |
| In general, the way the dropdown is currently built is too prescriptive to a _menu_ and is not appropriate for all of the [use cases](https://design.gitlab.com/components/dropdown#usage) a dropdown should support. This will be explained further in the related issue. There are also issues with the code semantics/structure of the current dropdown. | Provide examples of different types of dropdowns, along with semantic differences, that support each type of use case.  |                |

## Completing the audit

After the solutions have been explored and applied, review the [completing the audit section in the parent epic](https://gitlab.com/groups/gitlab-org/-/epics/5387#completing-the-audit). Complete all items prior to closing this issue.

~accessibility ~""Category:FE/UX Foundations"" ~""component:dropdown""",3
78986515,2021-02-12 16:45:46.144,Broadcast message > Accessibility Audit,"Refer to the [parent epic description](https://gitlab.com/groups/gitlab-org/-/epics/5387) for more information on this effort.

## Purpose

Audit the accessibility of the GitLab UI Broadcast Message component in all variants and states in order to update the Pajamas component [Status table](https://design.gitlab.com/components/status), and provide more documentation on the component’s page in Pajamas.

## Component Description

A banner promotes awareness of a new feature or high-priority research initiative.

## Methods and Tools

Review the [initial testing methods in the parent epic](https://gitlab.com/groups/gitlab-org/-/epics/5387#initial-methods-and-tools). List the testing methods used for your audit below, including any additional testing methods needed for this component that is not listed in the parent epic.

- Evaluate all of the [broadcast message](https://gitlab-org.gitlab.io/gitlab-ui/?path=/story/base-broadcast-message--default) variants in GitLab UI.
* Visual review for contrast and states.
* Semantic and functional review
* Keyboard only
* Screen reader: VoiceOver + Safari on macOS
* Screen reader: NVDA + Chrome on Windows
* axe DevTools extension in browser

## Audit Criteria 

Review the [general audit criteria in the parent epic](https://gitlab.com/groups/gitlab-org/-/epics/5387#audit-criteria). Add applicable criteria to this section, including any additional criteria needed for this component that is not listed in the parent epic. **A check indicates that the audit has been performed, not that it passes.**

* [x] All actions and functionality can be done with a [keyboard](https://design.gitlab.com/accessibility-audits/2-keyboard-only).
* [x] Color combinations have [sufficient contrast](https://design.gitlab.com/product-foundations/colors#accessibility).
* [x] Broadcast is easily discoverable with screen reader. Since navigating headings is by far the most common way to find information ([source](https://webaim.org/projects/screenreadersurvey9/#finding)), and a broadcast message is static content on page load, and deemed important, it should probably have a meaningful heading.

## Results

| **Problem** | **Solution** | **Related Issue/MR** |
| ----------- | ------------ | -------------- |
| `role=""alert""` is used, but per [WAI-ARIA Authoring Practices](https://www.w3.org/TR/wai-aria-practices/#alert) ""It is important to note that, at this time, screen readers do not inform users of alerts that are present on the page before page load completes."" | Remove `role=""alert""` since it's not the correct use here for static content present on page load. | TBD |
| No heading in broadcast message. As-is, without the broadcast being announced on page load, it's only discoverable when reading through the page content. | Since navigating headings is by far the most common way to find information ([source](https://webaim.org/projects/screenreadersurvey9/#finding)), and a broadcast message is static content on page load, and deemed important, it should probably have a meaningful heading. | TBD |

## Completing the audit

After the solutions have been explored and applied, review the [completing the audit section in the parent epic](https://gitlab.com/groups/gitlab-org/-/epics/5387#completing-the-audit). Complete all items prior to closing this issue.

~accessibility ~""Category:FE/UX Foundations"" ~""component:broadcast-message""",2
78673875,2021-02-08 21:49:04.263,Remove examples templates and start transition to Component Story Format,Prevent new component examples from being added and update stories template to produce Component Story Format compatible stories.,2
78323869,2021-02-03 00:46:30.674,Upgrade Vue Test Utils to latest version,Upgrade VTU to v1.1.2,1
78497535,2021-01-29 15:57:20.645,Component: Single Stat [Animation],"## Problem

- Single Stats are often used with filters
- Sometimes it is not always clear whether the filter has been applied to Single Stats (and other components like tables)

## Proposal

- Introduce a `counting number` transition to the Single Stat when a filter has been applied and it is changing from one value to the next
- This will provide a signifier that the filter has been applied and look pretty slick
- Out o scope (done in separate issues): Apply to Value Stream Analytics (group-level) and Merge Request Analytics

See Tesla example...
![Screenshot_2021-01-29_at_15.55.](/uploads/f6afa33705c0c15a4807c81c635ca104/Screenshot_2021-01-29_at_15.55..gif)",3
77692058,2021-01-22 15:13:58.023,Date picker: add alert to component,"## Problem

Our [date picker](https://app.mural.co/t/gitlab2474/m/gitlab2474/1611148388781/3710a8c5ca11221336e5c17ea6ac084d6677e767?wid=0-1611326570640) currently doesn't have a way of signalling if there are any data limits.

This has led to this (rather inelegant) solution in MR analytics & VSA which occupies a lot of horizontal space in the filter bar...

![Screenshot_2021-01-22_at_15.10._2x](/uploads/6b59a2cbdc0fa985c8483d2f6ecd4b55/Screenshot_2021-01-22_at_15.10._2x.png)

## Proposal

Provide an option for an alert within the date picker component. This provides some ""feed-forward"" advice for users.

| Proposal | Clubhouse example |
| ------ | ------ |
| ![Screenshot_2021-01-22_at_15.32._2x](/uploads/dabfbf527ea2306db987de766a18466e/Screenshot_2021-01-22_at_15.32._2x.png) | ![Screenshot_2021-01-21_at_12.04._2x](/uploads/85d3b03be1a97b8f82a27ecc5f86dc2c/Screenshot_2021-01-21_at_12.04._2x.png) |",2
77564782,2021-01-20 18:13:13.746,GlTokenSelector: Add a `textInputAttrs` prop,When writing feature specs and E2E QA specs the text input needs to be filled in. To do this it is preferable to add a `data-qa-selector` attribute to the text input. This currently isn't possible. Adding a `textInputAttrs` prop would make this possible.,1
77463525,2021-01-19 10:31:45.251,Badge component: implement 12px icon variant,"# Problem 

- From: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/785
- New 12px badge variant (for small and medium) has been created in [Figma](https://www.figma.com/file/qEddyqCrI7kPSBjGmwkZzQ/Component-library?node-id=19947%3A329)

# Proposal 

1. Implement new variant in GitLab-UI: leverages 12px badge size and different padding
1. Update single stat component to use this variation of the badge

| small | medium |
| ------ | ------ |
| ![Screenshot_2021-01-19_at_10.32._2x](/uploads/2c034a76a9d57ca021b34e8f759458a0/Screenshot_2021-01-19_at_10.32._2x.png) | ![Screenshot_2021-01-19_at_10.32._2x](/uploads/8db20eea43e8bc1da5318cd36f033fe6/Screenshot_2021-01-19_at_10.32._2x.png) |",2
77317273,2021-01-15 22:59:12.717,Duplicated stories for area and line charts,"There are duplicated stories in the following files:

* `src/components/charts/line/line.stories.js`
* `src/components/charts/area/area.stories.js`

They both define a `with annotations as option series` two times. Let's remove the ones we don't need, or rename them if we want to keep them all.",1
77123919,2021-01-12 22:04:26.551,Use GlButton to close Toast,"## Problem

The Toast component uses a plain anchor and should instead use the GlButton.

![CleanShot_2021-01-12_at_16.02.36_2x](/uploads/936a110436b315ded7d51fa498dc561f/CleanShot_2021-01-12_at_16.02.36_2x.png)",2
77083897,2021-01-12 11:55:58.822,GlAvatarLabeled: Add <slot> for label and sublabel,"### Problem to solve

The `GlAvatarLabeled` can only display text for `label` & `sublabel`.

The `label` & `sublabel` need to be customizable to enable the following GitLab admin/users https://gitlab.com/groups/gitlab-org/-/epics/4961 features:

- The `label` is a GlAvatarLink
- The `sublabel` is a mailto link

![image](/uploads/14e0bf44a3c991adc99e7bf1805e0eca/image.png)

### Potential solution

Similar to `meta`, add a `<slot>` for both `label` & `sublabel` with default content.",1
76890798,2021-01-07 16:40:36.078,Mention dark mode testing in MR template checklist,"With GitLab's dark mode being used by more users, we should be cautious about any CSS change that might affect how a component looks in dark mode. Let's add a task to our MR template's checklist to remember to take that into account with every change.",0
76722191,2021-01-04 21:20:25.152,Roulette doesn't take all eligible maintainers into account,"According to the [handbook](https://about.gitlab.com/handbook/engineering/projects/#gitlab-ui), every frontend engineer is a reviewer of GitLab UI, but not all of then are marked as such in the [`team.yml`](https://gitlab.com/gitlab-com/www-gitlab-com/-/blob/master/data/team.yml). Similarly, not all GitLab maintainers are marked as GitLab UI maintainers. This results in some discrepancies in the reviewers & maintainers lists between GitLab and GitLab UI, as can be seen in https://about.gitlab.com/handbook/engineering/projects/.

For this reason, the reviewers roulette currently pulls data from GitLab's team, which better represents the workforce, but it's not perfect either. For example, I'm myself a maintainer of GitLab UI, but _not_ of GitLab, which means that the roulette still considers me as a reviewer.

Let's review the roulette's logic to improve the reliability of its picks.",1
76715643,2021-01-04 18:30:50.388,Add 'OR' token to filtered-search,"### Problem To Solve

When filtering issues, I want to filter by ~""group::portfolio management"" `OR` ~""group::certify"", so that I can see issues that have one `OR` (:rofl:) the other label.

When filtering issues, I want to filter by assignee is @gweaver `OR` @hollyreynolds `OR` @kokeefe, so that I see issues that have...

### Proposal

- Add support for OR between values of a given filterable key within the filter bar.
- Only add support for OR to the `gitlab-ui` filter bar to prevent duplicating effort in parts of the code that need to be refactored to GitLab UI. 

### Constraints

- `OR` is limited to individual types of parameters `assignee = me OR you AND label = foo OR bar`, not `assignee = me OR label = foo`

### UI Prototype

https://www.figma.com/proto/7NSXzJaHq5eOtuJ11cOoKC/23532-Using-OR-in-issue-mr-epic-list-views-and-boards?node-id=175%3A1465&viewport=564%2C352%2C0.3289112150669098&scaling=min-zoom

To navigate:
1. Click on filter bar (launches primary options menu)
1. Select Assignee
1. Select `= is`
1. Select names in list. All 3 will auto-select - this is due to a limitation in the prototyping tool. The actual checkbox functionality will work as normal.
1. Click on Assignees list to close
1. Click filter bar again to launch primary options menu again for a new top level selection


### Tier

gitlab~13116818 

### Implementation Parts

- [ ] UX for using `OR` on a per parameter basis
- [ ] Frontend
- [ ] Issue Boards Side
<!-- triage-serverless v3 PLEASE DO NOT REMOVE THIS SECTION -->
*This page may contain information related to upcoming products, features and functionality.
It is important to note that the information presented is for informational purposes only, so please do not rely on the information for purchasing or planning purposes.
Just like with all projects, the items mentioned on the page are subject to change or delay, and the development, release, and timing of any products, features, or functionality remain at the sole discretion of GitLab Inc.*
<!-- triage-serverless v3 PLEASE DO NOT REMOVE THIS SECTION -->",3
76711640,2021-01-04 17:16:55.347,GlDaterangerPicker: flaky visual test,"`GlDaterangerPicker` properly mocks the month and day, but not the year, which caused its visual tests to fail now that we've switched from 2020 to 2021: https://gitlab.com/gitlab-org/gitlab-ui/-/jobs/943094911

Let's fix this by setting a static year as well.",1
76704481,2021-01-04 15:10:10.851,GlCarousel: flaky visual test,"`GlCarousel` sometimes [fails](https://gitlab.com/gitlab-org/gitlab-ui/-/jobs/886328002) with some unnoticeable differences that don' seem to be ever caused by any of our changes.

The fact that we're loading images from a remote source to populate the slides might be responsible for those inconsistent results. Let's try storing them locally to see if it helps in the long run.",1
76561914,2020-12-29 17:00:40.786,Scoped labels: scoped text needs visible underline on hover,"## Problem

The scoped text portion of the label doesn’t have a visible underline when text is reversed (white) on the left, but should, for interactive states.

![CleanShot_2020-12-23_at_09.52.35](/uploads/650be2a85843012c094af0981e2dbfb4/CleanShot_2020-12-23_at_09.52.35.gif)

## Solution

![Screen_Shot_2021-04-19_at_12.09.44_PM](/uploads/8e8518ec1ad3a715298157686bc89aff/Screen_Shot_2021-04-19_at_12.09.44_PM.png)

Figma: https://www.figma.com/file/qEddyqCrI7kPSBjGmwkZzQ/Component-library?node-id=1531%3A2",1
75831887,2020-12-09 13:43:47.948,Add additional percentage width utility classes,"We need additional utility classes for percentage widths for https://gitlab.com/gitlab-org/gitlab/-/merge_requests/49551.

`10p` `20p` `40p`

**Proposal**

```
.gl-w-10p {
  width: 10%;
}
.gl-w-20p {
  width: 20%;
}
.gl-w-40p {
  width: 40%;
}
```",1
75781681,2020-12-08 17:48:18.979,GlTab: Misalignment when mixing tabs with and without counters,"## Problem to solve

When mixing tabs with and without counters it causes the selected border of the tab without a counter to be misaligned. 

## Screenshots

![image](/uploads/96c72bab635446bf633dceff9306af88/image.png)

## Proposed solution

1. Set `GlTab` to use `display: flex`
2. Add spacing between the label and counter

## Additional notes

_Tested in Chrome Version 86.0.4240.198 (Official Build) (x86_64)._",1
75714788,2020-12-07 14:44:37.364,GlSingleStat: Update component to match the updated Pajamas specs,"Let's update the `GlSingleStat` component to match https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/739

**Note:** This might result in a breaking change if we decide to change props of the existing component.",3
75498048,2020-12-02 16:23:43.835,GlCarousel: flaky visual test,"`GlCarousel` sometimes [fails](https://gitlab.com/gitlab-org/gitlab-ui/-/jobs/886328002) with some unnoticeable differences that don' seem to be ever caused by any of our changes.

The fact that we're loading images from a remote source to populate the slides might be responsible for those inconsistent results. Let's try storing them locally to see if it helps in the long run.",1
74590767,2020-11-18 21:56:01.888,Remove (or document) duplicate buttons in tab component,"#### Background

I was working on [pipeline tabs](https://gitlab.com/gitlab-org/gitlab/-/issues/230728) to our tabs component and noticed we duplicate the buttons on the right, show them on desktop view, and hide them on mobile (where the ""mobile"" block of buttons appears).

| Desktop | Mobile |
| ------ | ------ |
| ![Screen_Shot_2020-11-18_at_3.49.33_PM](/uploads/be6bd8143f6c06ffd230ab55d7474697/Screen_Shot_2020-11-18_at_3.49.33_PM.png) | ![Screen_Shot_2020-11-18_at_3.49.44_PM](/uploads/ed42292e7c851f14f1995a4a2d39cf95/Screen_Shot_2020-11-18_at_3.49.44_PM.png) |

Before migrating, we are just using the usual classes to change alignment/styling based on screen width. After migrating, the buttons have to be duplicated and then hidden/shown.

#### Questions

- Assuming the above is the design we want to achieve (@tauriedavis is it?), is there another way we could go about this without duplicating code? Is there a way to account for an optional button section within the tab component?

#### What next?

I'm not on the frontend or foundations team so it's not really my call, but here are a few ideas:

1. Leave everything as-is, and continue duplicating the buttons
   - if we want to refactor this later, we should keep track of these somehow
   - update the tab migration epic to include instructions for duplicating buttons
2. Stop the tab migration altogether and either
   - Update the tabs component to account for buttons
   OR
   - Change the design

cc @agulina @afontaine",3
74559453,2020-11-18 11:38:39.927,GlEmptyState - Image doesn't fill space,"### Summary

The `GlEmptyState` has a `svgHeight` parameter, but setting it only sets the height. The width doesn't auto fill.

### Screenshots

![image](/uploads/8d7c99056288e37016c13da9cf9fb7e2/image.png)

### Proposed Solution

Set the img class to `gl-max-w-full!`.",1
74449025,2020-11-16 18:25:19.396,Style Accordions component,"# What

After Accordions being built in https://gitlab.com/gitlab-org/gitlab-ui/-/issues/1066 this will ensure it's styled (~""pajamas::style"") properly according to spec:

* [Design specifications](https://www.figma.com/file/qEddyqCrI7kPSBjGmwkZzQ/Component-library?node-id=3463%3A0)
* [Documentation](https://design.gitlab.com/components/accordions)",1
74448864,2020-11-16 18:21:40.457,Build Accordion component in gitlab-ui,"# What

There is already an existing component to show/hide content, Collapse.

However, it doesn't follow the Pajamas specification: 
* [Design specifications](https://www.figma.com/file/qEddyqCrI7kPSBjGmwkZzQ/Component-library?node-id=3463%3A0)
* [Documentation](https://design.gitlab.com/components/accordions)",2
74342086,2020-11-13 19:05:36.991,Remove visual_gitlab_integration CI job,"We [recently](https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/1762) had to allow the `visual_gitlab_integration` job to fail when it started failing for no obvious reason.

While this job has been useful to prevent some CSS leak issues in the past, it doesn't seem like we've had such issues lately thanks to some CSS structure changes.

We feel like the cost of fixing the job might be greater than the resulting benefit. In consequence, let's remove this job altogether!

Let's also remove the `Include GitLab CSS` checkbox which produces the same results as the CI job.

Related internal discussion: https://gitlab.slack.com/archives/CH9QG9TAQ/p1606510558271600",1
74184902,2020-11-11 07:37:10.627,Update component code adding description for form input fields,"In https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/642, we added an optional description area below the title of an input field. This issue is to update the component code.

| Former text input limitations | Proposed change - adds description field under label |
| ------ | ------ |
| ![image](/uploads/d776db3b7bb741ff37aa95ea9775ade0/image.png) | ![image](/uploads/86b01958e0fbb48cc0d8bf894ee3a043/image.png) |
| Descriptions could only go below the text input (""help text"") | Adds a description field under the label (doesn't limit designers to using the help text below the input field for a description |



## Implementation Plan
- In gitlab-ui add a `labelDescription` and `label` prop to https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/src/components/base/form/form_group/form_group.vue

- Add `label` slot to https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/src/components/base/form/form_group/form_group.vue
so end up with something like 

- Update story book examples + add examples
- Update unit tests and manually test in gitlab codebase.

```
<template>
  <b-form-group v-bind=""$attrs"" class=""gl-form-group"" :label-class=""actualLabelClass"">
    <template #label>
      <template v-if=""label"">{{ label }}</template>
      <gl-form-text v-if=""labelDescription"" class=""gl-mt-3"">{{ labelDescription }}</gl-form-text>
    </template>

    <slot v-for=""slot in Object.keys($slots)"" :slot=""slot"" :name=""slot""></slot>
  </b-form-group>
</template>
```",2
74010423,2020-11-07 13:52:55.288,Add `inputAttrs` prop to datepicker,"# Context

Identified in https://gitlab.com/gitlab-org/gitlab/-/merge_requests/46569#note_443497441

Sometimes we need to set the `id`, `name` and other properties for the input element used in the datepicker. Let's add an `inputAttrs` prop which we'll add a `v-bind` to.",1
73911450,2020-11-05 12:00:38.210,Improve modal with tertiary icon button for close action,"<!---
Please read this!

Before opening a new issue, make sure to search for keywords in the issues
filtered by the ""regression"" or ""bug"" label:

- https://gitlab.com/gitlab-org/gitlab/issues?label_name%5B%5D=regression
- https://gitlab.com/gitlab-org/gitlab/issues?label_name%5B%5D=bug

and verify the issue you're about to submit isn't a duplicate.
--->

### Summary

<!-- Summarize the bug encountered concisely. -->

The modal component could be improved with a tertiary icon button for the close action. This will yield the result that the close action has a dedicated background upon interaction. This improves the intractability now that the tertiary button component is ready for use.

### Steps to reproduce

<!-- Describe how one can reproduce the issue - this is very important. Please use an ordered list. -->

1. Open a modal at for example [/feature_flags](https://gitlab.com/gitlab-org/gitlab/-/feature_flags) by pressing the configure feature flags button
1. Hover the close `X` button in the top right corner
1. See almost no difference in visual interaction

### Example Project

<!-- If possible, please create an example project here on GitLab.com that exhibits the problematic 
behavior, and link to it here in the bug report. If you are using an older version of GitLab, this 
will also determine whether the bug is fixed in a more recent version. -->

Open the configure feature flags modal at [/feature_flags](https://gitlab.com/gitlab-org/gitlab/-/feature_flags) by pressing the configure feature flags button.

### What is the current *bug* behavior?

<!-- Describe what actually happens. -->

See almost no difference in visual interaction

### What is the expected *correct* behavior?

<!-- Describe what you should see instead. -->

See a clear visual change upon interaction

### Relevant logs and/or screenshots

<!-- Paste any relevant logs - please use code blocks (```) to format console output, logs, and code
 as it's tough to read otherwise. -->

| gif of interaction with current close button of a modal  |
| --- |
| ![Screenshot_2020-11-05_at_12.58.34](/uploads/db26b9847238f7d3ff74ac530936a9c8/Screenshot_2020-11-05_at_12.58.34.gif) |

| Gif of visual change on interaction with tertiary buttons  |
| --- |
| ![Screenshot_2020-11-05_at_12.59.24](/uploads/66099f4218ed4a0e23bd79b4e0c9df2d/Screenshot_2020-11-05_at_12.59.24.gif) |

### Output of checks

<!-- If you are reporting a bug on GitLab.com, write: This bug happens on GitLab.com -->

This bug happens on GitLab.com

#### Results of GitLab environment info

<!--  Input any relevant GitLab environment information if needed. -->

<details>
<summary>Expand for output related to GitLab environment info</summary>

<pre>

(For installations with omnibus-gitlab package run and paste the output of:
`sudo gitlab-rake gitlab:env:info`)

(For installations from source run and paste the output of:
`sudo -u git -H bundle exec rake gitlab:env:info RAILS_ENV=production`)

</pre>
</details>

#### Results of GitLab application Check

<!--  Input any relevant GitLab application check information if needed. -->

<details>
<summary>Expand for output related to the GitLab application check</summary>
<pre>

(For installations with omnibus-gitlab package run and paste the output of:
`sudo gitlab-rake gitlab:check SANITIZE=true`)

(For installations from source run and paste the output of:
`sudo -u git -H bundle exec rake gitlab:check RAILS_ENV=production SANITIZE=true`)

(we will only investigate if the tests are passing)

</pre>
</details>

### Possible fixes

<!-- If you can, link to the line of code that might be responsible for the problem. -->",1
73492249,2020-10-28 02:41:59.347,Allow setting full width on GlDatepicker,"To handle this use case, we would need to add this custom CSS.

```css
.board-sidebar-due-date .gl-datepicker,
.board-sidebar-due-date .gl-datepicker-input {
  width: 100%;
}
```

Adding the `.gl-w-full` utility does widen the container, but not the input.

<details>
<summary>Screenshot: full width datepicker input and container</summary>

![image](/uploads/482fa25942249b48cf1686d4fa61931f/image.png)
</details>

----

As a proposal, we can add a `block` prop as we do on `GlDropdown`.",1
72131097,2020-10-04 04:24:29.219,Official support of Node.js 14.x,"Node.js 14.x, released on 2020-04-21, was marked as LTS on 2020-10-27, so gitlab-ui has to support that version of Node.js.

cf.

- https://nodejs.org/ja/blog/release/v14.15.0/
- !1689 (#975)
- gitlab!43808 (gitlab#258963 gitlab#258964)",2
72008373,2020-10-01 10:57:44.522,GlButton: label variant should not render a <button>,"This follows-up on https://gitlab.com/gitlab-org/gitlab/-/merge_requests/38421#note_421432692

`GlButton` supports a `label` mode that can be used to render text with some basic button styles. Currently, this variant renders an inactive `<button>`, which seems bad practice in terms of accessibility as the label should be presentational only, so it would be preferable to render a `<span>` or a `<div>` instead.

When used in a button group, the actual button in the group could leverage the `aria-labelledby` attribute to reference the label button.",2
71370350,2020-09-18 14:52:21.549,Let GlTab extend `title-link-class` prop value,"When using `GlTab` it would be convenient to pass a class to the link, such as [in this scenario](https://gitlab.com/gitlab-org/gitlab/-/merge_requests/42236/diffs#note_415030061).

Given the [current implementation](https://gitlab.com/gitlab-org/gitlab-ui/-/blob/master/src/components/base/tabs/tab/tab.vue#L12) it is not possible.

We should add support for it.",1
70821392,2020-09-07 11:43:48.183,Css utilities in display.css do not follow responsive naming pattern,"The following discussion from !1704 should be addressed:

- [ ] @rob.hunt started a [discussion](https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/1704#note_408495978):  (+1 comment)

    > **Question (non-blocking):** This file doesn't seem to follow our [naming pattern](https://gitlab.com/gitlab-org/gitlab-ui/-/blob/master/doc/contributing/adding_css.md#responsive-utilities) for responsive utilities. Should we create an issue to fix these or are you aware of one already? :thinking:",2
70674655,2020-09-03 09:22:13.754,Provide option to trigger event on GlBanner button click,"## Issue
From the discussion https://gitlab.com/gitlab-org/gitlab/-/merge_requests/37658#note_40484599, currently the GlBanner takes props to allow adding a link for the Call to Action button component that gets rendered, but this does not cover scenarios where the action we want to perform is not simply navigating to a new url, for example triggering a modal window.

Additionally, if we have not already done so, we should migrate the `GlDeprecatedButton`

## Possible solutions
* The could be updated to emit a `click` event when the Call to action button is clicked, this would allow users to hook perform an action after the button click
* We could convert the Call to Action to a `<slot>`, allowing the user to provide their own code in place of the Call to Action button.",2
70524846,2020-08-31 21:29:47.273,Migrate GlAlert stories to CSF + MDX,"Once `@storybook/addon-docs` is setup, let's migrate `GlAlert`'s stories to CSF + MDX as a proof of concept.",2
70524710,2020-08-31 21:23:17.938,Setup @storybook/addon-docs,"Install and setup `@storybook/addon-docs` to enable [DocsPage](https://storybook.js.org/docs/vue/writing-docs/docs-page), [Component Story Format (CSF)](https://storybook.js.org/docs/vue/api/csf) and [MDX](https://storybook.js.org/docs/vue/api/mdx).",2
70427023,2020-08-28 15:19:28.219,Expose GlInputGroupText component,"We currently don't wrap BootstrapVue's `BInputGroupText` component which is used directly in `GlFormInputGroup` stories.

Let's create the `GlInputGroupText` wrapper so that it can be used in GitLab and other consuming projects without having to import BootstrapVue's own component.",1
70421412,2020-08-28 13:19:36.348,GlToggle: Clicking on the icon doesn't switch the toggle,"When clicking on the icon in `GlToggle`, the toggle stays in its initial state. To actually switch to the other state, one needs to click in the area behind the icon.

![before](/uploads/0445603574dbffdec53b7ffb66f8b80f/before.mov)",2
70219994,2020-08-24 13:24:52.591,"Follow-up from ""feat(css): add gl-pt-md-n2/gl-mt-md-n2 classes""","The following discussion from !1664 should be addressed:

- [ ] @sarahghp started a [discussion](https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/1664#note_400841497):  (+1 comment)

    > Thanks, @dstull and @oregand.
    > 
    > ![image](/uploads/727b70f047929a513d1c68355a9a52e5/image.png)",1
70218361,2020-08-24 12:51:02.724,"Follow-up from ""feat(css): add gl-display-md-block class""","Replace `d-md-block` with `gl-display-md-block` class in GitLab

The following discussion from !1660 should be addressed:

- [ ] @dstull started a [discussion](https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/1660#note_399607631):  (+2 comments)

    > should we do a follow up to replace any use of `d-md-block` in GitLab after this is released?  How is that handled usually and how often do we update `gitlab-ui` in GitLab?",1
70120539,2020-08-21 16:09:28.817,Migrate default export to named export(s) in src/directives/safe_html/safe_html.js,"- [ ] Convert the default export to named export(s) in `src/directives/safe_html/safe_html.js`.
- [ ] Make sure that internal `import` statements are also updated to reflect this change.
    * WARNING: some of the default exports might be used outside of GitLab UI. Use your best judgement to determine when a given export might be used in consuming projects. Those cases should be flagged as breaking changes and should be submitted along with integration MRs in the projects we control.
- [ ] Remove the override from `.eslintrc.yml`.
- [ ] Put an MR up, and integration MRs if needed.
- [ ] Follow the standard review process.",1
70120538,2020-08-21 16:09:28.740,Migrate default export to named export(s) in src/utils/use_fake_date.js,"- [ ] Convert the default export to named export(s) in `src/utils/use_fake_date.js`.
- [ ] Make sure that internal `import` statements are also updated to reflect this change.
    * WARNING: some of the default exports might be used outside of GitLab UI. Use your best judgement to determine when a given export might be used in consuming projects. Those cases should be flagged as breaking changes and should be submitted along with integration MRs in the projects we control.
- [ ] Remove the override from `.eslintrc.yml`.
- [ ] Put an MR up, and integration MRs if needed.
- [ ] Follow the standard review process.",1
70120537,2020-08-21 16:09:28.630,Migrate default export to named export(s) in src/utils/charts/data.js,"- [ ] Convert the default export to named export(s) in `src/utils/charts/data.js`.
- [ ] Make sure that internal `import` statements are also updated to reflect this change.
    * WARNING: some of the default exports might be used outside of GitLab UI. Use your best judgement to determine when a given export might be used in consuming projects. Those cases should be flagged as breaking changes and should be submitted along with integration MRs in the projects we control.
- [ ] Remove the override from `.eslintrc.yml`.
- [ ] Put an MR up, and integration MRs if needed.
- [ ] Follow the standard review process.",1
70120535,2020-08-21 16:09:28.504,Migrate default export to named export(s) in src/directives/tooltip.js,"- [ ] Convert the default export to named export(s) in `src/directives/tooltip.js`.
- [ ] Make sure that internal `import` statements are also updated to reflect this change.
    * WARNING: some of the default exports might be used outside of GitLab UI. Use your best judgement to determine when a given export might be used in consuming projects. Those cases should be flagged as breaking changes and should be submitted along with integration MRs in the projects we control.
- [ ] Remove the override from `.eslintrc.yml`.
- [ ] Put an MR up, and integration MRs if needed.
- [ ] Follow the standard review process.",1
70120534,2020-08-21 16:09:28.445,Migrate default export to named export(s) in src/utils/validation_utils.js,"- [ ] Convert the default export to named export(s) in `src/utils/validation_utils.js`.
- [ ] Make sure that internal `import` statements are also updated to reflect this change.
    * WARNING: some of the default exports might be used outside of GitLab UI. Use your best judgement to determine when a given export might be used in consuming projects. Those cases should be flagged as breaking changes and should be submitted along with integration MRs in the projects we control.
- [ ] Remove the override from `.eslintrc.yml`.
- [ ] Put an MR up, and integration MRs if needed.
- [ ] Follow the standard review process.",1
70120532,2020-08-21 16:09:27.990,Migrate default export to named export(s) in src/components/mixins/button_mixin.js,"- [ ] Convert the default export to named export(s) in `src/components/mixins/button_mixin.js`.
- [ ] Make sure that internal `import` statements are also updated to reflect this change.
    * WARNING: some of the default exports might be used outside of GitLab UI. Use your best judgement to determine when a given export might be used in consuming projects. Those cases should be flagged as breaking changes and should be submitted along with integration MRs in the projects we control.
- [ ] Remove the override from `.eslintrc.yml`.
- [ ] Put an MR up, and integration MRs if needed.
- [ ] Follow the standard review process.",1
70120528,2020-08-21 16:09:25.917,Migrate default export to named export(s) in src/directives/resize_observer/resize_observer.js,"- [ ] Convert the default export to named export(s) in `src/directives/resize_observer/resize_observer.js`.
- [ ] Make sure that internal `import` statements are also updated to reflect this change.
    * WARNING: some of the default exports might be used outside of GitLab UI. Use your best judgement to determine when a given export might be used in consuming projects. Those cases should be flagged as breaking changes and should be submitted along with integration MRs in the projects we control.
- [ ] Remove the override from `.eslintrc.yml`.
- [ ] Put an MR up, and integration MRs if needed.
- [ ] Follow the standard review process.",1
70120523,2020-08-21 16:09:25.377,Migrate default export to named export(s) in src/directives/collapse_toggle.js,"- [ ] Convert the default export to named export(s) in `src/directives/collapse_toggle.js`.
- [ ] Make sure that internal `import` statements are also updated to reflect this change.
    * WARNING: some of the default exports might be used outside of GitLab UI. Use your best judgement to determine when a given export might be used in consuming projects. Those cases should be flagged as breaking changes and should be submitted along with integration MRs in the projects we control.
- [ ] Remove the override from `.eslintrc.yml`.
- [ ] Put an MR up, and integration MRs if needed.
- [ ] Follow the standard review process.",1
70120522,2020-08-21 16:09:25.128,Migrate default export to named export(s) in src/directives/modal.js,"- [ ] Convert the default export to named export(s) in `src/directives/modal.js`.
- [ ] Make sure that internal `import` statements are also updated to reflect this change.
    * WARNING: some of the default exports might be used outside of GitLab UI. Use your best judgement to determine when a given export might be used in consuming projects. Those cases should be flagged as breaking changes and should be submitted along with integration MRs in the projects we control.
- [ ] Remove the override from `.eslintrc.yml`.
- [ ] Put an MR up, and integration MRs if needed.
- [ ] Follow the standard review process.",1
70120496,2020-08-21 16:08:24.336,Migrate default export to named export(s) in src/components/base/form/form_checkbox_tree/models/tree.js,"- [x] Convert the default export to named export(s) in `src/components/base/form/form_checkbox_tree/models/tree.js`.
- [x] Make sure that internal `import` statements are also updated to reflect this change.
    * WARNING: some of the default exports might be used outside of GitLab UI. Use your best judgement to determine when a given export might be used in consuming projects. Those cases should be flagged as breaking changes and should be submitted along with integration MRs in the projects we control.
- [x] Remove the override from `.eslintrc.yml`.
- [x] Put an MR up, and integration MRs if needed.
- [x] Follow the standard review process.",1
70120464,2020-08-21 16:07:21.145,Migrate default export to named export(s) in src/components/base/form/form_checkbox_tree/models/node.js,"- [x] Convert the default export to named export(s) in `src/components/base/form/form_checkbox_tree/models/node.js`.
- [x] Make sure that internal `import` statements are also updated to reflect this change.
    * WARNING: some of the default exports might be used outside of GitLab UI. Use your best judgement to determine when a given export might be used in consuming projects. Those cases should be flagged as breaking changes and should be submitted along with integration MRs in the projects we control.
- [x] Remove the override from `.eslintrc.yml`.
- [x] Put an MR up, and integration MRs if needed.
- [x] Follow the standard review process.",1
70077512,2020-08-18 16:32:59.012,add gl-display-md-block,"The following discussion from gitlab!39348 should be addressed:

- [ ] @afontaine started a [discussion](https://gitlab.com/gitlab-org/gitlab/-/merge_requests/39348#note_397872160):  (+2 comments)

    > can we make a follow up to add any non-gitlab utilities to gitlab ui?",2
69946762,2020-08-18 00:08:55.044,GlSearchBoxByType calls input listener twice,"The following discussion from gitlab!39630 should be addressed:

- [ ] @markrian started a [discussion](https://gitlab.com/gitlab-org/gitlab/-/merge_requests/39630#note_397284845):  (+6 comments)

    > **thought**: Rather than `watch`ing the model, we could instead just add an `input` event listener to the `GlSearchBoxByType`. WDYT?",1
69693538,2020-08-11 12:45:25.878,Add 2nd Y-axis for column chart and stacked column chart,"Broken down from https://gitlab.com/gitlab-org/gitlab-ui/-/issues/889#note_393850965

Add 2nd Y-axis for column chart (and stacked column chart)

![image](/uploads/5c2794a8b292fe55ef67fcb69e4c6bae/image.png)",2
69693457,2020-08-11 12:43:39.261,Add line for column chart and stacked column chart,"Broken down from https://gitlab.com/gitlab-org/gitlab-ui/-/issues/889#note_393850965

Implement a variant for both the column and the stacked column chart that allows for rendering an additional line series.

{{image.png}}",2
68958280,2020-07-24 17:56:38.260,Add size (or similar) prop to form input,"Our [design specs for inputs](https://www.figma.com/file/qEddyqCrI7kPSBjGmwkZzQ/Pajamas-UI-Kit?node-id=2977%3A1) indicate that there are certain sizes (widths) that are allowed.

While the underlying `BFormInput` component already has a `size` prop, that changes the padding/margins around the input. In any case, our styles override that behaviour anyway. I suggest we repurpose the existing `size` prop to implement these widths.

![Screenshot_from_2020-07-24_19-01-36](/uploads/59446b278e5c1211a74824057425ca4a/Screenshot_from_2020-07-24_19-01-36.png)

The sizes are (based on the design spec):

| Name | (Max) Width |
| ------ | ------ |
| xs | 80px |
| sm | 160px |
| md | 240px |
| lg | 320px |
| xl | 560px |

## Questions

- What would be the _default_ size? Currently, inputs take up all available width; i.e., they're unbounded. Should that still be possible?
- Is setting this via `max-width` sufficient?",2
68838700,2020-07-22 07:31:32.571,GlAlert: Add slot for title,"Add a title slot to the `GlAlert` component.

Why? It's sometimes necessary to add custom elements or styles to the title. For example the design in https://gitlab.com/gitlab-org/gitlab/-/merge_requests/36962#modal:

![image](/uploads/681153ac7cba5d752638f5e6c9c32b6d/image.png)",1
59851170,2020-07-15 21:47:59.786,Proposal: change border and box-shadow units from `rem` to `px`,"## Background

There are a number of instances where we use `px-to-rem(1px)`. This causes some rounding errors and in turn can cause issues with rendering. 

```
px-to-rem(1px) == 0.06rem
0.06 * 16 = 0.96, i.e. less than 1px!
```
Stollen from https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/1534

## Proposal

Replace `border` and `box-shadow` properties that are using `rem` with `px`. Here is a list of places to replace:

- [src/components/base/button/button.scss#L6](https://gitlab.com/gitlab-org/gitlab-ui/-/blob/master/src/components/base/button/button.scss#L6)
- [src/components/base/button/button.scss#L11](https://gitlab.com/gitlab-org/gitlab-ui/-/blob/master/src/components/base/button/button.scss#L11)
- [src/components/base/button/button.scss#L16](https://gitlab.com/gitlab-org/gitlab-ui/-/blob/master/src/components/base/button/button.scss#L16)
- [src/components/base/button/button.scss#L21](https://gitlab.com/gitlab-org/gitlab-ui/-/blob/master/src/components/base/button/button.scss#L21)
- [src/components/base/button/button.scss#L65](https://gitlab.com/gitlab-org/gitlab-ui/-/blob/master/src/components/base/button/button.scss#L65)
- [src/components/base/button/button.scss#L90](https://gitlab.com/gitlab-org/gitlab-ui/-/blob/master/src/components/base/button/button.scss#L90)
- [src/components/base/path/path.scss#L8](https://gitlab.com/gitlab-org/gitlab-ui/-/blob/master/src/components/base/path/path.scss#L8)
- [src/components/base/segmented_control/segmented_control.scss#L5](https://gitlab.com/gitlab-org/gitlab-ui/-/blob/master/src/components/base/segmented_control/segmented_control.scss#L5)",2
57064598,2020-07-14 11:29:40.905,Column + Line chart with 2 Y-axes,"### Problem

When showing a chart containing data sets at different orders of magnitude (e.g. issues closed, 10; issues opened, 10; total issues 1,000), this reduces the size of the visualisations at lower orders of magnitude to a point where they aren't useful.

### Solution

* Add a variant to our [charts](https://design.gitlab.com/components/charts) component which has a second Y-axis.
* Add guidance to our documentation on using this (potentially confusing) pattern
* [See Figma prototype](https://www.figma.com/proto/GevTEMYLCPyWn2bo564C2V/Grouped-Stacked-Column?node-id=55%3A916&viewport=95%2C316%2C0.8319990634918213&scaling=min-zoom)

![image](/uploads/10359a184ebb3138efa520655adca82d/image.png)",2
127111587,2023-04-24 14:12:15.060,Remove SparklineChart storyshots,"Continuation of #2176

Storyshots for GlSparklineChart are proving to be flakey, so we should remove them for the time being

---

**Update:**

This may be unnecessary depending on the result of #2215.
I'm adding ~""workflow::blocked"" until I can determine if removing the storyshots is necessary",1
126995058,2023-04-20 15:40:12.154,Storyshots > Increase failure threshold for chart components,"Our chart components tend to make visual tests flaky due to `echarts` being non-deterministic in some of the drawing it does. To address this, we are thinking that raising the failure threshold for charts might be the simplest solution. This should be doable with the `getMatchOptions` function: https://storybook.js.org/addons/@storybook/addon-storyshots-puppeteer

/cc @markrian",2
126672382,2023-04-14 13:35:37.277,Dropdowns > Make fluid-width opt-in,"Follows-up on https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/3384#note_1352998790.

We have recently made the dropdowns's width a bit more flexible by removing the fixed width in favor of a minimum and a maximum width.

In some cases, we might still want to prevent the dropdowns from auto-sizing themselves. E.g.:


| **Wrapping example** | **Disclosure example** |
| ------ | ------ |
| ![image](/uploads/d0e20428349383cb2d14f4513b3596d5/image.png) | ![image](/uploads/94c5cfa80278023c52fd5bb88ef9835a/image.png) |

### Implementation plan

- [x] Restore the fixed width at `15.5rem`. This should be the default.
- [x] The fluid layout `15.5rem <= width <= 28.5rem` can be opted in via a new prop.",1
125379808,2023-03-16 15:02:52.925,Code for stories isn't consistently available,"When looking at some story within a docs page, it's not always possible to expand the code panel to copy the source code.

The panel seems to become available when navigating to a story via Storybook's navigation.

Let's make sure the code panel is always available.",1
125253619,2023-03-14 16:24:52.763,Add same styling for DisclosureDropdown toggle as for other buttons in a button group,"### Description

Style `DisclosureDropdown` toggle the same way as other buttons inside `GlButtonGroup`. Currently the styles of the DisclosureDropdown take precedence there.

![Screenshot_2023-03-14_at_10.34.32](/uploads/805e4a04eccbf4354e0e48d472601714/Screenshot_2023-03-14_at_10.34.32.png)

#### Figma file

<!-- If design specs exist in Figma, link them below. Otherwise, remove the link and add a link to the issue to add the component to Figma -->

[View design specs in Figma →](ADD LINK TO FIGMA FILE/FRAME)

### Checklist

Make sure the following are completed before closing the issue:

1. [x] Assign the correct component label to this issue.
1. [x] Create an MR with the additions or updates needed.
1. [x] Be sure to get your MR reviewed by a [FE/UX Foundations designer][foundations-team].
1. [ ] When applicable, create an [MR in Pajamas][pajamas-mr] to update the demos. If you do not have capacity to complete the demos, [create an issue in Pajamas][pajamas-issue] and bring the issue to your team planning session for prioritization and scheduling. Mark the issue as related to this one.
1. [ ] When applicable, [create an MR in Pajamas][pajamas-mr] to update the component status.
1. [ ] When applicable, [create an issue in Pajamas][pajamas-issue] using the [""Component Documentation""][pajamas-component-documentation-template] issue template to update guidelines. Ping a designer on your team for awareness and bring the issue to your team planning meeting for prioritization and scheduling.
1. [ ] When applicable, [create an issue in Pajamas][pajamas-issue] using the [""Figma update""][pajamas-figma-update-template] issue template to update the Figma UI Kit. Ping a designer on your team for awareness and bring the issue to your team planning meeting for prioritization and scheduling.
1. [ ] When introducing a major or breaking change, communicate the changes within the [Engineering Week in Review][eng-week-in-review-doc].
1. [x] 🎉 Congrats, you made it! You can now close this issue.

<!-- 
### Resources

* [Compontent Lifecycle][component-lifecycle]
* [Adding component][adding-components]
* [Adding CSS][adding-css]
* [Breaking changes][breaking-changes]
-->",1
125252213,2023-03-14 16:14:52.569,Add disabled styling for the DisclosureDropdownItem component,"### Description

Add `disabled` styling for the `DisclosureDropdownItem` component. Currently the `disabled` attribute is set correctly on `DisclosureDropdownItem` (= the button is not clickable) but it is still styled the same as normal button.

Expected behavior: when `disabled` attribute is set the button has a light grey color.

Current behavior:

![Screenshot_2023-03-14_at_10.23.53](/uploads/62fbea9b032a4bd0da52ae6535905087/Screenshot_2023-03-14_at_10.23.53.png)

Code example of how to reproduce this behavior

```
const actionItems = [
  {
    text: __('scheduled action'),
  },
  {
    text: __('expired action'),
    extraAttrs: {
      disabled: true,
    },
  },
];

<template>
  <gl-disclosure-dropdown
    :text=""title""
    :title=""title""
    :aria-label=""title""
    :items=""actionItems""
  >
    <gl-disclosure-dropdown-item
      v-for=""item in actionItems""
      :key=""item.text""
      :item=""item""
    >
      <template #list-item>
        <span class=""gl-flex-grow-1"">{{ item.text }}</span>
      </template>
    </gl-disclosure-dropdown-item>
  </gl-disclosure-dropdown>
</template>
```

### Checklist

Make sure the following are completed before closing the issue:

1. [x] Assign the correct component label to this issue.
1. [x] Create an MR with the additions or updates needed.
1. [x] Be sure to get your MR reviewed by a [FE/UX Foundations designer][foundations-team].
1. [ ] When applicable, create an [MR in Pajamas][pajamas-mr] to update the demos. If you do not have capacity to complete the demos, [create an issue in Pajamas][pajamas-issue] and bring the issue to your team planning session for prioritization and scheduling. Mark the issue as related to this one.
1. [ ] When applicable, [create an MR in Pajamas][pajamas-mr] to update the component status.
1. [ ] When applicable, [create an issue in Pajamas][pajamas-issue] using the [""Component Documentation""][pajamas-component-documentation-template] issue template to update guidelines. Ping a designer on your team for awareness and bring the issue to your team planning meeting for prioritization and scheduling.
1. [ ] When applicable, [create an issue in Pajamas][pajamas-issue] using the [""Figma update""][pajamas-figma-update-template] issue template to update the Figma UI Kit. Ping a designer on your team for awareness and bring the issue to your team planning meeting for prioritization and scheduling.
1. [ ] When introducing a major or breaking change, communicate the changes within the [Engineering Week in Review][eng-week-in-review-doc].
1. [ ] 🎉 Congrats, you made it! You can now close this issue.

<!-- 
### Resources

* [Compontent Lifecycle][component-lifecycle]
* [Adding component][adding-components]
* [Adding CSS][adding-css]
* [Breaking changes][breaking-changes]
-->",1
125233091,2023-03-14 10:15:30.568,Add placeholder/not selected state for dropdown button,"In the new dropdown we don't have a state which indicates the placeholder/not selected state like we had in the old dropdown.

| New dropdown button | Old dropdown button |
| ------ | ------ |
| ![old](/uploads/07d499d9da11dc578572316de332a4d4/old.png) | ![new](/uploads/a0cd041e37aa5000bc3baf3c1a27658c/new.png) |

**Proposed solution**

Add `gl-text-gray-500` when there is no selection to the dropdown button.

| Before | After |
| ------ | ------ |
| ![before](/uploads/941f1634f22f5c9db80bd636b3493023/before.png) | ![after](/uploads/3c35268b32bbc74c7dfcc389a27f2a09/after.png) |",1
124206478,2023-02-23 16:47:57.046,Add option to remove header from GlModal,"## Problem

In https://gitlab.com/gitlab-org/gitlab/-/issues/378542 we need to create a search modal that is headerless. There's no way to do that with the current GitLab UI component

## Proposal

Add that ability. It should be possible with a v-if statement hooked up to a boolean prop. We want the whole header to disappear, including the close icon.

https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/src/components/base/modal/modal.vue",2
124134737,2023-02-22 15:26:58.871,GlLineChart: Chart does not fill container height when `auto`,"## Problem to solve

In the ~""group::product analytics"" dashboard setting the chart height to `auto` and setting `responsive` creates a chart with `0` height.

This can be fixed by setting the chart height to full or using flex grow. However there is no API to style the `GlChart` component inside `GlLineChart`.

Needed for https://gitlab.com/gitlab-org/gitlab/-/issues/385181+.

### Screenshots

Chart with height: `auto`

![image](/uploads/88437de9b5980bdaa6e44ba95e5dcb95/image.png)

### Proposed solution

Add an optional property to `GlLineChart` to set the CSS class on its `GlChart` element.

Note: This could also potentially be applied to all other chart components.

### Implementation plan

There are two options:

1. Add a `chartStyle` to `GlLineChart` that sets the style on its `GlChart`.
1. Add a `chartStyle` to `GlChart` which would be passed by `GlLineChart`'s `v-bind=""$attrs""`.

My preference would be to go with the second since it would solve it for all components that wrap `GlChart`.",3
123823683,2023-02-16 16:25:29.143,GlFilteredSearch: Stop treating spaces specially,"This is a follow-up for https://gitlab.com/gitlab-org/gitlab-ui/-/issues/1803. The goal of this issue is to get https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/3226 merged. That includes:

- Add an opt in flag to enable the new behaviour. The old behaviour must remain.
- Add tests covering the new behaviour.
- Add documentation for new behaviour.",3
123419039,2023-02-08 16:55:10.222,Improve the semantics  of the disclosure content wrapper when it has custom content,"The following discussion from gitlab!110683 should be addressed:

- [ ] @sdejonge started a [discussion](https://gitlab.com/gitlab-org/gitlab/-/merge_requests/110683#note_1269738234):  (+2 comments)

    > **question:** Can we remove this `<div role=""group"">`? I think the `<slot>` inside `<gl-disclosure-dropdown>` should already get an associated role from the computed `<ul>` or `<div role=""group"">`.
    > 
    > The HTML output has `<div>` children of `<ul>` which is invalid.
    > 
    > ```html
    > <ul id=""disclosure-6"" aria-labelledby=""dropdown-toggle-btn-2"" data-testid=""disclosure-content"" tabindex=""-1"" class=""gl-new-dropdown-contents"">
    >   <div>
    >     <ul role=""group"" class=""gl-mb-0 gl-pl-0 gl-list-style-none"">...</ul>
    >   </div>
    >   <div class=""gl-border-t gl-pt-2 gl-mt-2"">
    >     <ul role=""group"" class=""gl-mb-0 gl-pl-0 gl-list-style-none"">...</ul>
    >   </div>
    >   <div class=""gl-border-t gl-pt-2 gl-mt-2"">
    >     <ul role=""group"" class=""gl-mb-0 gl-pl-0 gl-list-style-none"">...</ul>
    >   </div>
    > </ul>
    > ```
    > 
    > The `isAllGroups` util to set the parent as `<div role=""group"">` checks the `items` but not the `<slot>` contents as in this case.
    > 
    > **question:** would it be silly to make the root element of `<gl-disclosure-dropdown-group>` a `<li>` and always render the slot contents of `<gl-disclosure-dropdown>` in a `<ul>`? Or is there a better way to set the parent as `<div role=""group"">` when the `<slot>` content only contains `<gl-disclosure-dropdown-group>`?",1
123269126,2023-02-08 09:03:19.110,feat(toggle): Add description field and inline variant,"### Description

In Pajamas we have defined a `description` field, see https://design.gitlab.com/components/toggle \
But we currently do not have it present in GitLab UI. Also the inline variant is currently not implemented in GitLab UI. This MR adds both.

| Before | After |
| ------ | ------ |
| ![image](/uploads/a9f9608624a3c65663cf993be65ca2dc/image.png) | ![image](/uploads/85cae787bb28d9417c4233903edeeb45/image.png) |

| Inline variant |
| ------ |
| ![image](/uploads/f75a07783626588eab6a7defbc293955/image.png) |

#### Figma file

[View design specs in Figma →](https://www.figma.com/file/qEddyqCrI7kPSBjGmwkZzQ/%F0%9F%93%99-Component-library?node-id=20182%3A110&t=OdVE7sYmYcq4g41C-11)

### Checklist

Make sure the following are completed before closing the issue:

1. [X] Assign the correct component label to this issue.
1. [ ] Create an MR with the additions or updates needed.
1. [ ] Be sure to get your MR reviewed by a [FE/UX Foundations designer][foundations-team].
1. [ ] When applicable, create an [MR in Pajamas][pajamas-mr] to update the demos. If you do not have capacity to complete the demos, [create an issue in Pajamas][pajamas-issue] and bring the issue to your team planning session for prioritization and scheduling. Mark the issue as related to this one.
1. [ ] When applicable, [create an MR in Pajamas][pajamas-mr] to update the component status.
1. [ ] When applicable, [create an issue in Pajamas][pajamas-issue] using the [""Component Documentation""][pajamas-component-documentation-template] issue template to update guidelines. Ping a designer on your team for awareness and bring the issue to your team planning meeting for prioritization and scheduling.
1. [ ] When applicable, [create an issue in Pajamas][pajamas-issue] using the [""Figma update""][pajamas-figma-update-template] issue template to update the Figma UI Kit. Ping a designer on your team for awareness and bring the issue to your team planning meeting for prioritization and scheduling.
1. [ ] When introducing a major or breaking change, communicate the changes within the [Engineering Week in Review][eng-week-in-review-doc].
1. [ ] 🎉 Congrats, you made it! You can now close this issue.

<!-- 
### Resources

* [Compontent Lifecycle][component-lifecycle]
* [Adding component][adding-components]
* [Adding CSS][adding-css]
* [Breaking changes][breaking-changes]
-->

[foundations-team]: https://about.gitlab.com/company/team/?department=fe-ux-foundations-team
[pajamas-mr]: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/merge_requests/new
[pajamas-issue]: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/new
[pajamas-component-documentation-template]: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/new?issuable_template=Component%20documentation
[pajamas-figma-update-template]: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/new?issuable_template=Figma%20update
[component-lifecycle]: https://design.gitlab.com/get-started/lifecycle
[adding-components]: https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/doc/contributing/adding_components.md
[adding-css]: https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/doc/contributing/adding_css.md
[breaking-changes]: https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/doc/contributing/breaking_changes_to_components.md
[eng-week-in-review-doc]: https://docs.google.com/document/d/1GQbnOP_lr9KVMVaBQx19WwKITCmh7H3YlgO-XqVwv0M/edit",1
123028299,2023-02-03 21:13:40.026,bug(GlCollapsibleListbox): keyboard navigation doesn't work when there is no item selected,"A fairly common use case for `GlCollapsibleListbox` is to initially have no item selected. However, if you set the `selected` prop to `null` then the keyboard navigation doesn't work. See video below:

![Screen_Recording_2023-02-03_at_12.20.10_PM](/uploads/1393d7fc07d9b641acc1a7d95a3276fe/Screen_Recording_2023-02-03_at_12.20.10_PM.mov)

Normally in this use case you would use the `toggle-text` prop to set the toggle button text when no item is selected. In the above video I didn't set this prop which is why the toggle button is empty.

If you set the `selected` prop to `undefined` the keyboard navigation does work :shrug: 

### How to reproduce

1. Run storybook locally
2. Change [src/components/base/new_dropdowns/listbox/listbox.stories.js#L144](https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/src/components/base/new_dropdowns/listbox/listbox.stories.js#L144) to `null`",1
123015705,2023-02-03 16:19:53.150,Set focus on the first child of the custom toggle in new dropdowns,"Currently, the custom toggle's container ('div') element gets the focus. The problem is that the user might want to style the focus ring differently

| Focus on `div` | Focus on custom content |
| ------ | ------ |
|  ![Screenshot_2023-02-03_at_18.15.57](/uploads/1a2af77eb4fe456243efbd301556aee6/Screenshot_2023-02-03_at_18.15.57.png)|      ![Screenshot_2023-02-03_at_18.15.33](/uploads/646a92ce8d636f028c78f4a64633fe6d/Screenshot_2023-02-03_at_18.15.33.png)  |

As @pgascouvaillancourt we could solve it by setting the focus on the first child of the custom toggle instead of the wrapper. Then user can have control of how it looks",2
122985249,2023-02-03 08:33:32.134,Toggle - Add states,"### Description

Update the toggle component's states according to changes introduced with https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/1530+

#### Figma file

[View design specs in Figma →](https://www.figma.com/file/qEddyqCrI7kPSBjGmwkZzQ/%F0%9F%93%99-Component-library?node-id=425%3A140&t=gXmjFsqGayYbQbgH-11)

### Checklist

Make sure the following are completed before closing the issue:

1. [X] Assign the correct component label to this issue.
1. [ ] Create an MR with the additions or updates needed.
1. [ ] Be sure to get your MR reviewed by a [FE/UX Foundations designer][foundations-team].
1. [ ] When applicable, create an [MR in Pajamas][pajamas-mr] to update the demos. If you do not have capacity to complete the demos, [create an issue in Pajamas][pajamas-issue] and bring the issue to your team planning session for prioritization and scheduling. Mark the issue as related to this one.
1. [ ] When applicable, [create an MR in Pajamas][pajamas-mr] to update the component status.
1. [ ] When applicable, [create an issue in Pajamas][pajamas-issue] using the [""Component Documentation""][pajamas-component-documentation-template] issue template to update guidelines. Ping a designer on your team for awareness and bring the issue to your team planning meeting for prioritization and scheduling.
1. [ ] When applicable, [create an issue in Pajamas][pajamas-issue] using the [""Figma update""][pajamas-figma-update-template] issue template to update the Figma UI Kit. Ping a designer on your team for awareness and bring the issue to your team planning meeting for prioritization and scheduling.
1. [ ] When introducing a major or breaking change, communicate the changes within the [Engineering Week in Review][eng-week-in-review-doc].
1. [ ] 🎉 Congrats, you made it! You can now close this issue.

<!-- 
### Resources

* [Compontent Lifecycle][component-lifecycle]
* [Adding component][adding-components]
* [Adding CSS][adding-css]
* [Breaking changes][breaking-changes]
-->

[foundations-team]: https://about.gitlab.com/company/team/?department=fe-ux-foundations-team
[pajamas-mr]: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/merge_requests/new
[pajamas-issue]: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/new
[pajamas-component-documentation-template]: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/new?issuable_template=Component%20documentation
[pajamas-figma-update-template]: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/new?issuable_template=Figma%20update
[component-lifecycle]: https://design.gitlab.com/get-started/lifecycle
[adding-components]: https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/doc/contributing/adding_components.md
[adding-css]: https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/doc/contributing/adding_css.md
[breaking-changes]: https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/doc/contributing/breaking_changes_to_components.md
[eng-week-in-review-doc]: https://docs.google.com/document/d/1GQbnOP_lr9KVMVaBQx19WwKITCmh7H3YlgO-XqVwv0M/edit",1
121359809,2023-01-06 15:46:48.951,Fix Listbox group header padding according to design,"Follow up for this [comment](https://gitlab.com/gitlab-org/gitlab/-/merge_requests/106738#note_1223712370) 

As it was suggested by @cam.x , `y-padding` for needs to be adjusted according to [design documentation](https://www.figma.com/file/qEddyqCrI7kPSBjGmwkZzQ/%F0%9F%93%99-Component-library?node-id=66756%3A108021&t=a82xCnl6M4N2MyUf-0)

Now it is `4px` and according to design specs, it needs to be `8px`

<details><summary>Screenshot</summary>
![Screenshot_2022-12-29_at_15.13.51](/uploads/f22b72dd9db204678d8e826d16729550/Screenshot_2022-12-29_at_15.13.51.png)
</details>",1
121352874,2023-01-06 13:41:58.064,Create `gl-focus-ring` utility,"We have `gl-focus` mixin. It would be nice to have the default focus CSS class available. We could name it `gl-focus-ring` for instance. When the class is available - replace focus-related CSS in `base_dropdown.css` and use the utility instead,",1
121304750,2023-01-05 16:02:45.354,Consider upgrading to Storybook 7 (and webpack@5),"Storybook 7 [will soon be](https://storybook.js.org/blog/7-0-beta/)/[is available](https://storybook.js.org/releases/7.0). We should consider upgrading to it.

See the [migration guide](https://storybook.js.org/migration-guides/7.0) for details.

Possible improvements:
- Faster builds
- Keeping up to date

Possible issues:
- Dropping webpack support
- CSF API changes",2
121295953,2023-01-05 14:22:58.102,Upgrade bootstrap-vue to 2.23.1,"I'm creating separate issue to track this effort, cause it is important for ~""vue3-migration"" 

Previous attempt at !3116 was reverted, because it caused regressions in gitlab due to tables rendering

We need to upgrade bootstrap-vue to latest version to unlock @vue/compat compatibility

Prior work:

* https://gitlab.com/gitlab-org/gitlab/-/merge_requests/102067",3
121293990,2023-01-05 14:03:55.702,Backport CSS utils from GitLab to GitLab UI,"We have written a number of CSS utils within GitLab directly in `app/assets/stylesheets/utilities.scss`. Let's move those to GitLab UI and cleanup GitLab's stylesheet.

- [x] Add CSS utils to GitLab UI.
- [x] Upon upgrading `@gitlab/ui` in GitLab, remove the unnecessary utils.",2
126297668,2023-01-03 16:25:24.204,"Dropdown > Direction for rendering overflowing, non-wrapping text within items","In some cases, we might need to display long non-wrapping texts within a dropdown's items. For example, the notification settings display the user's emails, which might overflow the dropdown menu:

![Screenshot_2023-01-03_at_8.41.24_AM](/uploads/d0684d76d5d80e44093e55dfdd5eb212/Screenshot_2023-01-03_at_8.41.24_AM.png)

## Implementation plan

- [x] `GlTruncate`: ensure the rendered element has an accessible `aria-label` attribute.
- [x] `GlCollapsibleListbox`
  - [x] Make dropdown's width more flexible:
    - [x] `min-width: 15.5rem`
    - [x] `max-width: 28.5rem`
  - [x] Leverage `GlTruncate` to truncate long items' names. This should be probably be the consumer's responsibility, so this can be a recommendation in the docs.
- [x] Ensure the notifications settings render properly as per https://gitlab.com/gitlab-org/gitlab/-/issues/373843#note_1227467886.",2
120345219,2022-12-13 15:38:42.905,Code blocks with only one line render as one or more `[object Object]` strings on first load,"1. Load a docs page from scratch, e.g. https://gitlab-org.gitlab.io/gitlab-ui/?path=/docs/base-button--default
2. Observe some code blocks render as `[object Object]`, or similar
3. Click on another component's story from the nav, and then click on the original story in the nav
4. Observe that the code block renders correctly

It _seems_ to only affect code blocks which have one line, e.g., https://gitlab.com/gitlab-org/gitlab-ui/blob/81a8250e2421022d885afb59b587bd5766a00480/src/components/base/badge/badge.md#L7-9.

## Expected

From https://gitlab-org.gitlab.io/gitlab-ui/?path=/docs/base-button--default:

![correct](/uploads/6f107c604a5109f1219141e942abbb04/correct.png)

## Actual

![wat](/uploads/c588f23b0b8fd2cca9c395383ea8be71/wat.png)

## Another example

From https://gitlab-org.gitlab.io/gitlab-ui/?path=/docs/utilities-sprintf--sentence-with-link

![lol](/uploads/c5f2a22e63637d3cf9afc380dfbf729c/lol.png)",1
118908608,2022-11-17 12:30:36.360,Fix horizontal padding in a drawer,"From [this discussion](https://gitlab.com/gitlab-org/gitlab/-/merge_requests/102290#note_1175263842).

According to [Pajamas UI Kit in Figma](https://www.figma.com/file/qEddyqCrI7kPSBjGmwkZzQ/Component-library?node-id=48150%3A59274), horizontal padding should be `16px horizontal`.

All current drawers have bigger `padding` that calculates to `24px`

Goal of this MR is to change drawer `padding` from `24px` -> `16px`.",1
118576345,2022-11-11 17:00:37.748,Remove GlListbox alias,"Once #2085 and gitlab#382423 are done, the `GlListbox` alias can be removed in a major breaking change for GitLab UI.",1
118576293,2022-11-11 16:59:03.426,Add GlCollapsibleListbox export,,1
117594383,2022-10-26 10:04:47.569,"Follow-up from ""Searchbar clear button events""","This issue is about fixing a bug that was raised from the [Merge Request](https://gitlab.com/gitlab-org/gitlab/-/merge_requests/93687) review. 
I need to expose events of the clear button that's inside of the search_box_by_type component. 

In the Header Search component, I need to be able to control the appearance of the whole component (search_box_by_type) based on the state of this button, subtracting and contracting the search field in the header with an awareness of focus, blur, click on the clear button. 

![clear-button-handler-after](/uploads/85f89ab32fd39afe2a87053ede4803c3/clear-button-handler-after.mp4)",1
116890780,2022-10-14 11:39:08.800,Add @vue/compat storybook support,"https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/3087+ adds support for running our unit tests with vue3 (and if we ignore snapshots all are green, so our codebase is somewhat `@vue/compat` ready)

We need to implement same approach for storybook to allow playing with our components using `@vue/compat` instead of vue",3
116885708,2022-10-14 10:05:53.156,Badge component: implement 12px icon variant  to show import status,"This issue is created following a comment [here](https://gitlab.com/gitlab-org/gitlab-ui/-/issues/1142#note_1134746521).

# Problem 

- From: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/785
- New 12px badge variant (for small and medium) has been created in [Figma](https://www.figma.com/file/qEddyqCrI7kPSBjGmwkZzQ/Component-library?node-id=19947%3A329)

# Proposal 

1. Implement new variant in GitLab-UI: leverages 12px badge size and different padding
1. Update single stat component to use this variation of the badge

| small | medium |
| ------ | ------ |
| ![Screenshot_2021-01-19_at_10.32._2x](/uploads/2c034a76a9d57ca021b34e8f759458a0/Screenshot_2021-01-19_at_10.32._2x.png) | ![Screenshot_2021-01-19_at_10.32._2x](/uploads/8db20eea43e8bc1da5318cd36f033fe6/Screenshot_2021-01-19_at_10.32._2x.png) |",1
122071990,2022-10-04 21:56:57.404,Dropdown styles update according to new designs,"## Purpose

Update current dropdown styles according to the latest [design specs](https://www.figma.com/file/qEddyqCrI7kPSBjGmwkZzQ/%F0%9F%93%99-Component-library?node-id=425%3A14).

![CleanShot_2022-10-04_at_16.58.14_2x](/uploads/febebeeee06cba05d4f87587e4621e6a/CleanShot_2022-10-04_at_16.58.14_2x.png)

As discussed in this [thread](https://gitlab.com/gitlab-org/gitlab-ui/-/issues/2125#note_1244779781) we'll create separate styles only for new dropdowns - listbox and disclosure but will keep old styles for the dropdowns implemented with `GlDropdown`.

The redesign will be done in 3 steps

- [x] :feet: Create separate stylesheets for the new dropdowns, pick CSS classes so that they do not overlap with the current GlDropdown's classes and there is no specificity battle. 

- [ ] ~:feet: Add overflow scrim. [Some ideas here](https://css-tricks.com/scroll-shadows-with-javascript/)~ https://gitlab.com/gitlab-org/gitlab-ui/-/issues/2179

- [ ] ~:feet: Add dropdown panel tips pointing at the toggle~ https://gitlab.com/gitlab-org/gitlab-ui/-/issues/2180",3
116225136,2022-10-04 04:07:15.342,Fix rounded borders in Segmented Control component,"In the segmented control, `border-radius` should not be applied to the side of the buttons that are adjacent or next to each other.

![](https://gitlab.com/gitlab-org/gitlab/uploads/dbb20668ace134ee8550c7be05124d11/Screen_Shot_2022-10-04_at_1.09.48_pm.png)",1
115526438,2022-09-21 18:05:12.843,Listbox: Support for reset action,"We need a way to add a reset button to listboxes' headers.

![](https://gitlab.com/groups/gitlab-org/-/uploads/92960801461eaf89775bc6cec441ad9f/CleanShot_2022-09-20_at_14.30.26_2x.png)

The reset button should...
* ...have a customizable label to reflect the context the listbox is being used in.
* ...only show up if the listbox has a header. Showing the reset button in an empty header is not allowed.
* ...be hidden if no item is selected in the listbox.

## Implementation plan

- [x] Expose an `resetButtonLabel` prop.
- [x] If the prop is omitted, the button never shows up.
- [x] On click, the `cleared` event is emitted.
- [x] Left-align the header to match the designs in https://www.figma.com/file/qEddyqCrI7kPSBjGmwkZzQ/branch/5YYrJSrszk6dw9619HHPt9/%F0%9F%93%99-Component-library?node-id=425%3A14.",2
114701618,2022-09-09 01:23:57.253,Add gl-sm-mt-6 utility class,"## Summary

We should add a `gl-sm-mt-6` utility CSS class, we currently have `gl-sm-mt-5` and `gl-sm-mt-7` available but now have a use case for `6`.

## Improvements

* Once the utility is available in `gitlab` we can replace the custom css in https://gitlab.com/gitlab-org/gitlab/-/merge_requests/97387/diffs#fb723e851b8926f6532eeed94f1de1874c3221c7_288_288

## Involved components

<!--
List files or directories that will be changed by the refactoring.
-->

## Optional: Intended side effects

* Additional class available for use",1
113269991,2022-08-15 04:28:09.548,Lint against `gl-media-breakpoint-down` to promote mobile-first CSS,"## Description

We have a few instances of `gl-xs-` utility classes in the codebase which use `gl-media-breakpoint-down`. These violate the mobile-first approach we are aiming for (see [relevant comment](https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/2975#note_1060307382)).

Let's lint against using `gl-media-breakpoint-down` in our scss.",2
112040336,2022-07-22 12:13:05.432,Dropdown > Add invalid state,"### Description

Add the ability to show invalid dropdown input.

For more context see this discussion https://gitlab.com/gitlab-org/gitlab/-/merge_requests/92899#note_1034671442.

#### Design

![image](/uploads/9f4534d9bf5b7d3d050603133fd128e6/image.png)

### Implementation

1. Update `dropdown.vue` and add a `state` property. See [`GlFormSelect`](https://gitlab-org.gitlab.io/gitlab-ui/?path=/story/base-form-form-select--default&args=state:false) as an example.
   - When the `state` is invalid, set the dropdown button's box shadow color to `red-400`.
1. Update specs.

### Checklist

Make sure the following are completed before closing the issue:

1. [x] Assign the correct component label to this issue.
1. [ ] Create an MR with the additions or updates needed.
1. [ ] Be sure to get your MR reviewed by a [FE/UX Foundations designer][foundations-team].
1. [ ] When applicable, update `followsDesignSystem:` with the correct value inside the `[component].documentation.js` file.
1. [ ] When applicable, create an [MR in Pajamas][pajamas-mr] to update the demos. If you do not have capacity to complete the demos, [create an issue in Pajamas][pajamas-issue] and bring the issue to your team planning session for prioritization and scheduling. Mark the issue as related to this one.
1. [ ] When applicable, [create an MR in Pajamas][pajamas-mr] to update the component status.
1. [ ] When applicable, [create an issue in Pajamas][pajamas-issue] using the [""Component Documentation""][pajamas-component-documentation-template] issue template to update guidelines. Ping a designer on your team for awareness and bring the issue to your team planning meeting for prioritization and scheduling.
1. [ ] When applicable, [create an issue in Pajamas][pajamas-issue] using the [""Figma update""][pajamas-figma-update-template] issue template to update the Figma UI Kit. Ping a designer on your team for awareness and bring the issue to your team planning meeting for prioritization and scheduling.
1. [ ] When introducing a major or breaking change, communicate the changes within the [Engineering Week in Review][eng-week-in-review-doc].
1. [ ] 🎉 Congrats, you made it! You can now close this issue.

<!-- 
### Resources

* [Compontent Lifecycle][component-lifecycle]
* [Adding component][adding-components]
* [Adding CSS][adding-css]
* [Breaking changes][breaking-changes]
-->

[foundations-team]: https://about.gitlab.com/company/team/?department=fe-ux-foundations-team
[pajamas-mr]: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/merge_requests/new
[pajamas-issue]: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/new
[pajamas-component-documentation-template]: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/new?issuable_template=Component%20documentation
[pajamas-figma-update-template]: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/new?issuable_template=Figma%20update
[component-lifecycle]: https://design.gitlab.com/get-started/lifecycle
[adding-components]: https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/doc/contributing/adding_components.md
[adding-css]: https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/doc/contributing/adding_css.md
[breaking-changes]: https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/doc/contributing/breaking_changes_to_components.md
[eng-week-in-review-doc]: https://docs.google.com/document/d/1GQbnOP_lr9KVMVaBQx19WwKITCmh7H3YlgO-XqVwv0M/edit",1
111608695,2022-07-13 22:04:52.062,Listbox: Support for filtering,"We should consider adding support for filtering in the ~""dropdown::listbox"" component.",5
111608670,2022-07-13 22:04:03.788,Listbox: Support for separators/dividers,"We should consider adding support for seperators / dividers in the ~""dropdown::listbox"" component",3
111608639,2022-07-13 22:02:23.000,Listbox: Support for grouping,"We should consider adding group support (similar to native select `<optgroup>` to ~""dropdown::listbox"".",5
111217989,2022-07-06 00:15:49.594,Refactor GlCombobox to use native focus,"Currently, GlCombobox component uses a hard coded keyboard navigation, focus and selection implementation, making is tricky to expand upon. It should be refactored to use native focus and scroll to selection.",2
109320448,2022-05-30 14:15:09.847,GlLabel - Render label as text when target is empty,"### Description

When a `GlLabel` doesn't have a `target` it's still rendered as a link.

We should instead render it as plain text with no hover behaviour.

This is needed for compliance framework labels.

### Checklist

Make sure the following are completed before closing the issue:

1. [ ] Assign the correct component label to this issue.
1. [ ] Create an MR with the additions or updates needed.
1. [ ] Be sure to get your MR reviewed by a [FE/UX Foundations designer][foundations-team].
1. [ ] When applicable, update `followsDesignSystem:` with the correct value inside the `[component].documentation.js` file.
1. [ ] When applicable, create an [MR in Pajamas][pajamas-mr] to update the demos. If you do not have capacity to complete the demos, [create an issue in Pajamas][pajamas-issue] and bring the issue to your team planning session for prioritization and scheduling. Mark the issue as related to this one.
1. [ ] When applicable, [create an MR in Pajamas][pajamas-mr] to update the component status.
1. [ ] When applicable, [create an issue in Pajamas][pajamas-issue] using the [""Component Documentation""][pajamas-component-documentation-template] issue template to update guidelines. Ping a designer on your team for awareness and bring the issue to your team planning meeting for prioritization and scheduling.
1. [ ] When applicable, [create an issue in Pajamas][pajamas-issue] using the [""Figma update""][pajamas-figma-update-template] issue template to update the Figma UI Kit. Ping a designer on your team for awareness and bring the issue to your team planning meeting for prioritization and scheduling.
1. [ ] When introducing a major or breaking change, communicate the changes within the [Engineering Week in Review][eng-week-in-review-doc].
1. [ ] 🎉 Congrats, you made it! You can now close this issue.

<!-- 
### Resources

* [Compontent Lifecycle][component-lifecycle]
* [Adding component][adding-components]
* [Adding CSS][adding-css]
* [Breaking changes][breaking-changes]
-->

[foundations-team]: https://about.gitlab.com/company/team/?department=fe-ux-foundations-team
[pajamas-mr]: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/merge_requests/new
[pajamas-issue]: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/new
[pajamas-component-documentation-template]: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/new?issuable_template=Component%20documentation
[pajamas-figma-update-template]: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/new?issuable_template=Figma%20update
[component-lifecycle]: https://design.gitlab.com/get-started/lifecycle
[adding-components]: https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/doc/contributing/adding_components.md
[adding-css]: https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/doc/contributing/adding_css.md
[breaking-changes]: https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/doc/contributing/breaking_changes_to_components.md
[eng-week-in-review-doc]: https://docs.google.com/document/d/1GQbnOP_lr9KVMVaBQx19WwKITCmh7H3YlgO-XqVwv0M/edit",2
109309479,2022-05-30 11:49:18.333,Fluid type scale: use clamp() to reduce involved code,"## What does this MR do and why?

Let's change the title's to use fluid typography to make use of the `clamp()` CSS function to reduce the involved code quite a bit.

### Proposal

e.g. `h1`: Let's use `clamp()` for the fluid type scale. Scales from the defined minimum (23px) to the maxinum value (32px).

```
h1 {
   font-size: clamp(23px, 2.75vw, 32px);
}
```

## Screenshots or screen recordings 

See it in action:\
![type_scaling](/uploads/055a3dfb35408609414f64717443dfb9/type_scaling.gif)

Related to gitlab#361641",1
110811678,2022-05-19 08:40:04.948,Duration for `type: stacked-bar` on Insight pages is not adjustable by UI,"<!---
Please read this!

Before opening a new issue, make sure to search for keywords in the issues
filtered by the ""regression"" or ""type::bug"" label:

- https://gitlab.com/gitlab-org/gitlab/issues?label_name%5B%5D=regression
- https://gitlab.com/gitlab-org/gitlab/issues?label_name%5B%5D=type::bug

and verify the issue you're about to submit isn't a duplicate.
--->

### Summary

<!-- Summarize the bug encountered concisely. -->
Not like `type: bar` and `type: line`, durations for `type: stacked-bar` on Insight pages are not adjustable by UI.  
An Ultimate customer reported this: https://gitlab.my.salesforce.com/0014M00001wX5OM (Internal only)

### Steps to reproduce

<!-- Describe how one can reproduce the issue - this is very important. Please use an ordered list. -->
1. Put the `.gitlab/insights.yml` in a GitLab project and then visit ""Analytics > Insights""
1. Try to drag :pig_nose: for ""Issues closed per month - Stacked Bar""

```yaml
issues:
  title: Issue Dashboard
  charts:
    - title: Issues closed per month - Bar
      type: bar
      query:
        issuable_type: issue
        issuable_state: closed
        group_by: month
    - title: Issues closed per month - Line
      type: line
      query:
        issuable_type: issue
        issuable_state: closed
        group_by: month
        collection_labels:
          - P::1
          - P::2
          - P::3
          - P::4
    - title: Issues closed per month - Stacked Bar
      type: stacked-bar
      query:
        issuable_type: issue
        issuable_state: closed
        group_by: month
        collection_labels:
          - P::1
          - P::2
          - P::3
          - P::4
```

### Example Project

<!-- If possible, please create an example project here on GitLab.com that exhibits the problematic 
behavior, and link to it here in the bug report. If you are using an older version of GitLab, this 
will also determine whether the bug is fixed in a more recent version. -->

### What is the current *bug* behavior?

<!-- Describe what actually happens. -->
:pig_nose: can't be draggable.

### What is the expected *correct* behavior?

<!-- Describe what you should see instead. -->

:pig_nose: should be draggable.

### Relevant logs and/or screenshots

<!-- Paste any relevant logs - please use code blocks (```) to format console output, logs, and code
 as it's tough to read otherwise. -->
![image](/uploads/bf547fa75ff703e90664560ba6402c5e/image.png)
### Output of checks

<!-- If you are reporting a bug on GitLab.com, write: This bug happens on GitLab.com -->

#### Results of GitLab environment info

<!--  Input any relevant GitLab environment information if needed. -->
GitLab.com (GitLab Enterprise Edition 15.0.0-pre gitlab@a81a1e8bf2e8d71bf20cd23b22d94d4225ea4310)

<details>
<summary>Expand for output related to GitLab environment info</summary>

<pre>

(For installations with omnibus-gitlab package run and paste the output of:
`sudo gitlab-rake gitlab:env:info`)

(For installations from source run and paste the output of:
`sudo -u git -H bundle exec rake gitlab:env:info RAILS_ENV=production`)

</pre>
</details>

#### Results of GitLab application Check

<!--  Input any relevant GitLab application check information if needed. -->

<details>
<summary>Expand for output related to the GitLab application check</summary>
<pre>

(For installations with omnibus-gitlab package run and paste the output of:
`sudo gitlab-rake gitlab:check SANITIZE=true`)

(For installations from source run and paste the output of:
`sudo -u git -H bundle exec rake gitlab:check RAILS_ENV=production SANITIZE=true`)

(we will only investigate if the tests are passing)

</pre>
</details>

### Possible fixes

<!-- If you can, link to the line of code that might be responsible for the problem. -->",2
108024346,2022-05-04 16:26:34.765,Spike: GlFilteredSearch: Stop treating spaces specially,"This is a spin-off issue based on the discussion in https://gitlab.com/gitlab-org/gitlab-ui/-/issues/1438#note_906619217, and this (private) recording: https://www.youtube.com/watch?v=FgJBT7iX_6w.

The goal is to time box a proof-of-concept such that `GlFilteredSearch` no longer treats spaces specially. More concretely, the changes we want to implement are:

- [x] Free text (search terms) must be completed into tokens, via a new “free text” suggestion dropdown.
- [x] Clicking away/out from free text that hasn’t yet been tokenised gets tokenised.
- [ ] When typing in the third segment of a token, a new “free text value” option is displayed, allowing for arbitrary tokens containing spaces to be used/searched for
- [x] Pasting text with spaces would behave just like typing them manually (see above)

The goals of the spike would be to:

- [x] Get a better sense of the engineering effort to implement these robustly in GitLab UI
- [x] Get a better sense of the downstream impact in GitLab, in the various places these components are used
- [x] Get a better grasp on how to feature flag this, if we want to start trialling it",3
106958557,2022-04-21 09:32:36.356,GlDropdown: Dropdown should shrink to fit parent container width,"## Problem to solve

Unlike other form inputs in GitLab UI, the `GlDropdown` doesn't shrink to fit its parent container. This is being resolved in GitLab https://gitlab.com/gitlab-org/gitlab/-/merge_requests/85499, but it should be also be resolved in GitLab UI.

![image](/uploads/60574d6c17622bf8a0a86bf50fd64d7f/image.png)

## Suggested solution

Setting the dropdown button's width to 100% would make it fit the parent container.",1
106853462,2022-04-19 18:35:51.790,Add utility classes for billing plan page,"```css
.gl-text-purple-800 {
  color: $purple-800;
}

.gl-bg-theme-indigo-800 {
  background-color: $theme-indigo-800;
}

.gl-border-indigo-700 {
  border-color: $theme-indigo-700;
}

.gl-border-gray-75 {
  border-color: $gl-text-color-quaternary;
}

.gl-min-h-8 {
  min-height: $gl-spacing-scale-8;
}

```

# Plan

- [x] Add to `gitlab-ui` !2811
- [x] Remove from `gitlab` [here](http://gitlab.com/gitlab-org/gitlab/blob/921b31bc43af65f1871457407489e72ddc1a061e/app/assets/stylesheets/utilities.scss#L372-372) https://gitlab.com/gitlab-org/gitlab/-/merge_requests/87116",2
105674988,2022-03-29 10:17:41.414,Fix font colors for GlBadge variants when used in GlTabs,"
Background:

GlBadge has variants:

https://gitlab-org.gitlab.io/gitlab-ui/?path=%2Fstory%2Fbase-badge--variants
![Screen_Shot_2022-03-29_at_5.20.08_AM](/uploads/8c3d511e564398cc8ba386dd9f3de3e9/Screen_Shot_2022-03-29_at_5.20.08_AM.png)

## Problem

When GlBadge is used within GlTabs, variants don't seem to work. The text font stays black.

- We need to define the correct color for selected and unselected GlBadge variants with a tab.

## Expected
![Screen_Shot_2022-03-29_at_3.52.53_AM](/uploads/f843cd674fd7ca1a0bacf277a5ced46a/Screen_Shot_2022-03-29_at_3.52.53_AM.png)

## Actual
![Screen_Shot_2022-03-29_at_3.50.43_AM](/uploads/abcb6ac35293ec3c8af37e67746397b8/Screen_Shot_2022-03-29_at_3.50.43_AM.png)


## Default muted variant used in tabs

![figma_tabs](/uploads/f5382cdc827a70cf3085d61d58d9465b/figma_tabs.png)",2
105513200,2022-03-25 17:54:10.463,Migrate base/form/form-checkbox-tree stories to Component Story Format,"Migrate `base/form/form-checkbox-tree` stories to the [Component Story Format (CSF)](https://storybook.js.org/docs/react/writing-stories/introduction#component-story-format).

* [ ] Migrated `documentedStoriesOf` usages to the Component Story Format.
* [ ] Migrated or removed examples.
* [ ] Migrated props, slots and events documentation.
  * [ ] If needed, migrated the `bootstrapComponent` parameter.
* [ ] Cleanup
  * [ ] Component's README:
    * [ ] Removed `<!-- STORY -->`.
    * [ ] Removed component's title.
  * [ ] `documentation/documented_stories.js`:
    * [ ] Added component's PascalCase name to `disableForComponents`.

More details about the migration can be found in the epic: https://gitlab.com/groups/gitlab-org/-/epics/5651",2
105444634,2022-03-24 17:05:04.446,Migrate typescale stories to Component Story Format,"Migrate `src/scss/typescale/typescale.stories.js` stories to the [Component Story Format (CSF)](https://storybook.js.org/docs/react/writing-stories/introduction#component-story-format).

* [ ] Migrated `documentedStoriesOf` usages to the Component Story Format.
* [ ] Migrated or removed examples.
* [ ] Migrated props, slots and events documentation.
  * [ ] If needed, migrated the `bootstrapComponent` parameter.
* [ ] Cleanup
  * [ ] Component's README:
    * [ ] Removed `<!-- STORY -->`.
    * [ ] Removed component's title.
  * [ ] `documentation/documented_stories.js`:
    * [ ] Added component's PascalCase name to `disableForComponents`.

More details about the migration can be found in the epic: https://gitlab.com/groups/gitlab-org/-/epics/5651",2
104553864,2022-03-10 14:10:25.662,Add .nvmrc,"Add missing `.nvmrc`

Support working with different node versions locally (nvm).
Sets node version to `14.17.5` (same as GDK). [Required is v14](https://gitlab.com/gitlab-org/gitlab-ui/#quick-start-development)",1
104287993,2022-03-07 12:51:17.376,GlEmptyState: Add the ability to style title & description container,"## Problem to solve

The `GlEmptyState` component doesn't provide a way to style the title & description container. 

This is causing some misalignments on GitLab.com. Originally raised in https://gitlab.com/gitlab-org/gitlab/-/merge_requests/81889#note_863257787.

## Screenshots

![image](/uploads/91c3cf26decf99cf6223dfeecf8a074c/image.png)

## Proposed solution

Add a property that allows the consumer to define classes on the title & description container.",1
102212215,2022-02-10 14:23:26.437,GlFilteredSearch - Add readonly state to search bar and tokens,"## Problem to solve

For https://gitlab.com/gitlab-org/gitlab/-/issues/344452 we need to show the `GlFilteredSearch` and tokens as read-only as certain roles don't have access to other terms.

## Designs

![image](https://gitlab.com/gitlab-org/gitlab/uploads/cb65286edcfa66928322ad07f8862fbc/image.png)

![Filter_search](https://gitlab.com/gitlab-org/gitlab/uploads/05a2acfdc5f1b2c95dff6bd58684edc7/Filter_search.png)

[Figma](https://www.figma.com/file/n7rywDkSHdt8hsKlZhf6zG/KR-UI-redesign-session-5%3A-Filtering?node-id=8%3A33)

## Proposal

1. Add a `readonly` property to `GlFilteredSearch`. When true:
   1. Don't show the suggestions list.
   1. Don't show the clear `X` button.
   1. Don't allow the user to type or clear any existing text or tokens.
1. Add a `disabled` property to `GlFilteredSearchToken`. When true:
   1. Don't allow the user to change it.
   1. Don't show the clear `X` postfix.",3
102128185,2022-02-09 09:26:27.094,GlAlert: drop contained behavior,"In https://gitlab.com/gitlab-org/gitlab/-/merge_requests/79235, we have decided to drop alerts' contained behavior so that their content can expand to the full width in fluid layouts. We'll need to reflect this decision on the GitLab UI component.

/cc @jeldergl @justin_ho",2
101777332,2022-02-03 01:52:45.242,Add gl-max-w-48 & gl-max-w-58 CSS utilities,"Needed for the design of https://gitlab.com/gitlab-org/gitlab/-/issues/348494. We in Growth Conversion plan to implement as part of our experiment promotion task (if the experiment is a success).

```scss
$gl-spacing-scale-48: 48 * $grid-size;
$gl-spacing-scale-58: 58 * $grid-size;

.gl-max-w-48 {
  max-width: $gl-spacing-scale-48;
}

.gl-max-w-58 {
  max-width: $gl-spacing-scale-58;
}
```",1
101247323,2022-01-25 20:16:59.446,Buttons > Update selected state,"### Description

Update selected state to match Figma UI Kit

#### Figma file

[View design specs in Figma →](https://www.figma.com/file/qEddyqCrI7kPSBjGmwkZzQ/Component-library?node-id=2956%3A3364)

### Checklist

Make sure the following are completed before closing the issue:

1. [x] Assign the correct component label to this issue.
1. [x] Create an MR with the additions or updates needed.
1. [ ] Be sure to get your MR reviewed by a [FE/UX Foundations designer][foundations-team].
1. [ ] When applicable, update `followsDesignSystem:` with the correct value inside the `[component].documentation.js` file.
1. [ ] When applicable, create an [MR in Pajamas][pajamas-mr] to update the demos. If you do not have capacity to complete the demos, [create an issue in Pajamas][pajamas-issue] and bring the issue to your team planning session for prioritization and scheduling. Mark the issue as related to this one.
1. [ ] When applicable, [create an MR in Pajamas][pajamas-mr] to update the component status.
1. [ ] When applicable, [create an issue in Pajamas][pajamas-issue] using the [""Component Documentation""][pajamas-component-documentation-template] issue template to update guidelines. Ping a designer on your team for awareness and bring the issue to your team planning meeting for prioritization and scheduling.
1. [ ] When applicable, [create an issue in Pajamas][pajamas-issue] using the [""Figma update""][pajamas-figma-update-template] issue template to update the Figma UI Kit. Ping a designer on your team for awareness and bring the issue to your team planning meeting for prioritization and scheduling.
1. [ ] When introducing a major or breaking change, communicate the changes within the [Engineering Week in Review][eng-week-in-review-doc].
1. [ ] 🎉 Congrats, you made it! You can now close this issue.

<!-- 
### Resources

* [Compontent Lifecycle][component-lifecycle]
* [Adding component][adding-components]
* [Adding CSS][adding-css]
* [Breaking changes][breaking-changes]
-->

[foundations-team]: https://about.gitlab.com/company/team/?department=fe-ux-foundations-team
[pajamas-mr]: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/merge_requests/new
[pajamas-issue]: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/new
[pajamas-component-documentation-template]: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/new?issuable_template=Component%20documentation
[pajamas-figma-update-template]: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/new?issuable_template=Figma%20update
[component-lifecycle]: https://design.gitlab.com/get-started/lifecycle
[adding-components]: https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/doc/contributing/adding_components.md
[adding-css]: https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/doc/contributing/adding_css.md
[breaking-changes]: https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/doc/contributing/breaking_changes_to_components.md
[eng-week-in-review-doc]: https://docs.google.com/document/d/1GQbnOP_lr9KVMVaBQx19WwKITCmh7H3YlgO-XqVwv0M/edit",1
100818037,2022-01-18 08:11:41.858,Run minimal visual regression testing in MRs,"When creating an MR, the `visual` job runs in every pipeline and tests all of GitLab UI's components.

Generally, an MR only changes a single component though. There is a possibility that one component is being used in others, and that changing it would affect other visual tests indirectly. But in most cases, it should be reasonable to run visual tests only for the component being changed. At least until the initial approval at which point we should run a full pipeline to make sure all visual tests are still green.

Let's improve our CI setup so that MR pipelines only run storyshots on the changed `*.stories.js` files by default.",2
100418329,2022-01-11 10:55:29.928,GlEmptyState: Text overflows illustration,"In https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/2581, we converted a few Bootstrap utilities to GitLab UI ones in `GlEmptyState`. In the process, we applied a `gl-flex-wrap` class to the main container, which preserves some styles from the `.row` util, but is causing some display issues due to the illustration's container not inheriting the `width: 100%` from the `col-*` class we removed.

![image](/uploads/039bd08e9de9b7b924eeb2f12ad5e131/image.png)",1
100407544,2022-01-11 08:52:53.413,GlPopover: Add support for a close button,"In https://gitlab.com/gitlab-org/gitlab/-/merge_requests/64540, we implemented a popover that appears on page load and that can be closed with a close button displayed in its header:

<img src=""https://gitlab.com/gitlab-org/gitlab/uploads/f5cecda79a81f728bcaee9b14559434c/Screen_Shot_2022-01-10_at_2.06.07_PM.png"" width=""450"" />

The implementation was done entirely in GitLab by adding some style overrides there, as well as rendering the close button via the `#title` slot.

As part of https://gitlab.com/gitlab-org/gitlab-ui/-/issues/1465, we later moved the style overrides to GitLab UI, but the close button itself is still being implemented in GitLab.

## Proposal

Having style overrides for a close button that does not exist in GitLab feels a bit odd. Let's add out-of-the-box support for a close button in `GlPopover`.

Here are a few things to consider:

- [x] The close button should be a `small` button using the `close` icon. The GitLab implementation relies on a `<span class=""gl-display-inline-block"" aria-hidden=""true"">&times;</span>` to render the `X`, which doesn't align with the design specs.
- [x] Re-adjust the spacing to account for the change above.
- [x] The close button's visibility should be controlled by a prop (eg. `has-close-button`).
- [ ] Once the close button is implemented, remove all custom code from `ee/app/assets/javascripts/contextual_sidebar/components/trial_status_popover.vue` in favor of using the built-in feature.

cc @dreedy @kcomoli",2
100359316,2022-01-10 12:14:15.343,Limit drawer component to 100% width on smaller devices,"On smaller devices, it has been noted that the drawer component can overflow if the width of the device is smaller than the width of the drawer as defined in: https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/src/components/base/drawer/drawer.scss.

The CSS is defining a small breakpoint width of `gl-w-full` but appears to be overridden by the `gl-drawer-default` and `gl-drawer-sidebar` classes as they have higher specificity.

![image](/uploads/283ebd58c4915edb0ae91cbe7ee6b37c/image.png)

## Implementation Guide
The simplest fix would be to make sure the small breakpoint is given to these classes as well",1
100358964,2022-01-10 12:08:09.730,Move .gl-md-pr-5 classes to gitlab-ui,"The MR https://gitlab.com/gitlab-org/gitlab/-/merge_requests/77012 adds the `gl-md-pr-5` class in GitLab, this should be moved to GitLab UI.

Once the class has been added to GitLab UI we can then remove it from the main GitLab codebase https://gitlab.com/gitlab-org/gitlab/-/issues/350247.",1
100262276,2022-01-07 15:45:16.566,Enable eslint-plugin-storybook,"Storybook now provides an official ESLint plugin to ensure stories are written properly: https://github.com/storybookjs/eslint-plugin-storybook.

It currently reports errors for all stories that haven't been migrated to CSF yet, which is expected.

Let's enable this plugin sometime soon. This could be done now by ignoring offenses in non-CSF stories, or we could also wait until the migration is done.

Recommended setup in `.eslintrc.yml`:

```yaml
extends:
  - 'plugin:storybook/csf'
```",1
100616823,2021-12-21 15:56:33.292,Clearing a token from gl-filtered-search immediately starts editing prior token name,"I want to remove a label filter and add a different one. I click the X, but it then starts immediately editing the prior label name. If I hit space, it strangely auto selects a different label. See below video for example.

I feel like clearing using the X should leave the prior label filter in place and allow you to start adding a new one.

![Clearing_label_immediately_starts_editing_old_label](/uploads/2f2aee82b0eb0107ef8d9207ce48509c/Clearing_label_immediately_starts_editing_old_label.webm)",2
98852851,2021-12-10 20:17:38.172,Add max-w-26 & max-w-62,"In support of [this Growth experiment](https://gitlab.com/groups/gitlab-org/-/epics/3695) ([MR which adds these utility classes](https://gitlab.com/gitlab-org/gitlab/-/merge_requests/75148/diffs)), if the experiment is successful & is promoted, we would like to add the following utility CSS styles:

```scss
.gl-max-w-26 {
  max-width: $grid-size * 26;
}

.gl-max-w-62 {
  max-width: $grid-size * 62;
}
```

(Or something akin to that.)",1
101177127,2021-12-09 18:32:10.740,"GlFilteredSearch problems with editing, issue filter bar","The issues page, which uses `GlFilteredSearch`, is having difficulty with simple editing such as cursor movement via key or clicking.
Video shows the behavior I'm seeing.

![2021-12-09_12.12.57](/uploads/6e59af0ff639c785e3378bcf0d39d6f4/2021-12-09_12.12.57.gif)

I consider this a semi-serious usability issue.",3
97809717,2021-11-23 13:32:38.227,GlDisclosure: First iteration of a Disclosure,"In order to reduce the complexity of our existing GlDropdown implementation, we want to implement a semantically correct GlDisclosure component.

> Disclosure: A disclosure dropdown is a button that toggles a panel containing a list of links or navigational items where each item has its own tab stop. If a dropdown contains both a link and an action, it should be a disclosure with a tab stop for each item.

https://design.gitlab.com/components/dropdown-disclosure",5
97212914,2021-11-12 05:58:59.837,"Set `type=""search""` on input fields for SearchBoxByType and SearchBoxByClick","### Description

`SearchBoxByType` and `SearchBoxByClick` are search boxes, but we don't set the `type` HTML attribute to `""search""`. This means (among other things) that screenreaders interpret the box as a regular text field, not a search field.

Example:

![Screen_Shot_2021-11-12_at_3.03.59_pm](/uploads/a60d18bf1e8d81df2bbdc174c40ba3cd/Screen_Shot_2021-11-12_at_3.03.59_pm.png)

When this input field is focused, Apple Voiceover produces the following output:

| Current state | with type=""search"" |
| ------ | ------ |
| `Search or jump to..., edit text` | `Search or jump to..., search text field` |

`type=""search""` yields better accessibility.
#### Concerns

When making this change, we must check all supported browsers. Each browser styles `type=""search""` fields differently, and we need to ensure our gitlab-ui styles are not affected by the change.

### Checklist

Make sure the following are completed before closing the issue:

1. [ ] Assign the correct component label to this issue.
1. [ ] Create an MR with the additions or updates needed.
1. [ ] Be sure to get your MR reviewed by a [FE/UX Foundations designer][foundations-team].
1. [ ] When applicable, update `followsDesignSystem:` with the correct value inside the `[component].documentation.js` file.
1. [ ] When applicable, create an [MR in Pajamas][pajamas-mr] to update the demos. If you do not have capacity to complete the demos, [create an issue in Pajamas][pajamas-issue] and bring the issue to your team planning session for prioritization and scheduling. Mark the issue as related to this one.
1. [ ] When applicable, [create an MR in Pajamas][pajamas-mr] to update the component status.
1. [ ] When applicable, [create an issue in Pajamas][pajamas-issue] using the [""Component Documentation""][pajamas-component-documentation-template] issue template to update guidelines. Ping a designer on your team for awareness and bring the issue to your team planning meeting for prioritization and scheduling.
1. [ ] When applicable, [create an issue in Pajamas][pajamas-issue] using the [""Figma update""][pajamas-figma-update-template] issue template to update the Figma UI Kit. Ping a designer on your team for awareness and bring the issue to your team planning meeting for prioritization and scheduling.
1. [ ] When introducing a major or breaking change, communicate the changes within the [Engineering Week in Review][eng-week-in-review-doc].
1. [ ] 🎉 Congrats, you made it! You can now close this issue.

<!-- 
### Resources

* [Compontent Lifecycle][component-lifecycle]
* [Adding component][adding-components]
* [Adding CSS][adding-css]
* [Breaking changes][breaking-changes]
-->

[foundations-team]: https://about.gitlab.com/company/team/?department=fe-ux-foundations-team
[pajamas-mr]: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/merge_requests/new
[pajamas-issue]: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/new
[pajamas-component-documentation-template]: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/new?issuable_template=Component%20documentation
[pajamas-figma-update-template]: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/new?issuable_template=Figma%20update
[component-lifecycle]: https://design.gitlab.com/get-started/lifecycle
[adding-components]: https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/doc/contributing/adding_components.md
[adding-css]: https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/doc/contributing/adding_css.md
[breaking-changes]: https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/doc/contributing/breaking_changes_to_components.md
[eng-week-in-review-doc]: https://docs.google.com/document/d/1GQbnOP_lr9KVMVaBQx19WwKITCmh7H3YlgO-XqVwv0M/edit",1
96292045,2021-10-28 03:08:59.733,"Gl-Empty-State > Make ""title"" not required","There are a couple of instances in the code base where a `title` is unwanted

Remove `title`'s required status

- Instances
  - https://gitlab.com/gitlab-org/gitlab/blob/master/app/assets/javascripts/jira_import/components/jira_import_setup.vue
  - https://gitlab.com/gitlab-org/gitlab/blob/80f1ea7e3f11063a4f15bdd4a2e4a1ca7f770d87/app/assets/javascripts/monitoring/components/empty_state.vue
  - https://gitlab.com/gitlab-org/gitlab/blob/2f57df6053e2e8dea8a0b1d6c477d761aad23468/ee/app/assets/javascripts/threat_monitoring/components/policy_editor/scan_execution_policy/scan_execution_policy_editor.vue",3
95618089,2021-10-18 14:24:22.014,Enhance GlTable component to return GlTableLite if circumstances allow,"In [32.14.0](https://gitlab.com/gitlab-org/gitlab-ui/-/releases/v32.14.0) GlTableLite was introduced to GitLabUI.

GlTableLite supports a subset of the features GlTable does, but is much lighter on the pagebundle.

All those features which are not supported in GlTableLite are triggered via Props in GlTable.

### What needs to be done

Enhance the GlTable component so that it checks for the need of a GlTable and if not return a GlTableLite, this will have a great effect on our overall Page Bundles.

Implementation Plan: 
- [ ] Check props in GlTable Lite
- [ ] Return the best fit for given props (GlTable or GlTableLite)",3
95366358,2021-10-13 14:40:13.444,Breadcrumb > Identify current page with aria-current,"The active page link (last item in the breadcrumb) should have `aria-current=""page""` to indicate that it's the current page.

See https://www.w3.org/TR/wai-aria-practices/examples/breadcrumb/index.html for an example.",3
95102062,2021-10-08 10:56:02.874,GlDaterangePicker CSF - datepicker cut inside story container,"This was raised in the review of !2415

After migration to CSF open datepicker is hidden inside the story container - the container is scrollable though to accommodate its content

To reproduce 
1. Go to [daterange picker story](http://localhost:9001/?path=/docs/base-daterange-picker--default)
1. Open docs tab
1. Note that open datepicker is displayed cut inside the story container - the container should either expand ot datepicker should be displayed over it as before the migration

| Before | After |
| ------ | ------ |
| ![Screenshot_2021-10-08_at_13.54.59](/uploads/df69911c500bd7dec35202dee5a86cf8/Screenshot_2021-10-08_at_13.54.59.png) | ![Screenshot_2021-10-08_at_13.52.44](/uploads/9dd2997b9a3324d7bbb52c420a93aa28/Screenshot_2021-10-08_at_13.52.44.png) |",1
94783965,2021-10-04 09:15:07.082,Date picker - add disabled cursor to month/year/arrows/days,"# Problem 

Currently, there is no disabled cursor for the disabled buttons of the date picker. Related to #1563.

![Screenshot_2021-10-04_at_10.12.](/uploads/5c8ecf1c561b2ae81a05c5bee931322e/Screenshot_2021-10-04_at_10.12..gif)

# Proposal

Add the cursor!

![image](/uploads/3043224dadab2be6383751d1d945b30d/image.png)",1
94783593,2021-10-04 09:10:31.238,Date picker - add hover state to arrows,"# Problem

Date picker arrows don't look interactive. Related to #1561.

# Proposal

Add hover state to calendar arrow buttons.",1
94676145,2021-09-29 10:36:14.286,Date picker - make month/year look more interactive,"# Problem

- The date picker has a dropdown for the month and year and nobody knows about it!
- Related to gitlab-org/gitlab-services/design.gitlab.com#601. From this thread: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/601#note_689319507

# Proposal

- Use a similar pattern to the sidebar - with a tertiary button that goes to `gray-50` on-hover to show interaction...

![Screenshot_2021-09-29_at_18.09.](/uploads/86b64ef3b999de2c6a401061c13a7da9/Screenshot_2021-09-29_at_18.09..gif)

# Other ideas

![Screenshot_2021-09-29_at_11.57._2x](/uploads/21a447c259366fa1de6316fed03e2833/Screenshot_2021-09-29_at_11.57._2x.png)",1
92978362,2021-09-02 07:15:08.067,Audit and prevent `v-html` usages,"Related epic - https://gitlab.com/gitlab-com/gl-security/appsec/appsec-team/-/issues/184

### Proposal

We should add an ESLint rule to prevent usage of `v-html` in the codebase.

### Why

`v-html` is bad and can lead to XSS attacks https://vuejs.org/v2/api/#v-html

### Goal

Our aim is to make sure we don't use `v-html` for any new codebase and audit every possible usage of `v-html` being used.

### Implementation Plan

* [ ] Add `vue/no-v-html` rule in eslint
* [ ] Audit existing `v-html` usages
* [ ] Replace `v-html` with `v-safe-html`

### Outcome

- Two usages found
  - [`src/components/base/form/form_checkbox/form_checkbox_group.vue`](https://gitlab.com/gitlab-org/gitlab-ui/blob/ec54f68fcda42481bd8f967026644d4bb2676a75/src/components/base/form/form_checkbox/form_checkbox_group.vue#L35)
  - [`src/components/base/form/form_checkbox/form_checkbox_group.vue`](https://gitlab.com/gitlab-org/gitlab-ui/blob/ec54f68fcda42481bd8f967026644d4bb2676a75/src/components/base/form/form_checkbox/form_checkbox_group.vue#L35)",2
92590100,2021-08-25 18:33:03.882,Avatar > Stacked (inline) avatars > Update to match new Figma specs,"### Description

The stacked (inline) avatar component was [recently updated in Figma](https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/1104).

Subsequently, https://gitlab-org.gitlab.io/gitlab-ui/?path=/story/base-avatar-avatars-inline--default also needs updating to match the new style.

#### Figma file

<!-- If design specs exist in Figma, link them below. Otherwise, remove the link and add a link to the issue to add the component to Figma -->

[View design specs in Figma →](https://www.figma.com/file/qEddyqCrI7kPSBjGmwkZzQ/Component-library?node-id=1833%3A2791)

### Checklist

Make sure the following are completed before closing the issue:

1. [x] Assign the correct component label to this issue.
1. [ ] Create an MR with the additions or updates needed.
1. [ ] Be sure to get your MR reviewed by a [FE/UX Foundations designer][foundations-team].
1. [ ] When applicable, update `followsDesignSystem:` with the correct value inside the `[component].documentation.js` file.
1. [ ] When applicable, create an [MR in Pajamas][pajamas-mr] to update the demos. If you do not have capacity to complete the demos, [create an issue in Pajamas][pajamas-issue] and bring the issue to your team planning session for prioritization and scheduling. Mark the issue as related to this one.
1. [ ] When applicable, [create an MR in Pajamas][pajamas-mr] to update the component status.
1. [ ] When applicable, [create an issue in Pajamas][pajamas-issue] using the [""Component Documentation""][pajamas-component-documentation-template] issue template to update guidelines. Ping a designer on your team for awareness and bring the issue to your team planning meeting for prioritization and scheduling.
1. [x] When applicable, [create an issue in Pajamas][pajamas-issue] using the [""Figma update""][pajamas-figma-update-template] issue template to update the Figma UI Kit. Ping a designer on your team for awareness and bring the issue to your team planning meeting for prioritization and scheduling.
1. [ ] When introducing a major or breaking change, communicate the changes within the [Engineering Week in Review][eng-week-in-review-doc].
1. [ ] 🎉 Congrats, you made it! You can now close this issue.

<!-- 
### Resources

* [Compontent Lifecycle][component-lifecycle]
* [Adding component][adding-components]
* [Adding CSS][adding-css]
* [Breaking changes][breaking-changes]
-->

[foundations-team]: https://about.gitlab.com/company/team/?department=fe-ux-foundations-team
[pajamas-mr]: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/merge_requests/new
[pajamas-issue]: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/new
[pajamas-component-documentation-template]: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/new?issuable_template=Component%20documentation
[pajamas-figma-update-template]: https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/new?issuable_template=Figma%20update
[component-lifecycle]: https://design.gitlab.com/get-started/lifecycle
[adding-components]: https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/doc/contributing/adding_components.md
[adding-css]: https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/doc/contributing/adding_css.md
[breaking-changes]: https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/doc/contributing/breaking_changes_to_components.md
[eng-week-in-review-doc]: https://docs.google.com/document/d/1GQbnOP_lr9KVMVaBQx19WwKITCmh7H3YlgO-XqVwv0M/edit",1
92261649,2021-08-19 10:58:16.870,Fix size prop on GlButtonGroup,"In https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/2339#note_654465742 it was discovered that the `size` prop on `GlButtonGroup` doesn't work.

That is, if you supply `sm`, `md` or `lg`, you get styles inconsistent with our design system. If you supply `small` or `medium` (the supported `GlButton` sizes), nothing happens.

## Implementation Guide
Supply the `size` prop directly to the `GlButton` children.

Since `BButtonGroup` is so simple, we could re-implement it completely in GitLab UI to fix this, _if_ we want to.
It's a little more complex, but the better solution.",1
92062407,2021-08-16 19:18:55.852,Dropdown: Support different dropdown use cases with variants,"## Purpose

As a result of the audit in the parent epic, the dropdown component requires updates to satisfy UX and accessibility requirements.

**Watch recordings  of the audit** (internal)

1. [▶︎ Code and semantic review](https://drive.google.com/file/d/1z-Epc8tTuH32PzPq6Pr9jrOqI9KKXbNx/view?usp=sharing)
1. [▶︎ Screen reader demo](https://drive.google.com/file/d/12K20wzxrMuMrAq4T4HNXC_MiDXhE8NlO/view?usp=sharing)

## Background

A dropdown can actually mean many things, from a select element in a form to navigation or a menu of functions. As it's defined in [Pajamas](https://design.gitlab.com/components/dropdown#usage), it indeed is used for several different things:

- Opening a list of navigation items.
- Opening a menu of actions.
- Opening a listbox or combobox.

The current implementation of a [dropdown](https://gitlab-org.gitlab.io/gitlab-ui/?path=/story/base-dropdown--default) in GitLab UI is specific to only one of these use cases, a menu. And the menu itself comes with many caveats and has implications for assistive technology (covered under definitions below). Additionally, I believe that the audit uncovered problems with the semantic structure of the current implementation. More details are in the audit recordings, but as a quick summary the unordered list semantics don't include a list item as the first child, and additionally `role=""menu""` requires some fairly strict semantics that I don't believe are 100% correct. 

### Definitions

<details><summary>Menu</summary>
A menu is a widget that offers a list of choices to the user, such as a set of actions or functions. A menu is usually opened, or made visible, by activating a menu button, choosing an item in a menu that opens a sub menu, or by invoking a command, such as Shift + F10 in Windows, that opens a context specific menu. When a user activates a choice in a menu, the menu usually closes unless the choice opened a submenu. ([source](https://www.w3.org/TR/wai-aria-practices/#menu))

An item with `role=""menu""` places a screen reader in application mode, which then uses keyboarding different from regular web browsing and navigation. For this reason it isn't suitable for navigation where tabbing typically moves from one link to the next.
</details>
<details><summary>Disclosure widget</summary>
A disclosure is a button that controls visibility of a section of content. When the controlled content is hidden, it is often styled as a typical push button with a right-pointing arrow or triangle to hint that activating the button will display additional content. When the content is visible, the arrow or triangle typically points down. ([source](https://www.w3.org/TR/wai-aria-practices/#disclosure))
</details>
<details><summary>Menu button</summary>
A menu button is a button that opens a menu. It is often styled as a typical push button with a downward pointing arrow or triangle to hint that activating the button will display a menu. ([source](https://www.w3.org/TR/wai-aria-practices/#menubutton))
</details>
<details><summary>Combobox</summary>
A combobox is a widget made up of the combination of two distinct elements: 1) a single-line textbox, and 2) an associated pop-up element for helping users set the value of the textbox. The popup may be a listbox, grid, tree, or dialog. Many implementations also include a third optional element -- a graphical button adjacent to the textbox, indicating the availability of the popup. Activating the button displays the popup if suggestions are available. (https://www.w3.org/TR/wai-aria-practices/#combobox)
</details>
<details><summary>Listbox</summary>
A listbox widget presents a list of options and allows a user to select one or more of them. A listbox that allows a single option to be chosen is a single-select listbox; one that allows multiple options to be selected is a multi-select listbox. ([source](https://www.w3.org/TR/wai-aria-practices/#Listbox))
</details>

## Proposal

As-is, a single format for a dropdown will not satisfy the different use cases. The dropdown component should configurable to support various use cases.

## Resources

- [Menus & Menu Buttons](https://inclusive-components.design/menus-menu-buttons/) by Heydon Pickering
- [Link + Disclosure Widget Navigation](https://adrianroselli.com/2019/06/link-disclosure-widget-navigation.html) by Adrian Roselli
- [A11y Nav Menus – an in-depth overview of three patterns for accessible navigation](https://www.evinced.com/blog/a11y-nav-menus/) by Illai Zeevi
- [Menu (or not)](https://marcus.io/blog/menu-or-not) by Marcus Herrmann

Additional implementation examples and resources are mentioned in the [discussion](https://gitlab.com/gitlab-org/gitlab-ui/-/issues/1534#note_653127372) that follows.",8
91793592,2021-08-11 07:46:11.827,Rename newButton* constants to button*,"The following discussion from !2332 should be addressed:

- [ ] @pgascouvaillancourt started a [discussion](https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/2332#note_648261333): 

    > **thought:** It would be great if we could rename those `newButton*` constants to `button*` now that we only have one button component. But let's do that in a follow-up :slight_smile:",1
90925175,2021-07-27 14:17:29.591,GFM Typescale > Inline diff > implement,"Implement GitLab Flavored Markdown inline diff styles following the design specs created in https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/1076

See parent epic for detailed information about this component.

Figma assets:

- [Documentation markdown - Inline diff](https://www.figma.com/file/V3HKN83B7rf2T6sseLMrxa/Type-scale---Documentation-Markdown?node-id=988%3A10)
- [Compact markdown - Inline diff](https://www.figma.com/file/mjAZxHkK95TlQ6L14aNp2M/Type-scale---Compact-Markdown?node-id=893%3A4)

### Implementation guidelines

- The markdown typescale implementation file is in [`src/components/base/markdown/markdown.scss`](https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/src/components/base/markdown/markdown.scss#L1)
- Add compact markdown variation as a child class selector of `.gl-compact-markdown`
- Use the following CSS selectors to ensure compatibility with GitLab Flavored Markdowns
  - `idiff`
  - `idiff.deletion` for deletion styles
  - `idiff.addition` for addition styles
- Add a demo of this component in `src/components/base/markdown/markdown_typescale_demo.html`.",1
90843324,2021-07-26 12:10:43.020,GFM Typescale > Code block > implement,"Implement GitLab Flavored Markdown code span styles following the design specs created in https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/1068

See parent epic for detailed information about this component.

Figma assets:

- [Documentation markdown - Code block](https://www.figma.com/file/V3HKN83B7rf2T6sseLMrxa/Type-scale---Documentation-Markdown?node-id=985%3A10)
- [Compact markdown - Code block](https://www.figma.com/file/mjAZxHkK95TlQ6L14aNp2M/Type-scale---Compact-Markdown?node-id=890%3A8)

### Implementation guidelines

- The markdown typescale implementation file is in [`src/components/base/markdown/markdown.scss`](https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/src/components/base/markdown/markdown.scss#L1)
- This component shares font styling with the [`gl-monospace` class selector](https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/src/components/base/markdown/markdown.scss#L121)
- Add compact markdown variation as a child class selector of `.gl-compact-markdown`
- Use the following CSS selectors to ensure compatibility with GitLab Flavored Markdown:
  - `pre`
  - `pre code`
- Add a demo of this component in `src/components/base/markdown/markdown_typescale_demo.html`.",1
90680039,2021-07-22 12:50:37.246,GFM Typescale > Code span > implement,"Implement GitLab Flavored Markdown code span styles following the design specs created in https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/1048

See parent epic for detailed information about this component.

Figma assets:

- [Documentation markdown - Code span](https://www.figma.com/file/V3HKN83B7rf2T6sseLMrxa/Type-scale---Documentation-Markdown?node-id=909%3A10)
- [Compact markdown - Code span](https://www.figma.com/file/mjAZxHkK95TlQ6L14aNp2M/Type-scale---Compact-Markdown?node-id=862%3A4)

### Implementation guidelines

- The markdown typescale implementation file is in [`src/components/base/markdown/markdown.scss`](https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/src/components/base/markdown/markdown.scss#L1)
- Use the following CSS selector to implement these styles: `code`
- This component shares font styling with the [`gl-monospace` class selector](https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/src/components/base/markdown/markdown.scss#L121)
- Add compact markdown variation as a child class selector of `.gl-compact-markdown`
- Add a demo of this component in `src/components/base/markdown/markdown_typescale_demo.html`.",1
90184132,2021-07-13 09:17:10.691,Ensure GlSingleStat animates when data is changed,"### Problem

With the introduction of `animateOnMount` being `false` for the animated number utility in gitlab-ui, an animation is only triggered on the `GlSingleStat` component when the value prop is changed, after the component has been mounted. 

Our current implementations of `GlSingleStat` conditionally render and remove the component based on the loading states of API requests, which instead of resulting in a simple prop update, results in an entire component remount. This causes the animation to never be triggered. 

### Solution

We can refactor our implementations of `GlSingleStat` from using `v-if` to `v-show`. This will ensure that the component only mounts once and each subsequent update triggers a prop update instead of a component remount. 

### Steps

- Inspect each instance of `GlSingleStat`
- Where updates to data can occur, i.e. filters available etc, replace `v-if` with `v-show`
- Update tests as these will break on `exists`

#### Notes

There are 6 instances of `GlSingleStat` looks like 3 or 4 instances are subject to data changes requiring animation.",3
90159804,2021-07-13 00:37:01.272,Add CSS utility class for setting mix-blend-mode to luminosity,"To make some images (SVGs) go from their color version to grayscale, we’d like to introduce a utility for setting the `mix-blend-mode`:

```scss
.gl-mix-blend-mode-luminosity {
  mix-blend-mode: luminosity;
}
```",1
90126309,2021-07-12 13:11:41.035,Add utility class for focus rings,"## Problem to solve

There are no utility classes to add just the focus ring around buttons and inputs.

## Proposed solution

Add a utility class for button & input focus ring styles.",1
89932783,2021-07-07 23:14:36.640,Add CSS utility class for setting a min-width of scale * 7 and/or * 8,"As part of the cleanup of [this experiment](https://gitlab.com/groups/gitlab-org/-/epics/6300) – specifically [this line from gitlab!61639](https://gitlab.com/gitlab-org/gitlab/-/merge_requests/61639/diffs#fb723e851b8926f6532eeed94f1de1874c3221c7_243_250) – we would like to add a utility class for setting the min-width to `32px`, which is `$gl-spacing-scale-7`, and/or another for setting the min-width to `40px`, which is `$gl-spacing-scale-8`.

```scss
.gl-min-w-7 {
  min-width: $gl-spacing-scale-7;
}

.gl-min-w-8 {
  min-width: $gl-spacing-scale-8;
}
```",1
89932738,2021-07-07 23:10:47.678,Add utility CSS class for setting width of $grid-size × 28,"As part of the cleanup of [this experiment](https://gitlab.com/groups/gitlab-org/-/epics/6300) – specifically [this line from gitlab!61639](https://gitlab.com/gitlab-org/gitlab/-/merge_requests/61639/diffs#fb723e851b8926f6532eeed94f1de1874c3221c7_243_245) – we would like to add a utility class for setting the width to `224px`, which is `$grid-size * 28`.

```scss
$gl-spacing-scale-28: 28 * $grid-size;

.gl-w-28 {
  width: $gl-spacing-scale-28;
}
```

We could also follow another pattern found in the `gitlab-org/gitlab` project’s `utilities.scss` file:

```scss
.gl-w-grid-size-28 {
  width: $grid-size * 28;
}
```",1
89878956,2021-07-07 06:46:16.727,Single stat - add option for adding/removing hover state,"# Problem

From https://gitlab.com/gitlab-org/gitlab-ui/-/issues/1407#note_611185618 - Hover state on single stat is confusing when there are no popovers.

# Proposal

Add option for adding/removing hover state depending on whether there is a popover.",1
89605554,2021-07-01 11:47:39.621,Fix vue/no-deprecated-slot-attribute violation(s) in src/components/charts/tooltip/tooltip.vue,"The file [`src/components/charts/tooltip/tooltip.vue`](https://gitlab.com/gitlab-org/gitlab-ui/-/tree/adea5ac1e4513c72153a773621cc495a9bf219cb/src/components/charts/tooltip/tooltip.vue) violates the [recently](https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/2269) enabled [`vue/no-deprecated-slot-attribute` rule](https://eslint.vuejs.org/rules/no-deprecated-slot-attribute.html#vue-no-deprecated-slot-attribute).

Migrating to the newer slot syntax is a requirement for us to be able to adopt Vue 3.

## What to do

In broad strokes, migrating this component will involve:

1. Updating the template to use the newer slot syntax
1. Fixing tests and/or adding tests in GitLab UI
1. Creating an integration MR with GitLab, and fixing _its_ tests

### Updating the template

This is the easy part! It's usually as simple as one of these example diffs:

```diff
-  <template slot=""first"">
+  <template #first>
```

```diff
-  <div slot=""foo"">Slot content</div>
+  <template #foo>
+    <div>Slot content</div>
+  </template>
```

```diff
-  <slot slot=""foo"" name=""foo"">Slot default content</slot>
+  <template #foo>
+    <slot name=""foo"">Slot default content</slot>
+  </template>
```

```diff
-  <slot v-for=""slot in Object.keys($slots)"" :slot=""slot"" :name=""slot""></slot>
+  <template v-for=""slot in Object.keys($slots)"" #[slot]>
+    <slot :name=""slot""></slot>
+  </template>
```

```diff
-  <slot v-for=""slot in Object.keys($scopedSlots)"" :slot=""slot"" :name=""slot"" slot-scope=""scope""></slot>
+  <template v-for=""slot in Object.keys($scopedSlots)"" #[slot]=""scope"">
+    <slot :name=""slot"" v-bind=""scope""></slot>
+  </template>
```

Some components will require more work if they have conditional slot rendering.

### Fixing GitLab UI tests

1. If there are no failing tests, verify that the slot content is actually being tested somehow, and write a new test covering this if not.
1. If there are failing tests, fix them!

### Creating an integration MR with GitLab

1. Once your MR for GitLab UI is in good shape, create an [integration MR against GitLab](https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/doc/contributing/gitlab_integration_test.md#using-the-remote-development-package) using the `create_integration_branch` manual CI job.
1. Fix any test failures.",2
89435701,2021-06-28 22:54:01.652,Lint all Markdown files with markdownlint,"Let's enforce consistent rules for writing documentation in GitLab UI. We recently [setup markdown lint](https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/2250), but a lot of `.md` files aren't being linted yet.

- [x] Include all `.md` files in the lint script (except for `CHANGELOG.md` which is auto-generated).
- [x] Fix all formatting errors.",2
89192962,2021-06-23 19:22:11.609,Add .gl-font-size-inherit,"```scss
.gl-font-size-inherit { font-size: inherit; }
```

Used instead of the existing `.font-size-inherit` utility as part of https://gitlab.com/gitlab-org/gitlab/-/merge_requests/64540",1
89192826,2021-06-23 19:19:28.280,Add styles for .gl-button.close in .gl-popover .popover-header,"```scss
.gl-popover {
  .popover-header {
    .gl-button.close {
      margin-top: -$gl-spacing-scale-3;
      margin-right: -$gl-spacing-scale-4;
    }
  }
}
```

Used as part of https://gitlab.com/gitlab-org/gitlab/-/merge_requests/64540",1
88748757,2021-06-15 13:32:53.144,Setup lefthook,We should setup `lefthook` to run linters in a pre-commit or pre-push Git hooks in order to catch formatting issues before they trigger a pipeline on the remote.,2
88118316,2021-06-02 17:38:36.000,"Follow-up from ""feat(echarts): update to echarts@5""","The following discussion from !2185 should be addressed:

- [ ] @leipert started a [discussion](https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/2185#note_565928329):  (+5 comments)

    > Seems like there is a significant diff on the timelines...

## What's this issue about

Currently the only chart component that sets the options related to a chart's zoom-bar in accordance with the [design specs](https://www.figma.com/file/17NxNEMa7i28Is8sMetO2H/Data-Visualization?node-id=63%3A697) is `GlLineChart`.

https://gitlab.com/gitlab-org/gitlab-ui/-/merge_requests/2185 removes the option that controls this will be removed from the line-chart component.

In order to keep the existing functionality aligned to the design-specs and increase overall consistency, this MR moves the zoom-bar options into the globally shared chart's theme.

### Components affected

* `GlAreaChart`
* `GlBarChart`
* `GlColumnChart`
* `GlDiscreteScatterChart`
* `GlLineChart`
* `GlStackedColumnChart`

| current implementation | design |
| ------ | ------ |
| ![Screen_Shot_2021-06-08_at_1.04.34_PM](/uploads/f8753bbc74725aac10c1d44d92ba9ddd/Screen_Shot_2021-06-08_at_1.04.34_PM.png) | ![Screen_Shot_2021-06-08_at_1.05.53_PM](/uploads/d299f0171c77e8e2b5def3f388fd8a7b/Screen_Shot_2021-06-08_at_1.05.53_PM.png) |

Here's the design spec: https://www.figma.com/file/17NxNEMa7i28Is8sMetO2H/Data-Visualization?node-id=63%3A697

## Steps to reach this chart

1. `yarn storybook` to start a local development server
2. Open the browser 
3. On the left navigation menu, find **Charts** > **Line Chart** > **With zoom and scroll** (or simply visit `?path=/story/charts-line-chart--with-zoom-and-scroll`)

## Implementation plan

1. `src/utils/charts/theme.js` seems to contain a `dataZoom` property. My initial guess is that this property can be used to define a background color for the highlight. You can check the eCharts docs here: https://echarts.apache.org/en/option.html#title",2
88115395,2021-06-02 16:22:24.310,GlAvatar: Identicon fallback inconsistent with GitLab implementation,"## What/Why

Found as part of https://gitlab.com/gitlab-org/gitlab/-/merge_requests/62419

The classes and colors used for the `identicon` component in GitLab are different than here in GitLab UI.  I am unclear on which is correct so part of this issue if determining **where** to fix this.

GitLab UI does its class calculations in the [avatar.vue](https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/src/components/base/avatar/avatar.vue) file. <br />
GitLab does its class calculations in the [avatar_helper.js](https://gitlab.com/gitlab-org/gitlab/-/blob/master/app/assets/javascripts/helpers/avatar_helper.js) file.

## Examples of inconsistencies

**Background color**
- GitLab UI class `.gl-avatar-identicon-bg7` => `#bfbfbf ($gray-200)`
- GitLab class `.identicon.bg7` => `#eee ($identicon-gray)`

**Font color (Single Letter)**
- GitLab UI class `.gl-avatar-identicon` => `#303030 ($gl-text-gray-900)`
- GitLab class `.identicon` => `#525252 ($identicon-text-color)`

## Screenshot

| GitLab | GitLab UI |
| ------ | ------ |
| ![Screen_Shot_2021-06-02_at_11.18.25_AM](/uploads/32cbb46678fdeb28b9a4a0e746aaf161/Screen_Shot_2021-06-02_at_11.18.25_AM.png) | ![Screen_Shot_2021-06-02_at_11.18.38_AM](/uploads/d3620699a198a6429bbdb95994924641/Screen_Shot_2021-06-02_at_11.18.38_AM.png) |

## Proposal

I would like to determine which color set is correct so that we can update the other to match the styles.  There is a huge upside in depending on `GlAvatar` to handle the `identicon` fallback as it really cleans up the template.  However, until we clean up the old usages of `identicon` we want to be sure to keep these color patterns inline as they help users identify their projects/groups at a glance.

cc/ @nickbrandt",1
89409518,2021-05-26 16:06:54.695,GlTable > Set rows primary hover background to match design sytem,"This follows up on @cam.x's comment: https://gitlab.com/gitlab-org/gitlab/-/merge_requests/62134#note_580549583

In the **Threat Monitoring** app, policy rows' background color on hover should be `#e9f3fc` (`blue-50`).

![](https://gitlab.com/gitlab-org/gitlab/uploads/39a751f0e62ca2d391a9cc140886f912/Frame_1.png)

Let's update `GlTable`'s styles to align with the design system.",1
87387951,2021-05-19 19:16:13.725,GlDrawer's close button should be top-aligned,"Currently, `GlDrawer`'s close button is vertically centered in the header. Here's an example of how it looks in **Threat Monitoring**:

![Screen_Shot_2021-05-19_at_3.12.42_PM](/uploads/65ff97cf83486ce37b63c082eedcde7b/Screen_Shot_2021-05-19_at_3.12.42_PM.png)

According to some ~""group::container security"" [designs](https://gitlab.com/gitlab-org/gitlab/-/issues/267346/designs/3b_drawer_container.png), and to the [Sketch exports](https://gitlab-org.gitlab.io/gitlab-design/hosted/design-gitlab-specs/drawer-spec-previews/), the close button should be aligned to the top of the header.

![Screen_Shot_2021-05-19_at_3.14.44_PM](/uploads/d76a818836bae81892f2dd4c53385056/Screen_Shot_2021-05-19_at_3.14.44_PM.png)

Let's update `GlDrawer` to match the specs.",2
87068165,2021-05-14 07:14:10.299,GlSingleStat: Fade in units when animation is complete,"When `GlSingleStat` has `shouldAnimate=true` we should fade in units once the animation is complete.

This was brought up in https://gitlab.com/gitlab-org/gitlab/-/issues/329702#note_567594091",2
87063176,2021-05-10 03:03:50.384,Make table sorting options more obvious,"<!---
Please read this!

Before opening a new issue, make sure to search for keywords in the issues
filtered by the ""regression"" or ""bug"" label:

- https://gitlab.com/gitlab-org/gitlab/issues?label_name%5B%5D=regression
- https://gitlab.com/gitlab-org/gitlab/issues?label_name%5B%5D=bug

and verify the issue you're about to submit isn't a duplicate.
--->

### Summary

Following on from discussion in https://gitlab.com/gitlab-org/gitlab/-/issues/301082#note_570459360, are there options we can explore to make the table sorting more obvious to users?

> Ahh, I have to click on the Time column for the arrow to display. It wasn't obvious to me that sorting by the Time column 
> was even an option because I didn't see the arrow.
>
> ![Screen_Shot_2021-05-07_at_4.58.57_PM](https://gitlab.com/gitlab-org/gitlab/uploads/a31e914f0d0c17d6f6ed0cfa0494a767/Screen_Shot_2021-05-07_at_4.58.57_PM.png)
> 
> I wonder if there is some way to make this more obvious @ekigbo ?

> This feels familiar like it tripped me up once before in the UI. Ah yes, in the DevOps Adoption table.
> 
> @npost Do we have any other design options for sorting?

### Proposal 

Add blue hover highlighting as described in [@ameliabauerly's comment](https://gitlab.com/gitlab-org/gitlab/-/issues/330464#note_571675576)",1
86314582,2021-05-01 07:59:58.859,Replace Node Sass (node-sass) with Dart Sass (sass) in JavaScript,"- [x] [plentycode/sass-export#69](https://github.com/plentycode/sass-export/issues/69)
- [x] ~~!2175: Update sass-export to 2.1.0 to partially migrate to sass~~
- [x] !2846: Update sass-export to 2.0.1 to partially migrate to sass
- [x] !2176: Replace node-sass with sass

Part of &5923",32
86264890,2021-04-30 06:35:40.768,VSA - Add light gray background to metrics on hover,"Follow-up from https://gitlab.com/gitlab-org/gitlab/-/merge_requests/59732#note_563635269

Let's add a light gray background (`gray-50` when hovering over a metric in group-level VSA.

/cc @npost",1
85809015,2021-04-23 10:38:51.214,GlTabs > flaky visual test: tabs-with-scroll-and-growing-1-diff,"The `tabs-with-scroll-and-growing-1-diff` story seems to be flaky as it's been causing the `visual` job to fail inconsistently.
https://gitlab.com/gitlab-org/gitlab-ui/-/jobs/1204315526",1
85729888,2021-04-22 09:50:15.191,Group Overview Analytics: Replace metric card with single stat,"Let's replace the existing metric card on the group overview page with the `GlSingleStat` component.

![group_overview_analytics](/uploads/df93fbac344284917dbd281b8a83cd32/group_overview_analytics.png)",1
