issuekey,created,title,description,storypoints
91166904,2021-07-30 17:40:31.543,Send ASSISTments session data to ASSISTments at session close,"* When a session from a student referred from ASSISTments ends, we send data matching the contract attached to this issue to ASSISTments
* do this as a worker job
* circuit breaker with exponential backoff should retry for 5 minutes and
  * retry if we get a 5xx code
  * if circuit breaker fails, log and send alert to Slack
* if we get a 4xx code, log it and alert in Slack so we can reach out to ASSISTments team
  * log the session id so we could try to resend later
* add to AssistmentsData doc on success or failure: no default values so we know if they really should be there or not
  * sent: boolean
  * sentAt: timestamp

Reference files:
* [upchieveEndpoint.json](/uploads/05ae9882eb9e3e8c9c63e618a7841b10/upchieveEndpoint.json)
* [upchievePayload.yaml](/uploads/a23e6805b3d5b0bfaceafd03222abbf7/upchievePayload.yaml)

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] At session end an assistments session queues the job",3
90938976,2021-07-27 18:10:52.080,Volunteer Emails should check if the user is banned or deactivated,"We send inactive emails to volunteer users who are deactivated or banned. Checking if someone is deactivated is something we should do on all volunteer emails.

Specific example is volunteer id 60889e8836785e00232c75c4 received inactive emails.

* Ideally we should audit all volunteer emails and add a deactivated check. Maybe create a snippet for the aggregation of ""volunteers who receive email"" that ignores deactivated, fake, test, etc.

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session",1
90934248,2021-07-27 16:26:59.224,Validate: can we get api key auth working on sockets from the worker,"In #802 we successfully got a socket connection, but only when auth was turned off. We should see if we can get socket.io authenticated with either a cookie strategy or https://www.passportjs.org/packages/passport-localapikey/

Right now we use a special passport.socketio package to do the auth, but we might want to strip that out and just use passport regularly as in https://socket.io/docs/v4/middlewares/#Compatibility-with-Express-middleware

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
90863481,2021-07-26 17:20:52.086,Frontend: call new endpoint to determine which category selection view to show,"On student dashboard mount check if `user.pastSessions.length >= 1`. If so add network service call for new endpoint to get most recent subjects. Use response to decide whether to show recent subject selection. Otherwise don't show recent subject selection.

## Notes
- wrap recent subject cards with a header and `v-if` to show the wrapper
- place caller in `src/services/UserService` to wrap network call with error handling (see `getVolunteerAvailability`)

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Student with no prior sessions dashboard shows normal category selection
- [ ] Student with recent sessions show recent subject selection in addition to normal category selection
  - [ ] 1 session subject shows up as 1 tile
  - [ ] 2 sessions of distinct subjects  show up as 2 tiles in recency order
  - [ ] 3 sessions of distinct subjects  show up as 3 tiles in recency order
  - [ ] 2 past sessions of the same subject show up as one tile",3
90863300,2021-07-26 17:15:37.407,Backend: endpoint to serve 3 most recent subjects,"## Requirements
- endpoint: `/api/v1/students/{studentId}/recent-subjects`
- update swagger yaml
- Endpoint signature
  - input: student user id
  - output: array of strings length 0-3
  - status codes: 
    - generic 422 input error is id is not provided
    - 400 if id does not exist or points to volunteer instead of student

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Endpoint returns values as expected",1
90863177,2021-07-26 17:12:06.612,Backend: server function for determining 3 most recent subjects,"Function should take a given student and return a list of their 3 most recent session subjects (from `user.pastSessions`)
- all 3 subjects are unique
- we do not care of the session for a subject was matched
- order list by recency of session with that subject
- if < 3 unique subjects are found in session history you can return list of size 0, 1, or 2
- return list of strings

** Note: lookup all session objects from past sessions array in one go upfront to minimize network calls 

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
90647807,2021-07-21 20:42:12.278,Frontend: Create recent subject card component,"* Create new recent subject component: https://www.figma.com/file/MrqQVjT42e1bs12DPPgktY/Upchieve---Design-Kit?node-id=92%3A11127
* Create different states of the component: disabled, hover, initial, pressed
* Write tests in StoryBook

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
90638377,2021-07-21 18:02:29.108,Backend: Prevent banned students from starting a session,"- Add a check to in `server/services/SessionService.ts` `startSession()` to check for banned students and if student is banned throw a `StartSessionError` with a message
- Update test to not allow banned user to start session

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
90637234,2021-07-21 17:37:04.854,Frontend: Reduce student dashboard hero image height,"- Reduce the hero image height for the student dashboard: https://www.figma.com/file/f6rBFhwjOhvvcfCSkMuN86/Dashboard?node-id=190%3A4116
- Validate design with Grace

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [ ] Volunteer dashboard hero image should not be shortened
- [x] Test on multiple device window sizes",2
90636993,2021-07-21 17:27:54.805,Add student policy document to storage bucket,"- ~~TODO: Get the student policy document from the program team~~
- Drop the document into a bucket

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",0
90636842,2021-07-21 17:22:20.620,Frontend: Add student banned state,"- Show new banner for banned students: https://www.figma.com/file/f6rBFhwjOhvvcfCSkMuN86/Dashboard?node-id=260%3A8698
 - For ""Why am I seeing this?"" in a new tab it should show the document stored in this issue: https://gitlab.com/upchieve/subway/-/issues/809
- Change the student's status to be ""Paused""
- Disable all of the subject cards
- Hide the ""How can we help you text"" on the hero image only for banned students

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Banned student should see ""Paused"" as their status under their name in the sidebar
- [x] Banned student should see a banner on the dashboard saying ""Your account is under review""
- [x] Banned student should see all subjects disabled",3
90636521,2021-07-21 17:15:33.137,Frontend: Change in-session state,"- Change the banner color to match design: https://www.figma.com/file/f6rBFhwjOhvvcfCSkMuN86/Dashboard?node-id=150%3A4234 when a student is in session

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [ ] Student should see the updated banner color when in a session",1
90574469,2021-07-20 17:51:57.328,Backfill SessionId on Notification,"Add sessionId property to notification model and add index on it to avoid having to do an aggregation lookup when searching for notifications associated to a particular session. Use notification array on every Session object and write sessionId on them

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Run script",1
90574257,2021-07-20 17:46:08.237,Refactor Notification to include sessionId,"Add sessionId property to notification model and add index on it to avoid having to do an aggregation lookup when searching for notifications associated to a particular session.

Backfill script #805

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod
- [ ] Add DB index for `notifications.sessionId`

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",0
90513200,2021-07-19 17:31:18.966,Validate: Can we send a socket event from a job,"Can we open a socket connection to the app server like the front end client would?
How do we test this on staging?

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
90511984,2021-07-19 17:03:49.152,Create SessionService function to check if there are volunteers on-deck,"An on-deck volunteer for a session:
* be certified in the session subject
  - simple check of `volunteer.subjects` array
* not be in another session at the time of checking
  - check `twilio.js:152 getActiveSessionVolunteers` and `$nin` that list
* have set availability for the current hour
  - check `twilio.js:17 getCurrentAvailabilityPath`
* have not received a notification for this session
  - ~~session object has array of notifications sent out - we can `$nin` with volunteer IDs extracted from these notifications~~
  - PENDING REFACTOR #804 : save sessionId right on the notification object and index on it to avoid the `$lookup` step for this
* have not received ANY notifications in the last 15min
  - check `twilio.js:180` and do the inverse

## Tests
- Lot's of complexity due to 5 decision points above
- Needs lots of test seed data

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",3
90509181,2021-07-19 16:15:35.545,Visual indication for chat bot messages,"* Pull out old chatbot component
* Receive chatbot messages over socket like user messages
* Make chatbot messages appear as the custom green color they currently appear with.
* Need to update the admin session review view to show the messages correctly as well. `components/admin/chatlog`
* Update the student and volunteer icons

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Chatbot messages appear and persist, in correct color",0
90412273,2021-07-16 20:10:46.209,Fix url formatting for subjects,"Make it so that urls get formatted with hyphens, rather than shoving words together, i.e. `readingwriting` should be `reading-writing`. The former prevents us from changing the format to something else like camelCase without magic strings.",1
90287125,2021-07-14 18:03:22.096,Write function that generates data for partner analytics report,"* Write and unit test functions that generates the data structure in the correct columns to match the spec in the parent epic.
  * Should have row object that has all the headers
  * Should have rows that match the data
* Do this for the main sheet and the summary

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session",3
90286583,2021-07-14 17:47:34.673,Frontend updates to show admin how to access new partner analytics report,"- Remove current frontend logic that generates the corporate partner analytic report
- Excel file is downloaded once the request has finished

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session",1
90286573,2021-07-14 17:47:18.277,Format analytics CSV to create partner analytics report Spreadsheet,"* **Format**: Update the partner analytics report function to create a spreadsheet matching the spec in the parent epic, using the data from the functions written in #793
* **Download**: Update the router/api to match the contract defined in #790 

https://stackoverflow.com/questions/13307499/http-download-file-name/13308094#13308094 : header from this link should be appended to the response

https://www.bezkoder.com/node-js-download-excel-file/

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Generate a report by calling the API in prod and make sure that the sheet gets created correctly with the correct permissions",3
90286568,2021-07-14 17:46:54.205,Add partner analytics report endpoint docs to swagger,"This endpoint is not currently documented. We should add the documentation with it matching how we will be returning the new implementation where we send back a link to the created Google sheet, rather than a CSV.

Request will send through partner name and dates. Response will send back a link.

* 201 created code,
* 500 server error
* 403 unauthorized if you're not an admin
* 422 no data found",1
90286485,2021-07-14 17:44:19.708,Write a script that can use the exceljs npm package to create a sheet and put some formatted data in,"This is just to do a proof of concept of using the api and validating that we know how to use the package to make a basic spreadsheet

https://www.npmjs.com/package/exceljs

* Can we create a sheet?
* Apply formatting
* Put data in correctly

## Tasks
- [x] Create POC script
- [x] Review with engineering staff",2
90212284,2021-07-13 17:22:14.103,New job to send special inactivity emails on 9/2,"Job runs only on 9/2, it looks for users who have been inactive for 91+ days and sends the special email. It should also deselect the users' availability hours.

Requires email template ID from business team.

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod
- [x] Run addCronJob script with this job added.

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Tests that match the scenarios in the inactivity email feature file.",2
90212248,2021-07-13 17:21:00.354,Use UTC for inactivity calculations,"Refactor lastActivityAt middleware and the volunteerEmailInactive job to use UTC timezone instead of server time zone.

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] `lastActivityAt` gets properly recorded",1
90211875,2021-07-13 17:10:30.652,Update inactivity email job to not send during blackout period,"In emailVolunteerInactive, make a check at the beginning of the job, that if we're in the blackout period of 00:00 on 6/1 to 23:59 on 9/1, don't send an email.

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Testing according to the scenarios in the inactivity email feature file.",2
90213232,2021-07-13 17:03:23.890,Write Gherkin scenarios for volunteer inactivity emails,"Setup gherkin-jest in Subway. Create subdirectory for step definitions and include in setupFiles in Jest config. Create subdirectory for feature files.

Add documentation on when to use gherkin-jest vs regular jest in Subway, and when Gherkin scenarios should go in subway vs whoop-whoop.

Translate examples from https://docs.google.com/spreadsheets/d/1pQUAdImSgWGMvjYhzNP2m7XyGZOcUxk10_uiOPk84SQ/edit#gid=5004413 into scenarios in an inactivity emails feature file.",1
89043611,2021-06-21 16:17:11.690,Remove previously-banned-IP-banning logic,"Currently, when a session begins, we check if a student's IP has been previously banned, and if so we ban them at that moment. We want to remove this logic while leaving the rest of the IP-ban infrastructure intact.

* Remove the recordIpAddress middleware from new session router.

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Student with international IP can make session and volunteers can join it",1
89041453,2021-06-21 15:29:31.418,"Add ""guidelines for reporting a student"" to upchieve 101","Volunteers must read our new reporting guide in order to complete the Worst Case Scenarios module

* [x] Convert https://docs.google.com/presentation/d/1Ex5Z3jNcP4gGmKuelCXIDvu6lYhMf4FNSiS2Yu2kg-k/edit?usp=sharing to pdf and replace the `challenging-scenarios.pdf` in the upc-training-materials bucket
* [x] Convert https://docs.google.com/document/d/1W19FPfyYwObxZ8P2hzNaP9bxnZODQqEbxlnZv9vXR6k/edit?usp=sharing to pdf and add to the upc-training-materials bucket
* [x] The new document should be labeled ""Guidelines for Reporting a Student"" and have the book icon
* [x] The ordering of the Worst Case Scenarios module tasks should be: existing video, new reporting guide, existing deck

Add in utils/training-courses.ts

resourceId is name of pdf in S3 bucket, but without suffix.
material key is random, make one up that is distinct from the others, six-character alphanumeric

## Tasks
- [x] Upload resources
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Volunteer can see new reporting guide in UPchieve 101",1
89040981,2021-06-21 15:21:13.937,Convert reporting guide to PDF and put in upc-training-materials bucket,https://docs.google.com/document/d/1W19FPfyYwObxZ8P2hzNaP9bxnZODQqEbxlnZv9vXR6k/edit?usp=sharing,0
88954967,2021-06-18 22:56:46.492,Final debug and deployment of “wait-time-heat-map”,"## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Volunteer should be able to update their availability
- [x] Certified volunteer should receive text message if a new session was started during their availability times
- [x] Volunteer should see clock icon for periods of high wait times",0
88692015,2021-06-14 16:36:54.705,Refactor backend to match new session reporting requirements,"Acceptance Criteria:
* Volunteers will have only two choices for why they are reporting a session
  * Choice ""This student was extremely rude or inappropriate"" will auto-ban the student's account
  * Choice ""I am worried for the immediate safety of this student"" will not auto-ban a student's account

Implementation notes:
* Refactor backend to respect ban requirements above
* Refactor backend to put send new ban notification emails to student at correct time
  * reportSession checks if session is ended, and if so, sends the email
  * if the session is not ended, then we save a `<sessionId>-reported` or  similar key in the cache using cache repo. Use `saveWithExpiration`
  * endSession function should check the cache for existence of that key, and if it exists, send the email
* reportSession/endSession notifications should always bcc support@upchieve.org
* Refactor swagger to show accurate values sent through

Pre-reqs:
* get the email template ids from Programs

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Student user is reported for either reason after session ends and the correct emails arrive in mailtrap and Hubspot ASAP
- [x] Student is reported for either reason during session and the correct emails arrive in mailtrap and Hubspot AFTER the session ends",5
88691856,2021-06-14 16:33:37.285,Create job to process session report emails,"Acceptance Criteria:
* Write job to process session report emails
* Refactor reportSession and endSession to queue emails instead of directly sending them


## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Report test student as volunteer and see emails come into mailtrap and Hubspot",2
88690352,2021-06-14 16:02:43.443,Refactor reporting pop-up to match new requirements,"Acceptance Criteria:
* Volunteers will have only two choices for why they are reporting a session
  * Choice ""This student was extremely rude or inappropriate"" will auto-ban the student's account
  * Choice ""I am worried for the immediate safety of this student"" will not auto-ban a student's account
* Volunteers can reach the reporting guide from the reporting popup

Implementation notes:
* Refactor frontend modal component and backend to use the same data structure for text values

Pre-reqs:
* get the reporting guide from Programs
* get the email template ids from Programs

Final mockup: https://gitlab.com/upchieve/staff-requests/uploads/9c6d1215dc4b93c153fc384460ae03ef/Report_pop_up_2.png

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Update line 180 of `constants.ts`
- [x] Merge to main
- [x] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Reporting pop up is accurate to spec",1
88689261,2021-06-14 15:43:12.237,Refactor frontend for new international ip handling,"Acceptance Criteria:
* Make a check on new backend ip location endpoint on page load of every stage of open student sign up, not partners
  * Redirect to new international sign up denial page
* Partner pages call partner backend API route, open pages call open backend API route
* If backend sign up API endpoints return an ""international ip"" error, redirect to new denial page

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Use VPN to have international IP and try to visit each sign up page
- [x] Then turn off VPN and try to visit each sign up page
- [x] Partner sign up should always work",5
88689242,2021-06-14 15:42:52.725,Refactor the backend student signup API endpoints to handle new international ip flow,"Acceptance Criteria:
* check IP location and return new error if its international
  * unless the student is coming from a partner
* Remove current ip banning code paths and code

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session",2
88689099,2021-06-14 15:40:30.278,Make international student sign up denial page,"Mockup: https://gitlab.com/upchieve/staff-requests/-/issues/87

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
88340714,2021-06-07 17:13:25.249,Refactor API contract for student registration,"- Student registration calls are documented in Swagger
- In a separate file that is $ref'd into the main one for readability
- Main purpose of refactor is to determine contract around US and non-US IP signups
  - Existing student sign up endpoints need to make their own IP location checks for each request, so they should have a new potential return value, which would be an error saying that the request couldn't be honored because it's from an international IP.
  - New endpoint for the frontend to be able to make IP location checks separately from other requests.

## Tasks
- [x] Code review
- [x] Merge to main",2
88340042,2021-06-07 16:55:59.666,Server - split student registration routes between partner and open,"On all partner student registration api calls, just go through the regular flow as it exists now in the backend.

On all open student registration api calls, check the header for the source IP, and perform a who-is call. If it is a non-us ip, send back an 403 error code, backend should have a custom error type of NonUSStudent or something similar.

Wrap all student registration calls in the feature flag `ip-ban-overhaul`.

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] student sign up through front end works like before
  - test both open and partner student sign up
- [x] New partner route works
  - both for US and international IPs
- [x] New open route works for US ip
- [x] New open route 403 for international ip",2
88339037,2021-06-07 16:31:11.936,Component - radio button - design,"## Tasks
- [ ] Provide mockups/prototypes of component in all desired states
  - [ ] Unselected
  - [ ] Selected
  - [ ] Spacing between multiple radio selections
  - [ ] Spacing between radio and text
  - [ ] Disabled
  - [ ] Horizontal list
  - [ ] Vertical list",3
88229543,2021-06-04 16:17:04.710,Add two new options to post-session survey,"Volunteers have two new options in the post session survey, ""The student was rude or inappropriate"" and ""The student was only looking for answers"", in the obstacles section.

They should be added to the end of the list, so we don't mess up current integer/obstacle key/value associations. String values/checkboxes need to be added to FeedbackView and FeedbackPreview.

On backend, add const enum that maps string values to integers so we can see what the values should be and validate in the future, this enum should be shared by frontend and backend by importing the enum from consts.

Feedback schema needs to be bumped to v3.

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Make sure new feedback options get stored correctly in db",2
88174609,2021-06-03 17:52:00.219,Update Zwibbler source strings in config,"To test this, change local config to point at CDN location of new file.

Look through minified zwibbler package to find the websocket connection variable (`zwibblerContainer.xy.zz.ab...`) and update `src/views/SessionView/Whiteboard.vue:564` to use the new package. Put this change behind a feature flag.

To test in staging, change value in Doppler.

To update in production, change value in Doppler.

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Student/volunteer can use all whiteboard tools
- [ ] Mobile Student/volunteer can use all whiteboard tools",2
87916210,2021-05-29 21:20:48.818,App should exit if database is not available,"At the moment, if the database is not available, connections fail and just stay failed, but the app does not crash. The same occurs in the worker.

In the connections instantiated by both the web and worker processes, the connection is not done with an `try...await...catch` or `return...catch`. We need to catch errors and exit if the db is not available.

The resulting connection provides a `.on('error')` handler. Similarly here we should log the error exit the process or have some kind of exponential back off (like this one: https://www.npmjs.com/package/@kessler/exponential-backoff) of trying to reconnect before finally exiting.

Backoff retries should not last longer than 60 seconds

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod

## Smoke tests
- [x] Starting app without mongo running, it retries for 60 seconds and exits
- [x] Starting app and then killing mongo process, app retries for 60 seconds and exits
- [x] In staging, starting app with kubernetes IP blocked on staging mongo database, app retries for 60 seconds and exits, container should stop, and kubernetes should start a new one
- [x] In staging, starting app with mongo access, then removing kubernetes IP from allowlist, app retries for 60 seconds and exits, container should stop and kubernetes should start a new one
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session",3
87769948,2021-05-26 18:45:12.253,Audit current .gitlab-ci.yaml for what we need/can drop,"Dave added the AutoDevops jobs, some of which are not proving valuable or are taking inordinately long. We should decide if there are any we want to drop, or any that we want to own and modify to meet our needs.

- Generate list of jobs we want to customize and document why we want to customize
- Remove unnecessary jobs
- Document jobs",2
87767970,2021-05-26 17:50:56.677,Remove hoursTutored references from backend,"hoursTutored is referenced in

* session service tests
* userService in `parseUser`
* endSession
* buildVolunteer generator

These references should be removed so we're no longer doing anything with hoursTutored

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
87767961,2021-05-26 17:50:44.706,Update volunteer dashboard impact summary to use timeTutored,"Refactor src/views/DashboardView/VolunteerDashboard/index.vue, the getImpactStats, to use timeTutored instead of hours, and convert ms to hours.

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Dashboard shows accurate data in impact summary before and after change",1
87629634,2021-05-24 17:09:56.072,Add ASSISTments to regular student partner manifests to use regular partner signup flow,"* requirePartnerSite
* showHighSchoolCheckbox
* showCollegeCheckbox
* showHighSchoolSelector 

set all to false",1
87628532,2021-05-24 16:50:05.633,Capture ASSIStments query params for a logged-in student,"Vertical slice of making sure this works.

* Be logged in as an ASSISTments student
* Visit the site via a url containing the query parameters we will receive
* Land on the dashboard
* Refresh
* Start a session
* New assistments document is created with correct data

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Assistments link new student flow works (confirm via compass)
  - staging.upchieve.org/integration?partner=assistments&studentId=fb2e790c-514d-4936-a6f5-2ef20afe4cf0&assignmentId=a63c5239-b2e4-4760-a6b8-fb55b7bb938b&problemId=1234
- [x] Assistments existing, not logged in student flow works (confirm via compass)
  - staging.upchieve.org/integration?partner=assistments&studentId=e608f3b7-3918-43d8-adc7-20ff5d5f1973&assignmentId=7b5070c0-512d-48ff-9b5e-e613de7d590d&problemId=1234
- [x] Assistments existing, logged in student flow works (confirm via compass)
  - staging.upchieve.org/integration?partner=assistments&studentId=dd979e07-33e8-4c88-99ea-a693a3d66862&assignmentId=43f3bb3d-fb93-470e-a651-57f2f9275daa&problemId=1234
- [x] Bad assistments link does not create data object and logs error but still creates session object
  - staging.upchieve.org/integration?partner=assistments&studentId=hello&assignmentId=world&problemId=foobar
  - staging.upchieve.org/integration?partner=assistments&studentId=hello&assignmentId=world
  - staging.upchieve.org/integration?studentId=hello&assignmentId=world&problemId=foobar",5
87628499,2021-05-24 16:49:42.107,Test data for an ASSISTments student,"* In local dev seed data to support local development

Student user who has Assistments set as partner org, and a mocked out assistments ID. (need to ask Assistments what format their ID is in).",0
87628408,2021-05-24 16:47:25.131,Create assistments data document collection that stores assistments information,"This document needs to hold:

* problemId
* assignmentId
* sessionId as a reference to the session

This is a great chance to start the repo design style on a new model.

Methods that we probably need to expose:
* Creating
* GetAll (mainly for testing)

Specific analytics reads are something we can write later when we're writing the integration for retrieving data for Assistments.

Need to ask assistments what format these ids are in so we can validate the fields.

## Tasks
- [ ] Code review
- [ ] Merge to main",1
87627298,2021-05-24 16:26:09.670,UX design for better invalid input on sign up,"We're going to try to work in better UX on invalid inputs into the ASSISTments sign up / log in forms.

Need wireframes and prototypes in Figma for:
* Where do we show errors (global at top or bottom or under each field, for example)
* Colors, shape, placement
* Behavior (how fast and when should we show the error feedback)",5
87464381,2021-05-20 21:18:45.828,Look for Hackerone accounts and remove them in prod db,"HAckerOne researchers should be using a @wearehackerone.com email address to create accounts, we should be able to search for these and remove bogus ones.

Can also look for special characters in the name.",0
87225566,2021-05-17 18:56:44.479,College Track sign up link not working,"https://upchieve.org/collegetrack redirects to regular sign up page.

- [x] code reviewed
- [x] deployed to staging and tested
- [x] deployed to production",1
87129980,2021-05-15 16:05:47.699,Whiteboard line drawing tool has multiple issues,"1.  When selecting the line drawing tool, it becomes active and the cursor changes but upon clicking it reverts. Selecting the line drawing tool again works as expected. Then, after I draw a line with the line drawing tool, the tool is still selected. When I next use it, upon clicking, the currently selected tool reverts to the pencil and I'm therefore not drawing a line anymore. The line drawing tool effectively works every other try.

2.  Sometimes the line drawing tool is not sensitive to my choice of color.

3.  Sometimes the drawn lines are insensitive to undo and redo. If I use the pencil, draw a line, use the pencil, then press revert twice, the pencil drawings disappear and the line is still there.



* * *



Ticket created from a Slack [message](https://upchieveaccommunity.slack.com/archives/CE3V4J8KF/p1621022206152500) by [Dave Sudia](https://upchieveaccommunity.slack.com/team/U01B0ATT8AK) in #bug-reporting.

gz#5",1
86812005,2021-05-10 21:26:54.702,"Write SessionService function to generate and save heatmap data in cache, and retrieve it from cache","Write the actual function that generates the heatmap data structure according to the API contract spec (#679)

Go through the sessions for the last week, compute wait time, average them for each hour and save it for that hour.

Should include unmatched sessions.

Ignore sessions (matched and unmatched) that lasted less than 1 minute

**To calculate wait time:**

volunteerJoinedAt - createdAt if the session is matched

endedAt - createdAt if the session is not matched

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [ ] Deploy to prod
- [ ] Prod smoke tests

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session",1
86811533,2021-05-10 21:13:00.955,Rip out the metrics router,Delete the metrics router and all associated code.,0
86811338,2021-05-10 21:07:04.859,Refactor SessionService,"Refactor session service to have cleaner code and follow new repo/svc/router architecture. Will involve touching many other files that import session service.

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod
- [ ] Prod smoke tests

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
86803566,2021-05-10 17:39:12.298,Resolve missing seconday texts,"## Tasks
- [x] Staging smoke tests
- [x] Code review
- [x] Merge to main
- [x] Deploy to prod
- [x] Prod smoke tests

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Secondary text actually gets sent 
  - [x] Locally via worker logs
  - [ ] Test on staging",2
86802633,2021-05-10 17:12:02.351,Searching for any specific school on the admin pages shows all schools instead of the searched school,"Admin school search input box does not actually change search results. Programs team needs to be able to search schools to be able to conduct their work.

## Investigation
- `src/views/Admin/AdminSchool.vue`
- `SchoolService.getSchools`

## Tasks
- [ ] Code review
- [x] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod
- [ ] Prod smoke tests

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Admin school search works",2
86552122,2021-05-05 22:15:58.251,Misspelled word in the Academic Integrity policy,"There's a misspelled word in the Academic Integrity Policy. Here's the updated version: https://docs.google.com/document/d/1PXzRpXOvxQiZPv0fYcVM10tbUdYB1_qSfzITzathW5o/

Tasks
- [x] Download updated policy as a PDF
- [x] Upload the updated policy as `academic-integrity.pdf` and set the current version to the new uploaded policy",0
86543747,2021-05-05 18:22:57.678,Switch ordering of waiting students list,"Students who have been waiting the longest should show up at the top of the list as opposed to the bottom of the list

Rationale: We hope this will help ensure volunteers pick up the oldest requests first. It will also minimize cases where a volunteer selects the wrong student because a new student made a request right before they clicked (pushing down the list).

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod
- [x] Prod smoke tests

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Volunteer dashboard shows students sorted by wait time decreasing",1
86541904,2021-05-05 17:40:40.188,Explore the missing secondary text issue,"## Investigation
- `jobs/NotifyTutors.ts`

## Tasks
- [x] Document findings in to #698",1
86467114,2021-05-04 16:30:57.398,"""Click to refresh"" isn't actually refreshing","The click operator on ""click to refresh"" when a version change goes out needs "".native"" added",1
86467064,2021-05-04 16:29:39.806,Frontend Sentry is not sending to staging,"Need to fix frontend sentry to take a configured environment so it sends to staging, not everything to production.",1
86412105,2021-05-03 21:55:08.162,Write specs for student sign up,,1
85976765,2021-04-26 18:15:34.667,SPIKE: db data composition vs app data composition,"Take an aggregation pipeline that has at least one lookup/unroll on at least several thousand records and translate the aggregation into TypeScript execution (i.e. get one collection, parse, make separate query on next collection, parse, group) and compare times, and post a table here.",0
85975200,2021-04-26 17:39:06.140,Bootstrap Storybook.js for components,"Get Storybook installed into our application: https://storybook.js.org/docs/vue/get-started/introduction

Get one component created (header, as will be used in #678) as an example with 1 story and 1 test as an exemplar.

We may need to make our own header component that's not just an h1, that encapsulates our styling for an h1, outside of the global css

* unit test
* [storyshot test](https://storybook.js.org/docs/vue/workflows/snapshot-testing)

* write up a wiki doc on basic storybook stuff, why, how",3
85974982,2021-04-26 17:34:49.589,Make a CacheRepo for use by job and endpoint for volunteer availability heat map,"Make a new Repo class that interacts with Redis, and stores and retrieves volunteer availability heat map objects

Basically just a wrapper on getter and setter from Redis

Values received should take generics that provide their own ""stringify"" methods

- [x] Code reviewed
- [x] Merged to main",1
85974668,2021-04-26 17:25:57.554,Write api contract for volunteer availability heat map,"Write swagger documenting the api contract for what data will be sent for various requests to fill the volunteer availability heat map, which will be:

* in request, what subject(s) to get data for
* in response, data to fill in the table presented on the frontend",1
85974589,2021-04-26 17:24:02.493,Frontend components and views for volunteer availability heat map,"* modifying the schedule view to show the alarm icons from the design issue.
* create grid-cell and grid components in Storybook that represent the schedule grid and show state of selected/waittime, etc.
* grid-cell and grid components should have unit tests
* add to network service to get data
* refactor schedule view to hydrate the data

Design story w/ final mockups: https://gitlab.com/upchieve/subway/-/issues/689

Design: #689",5
85974577,2021-04-26 17:23:45.722,Endpoint for retrieving wait times for volunteer availability heat map,"* Create new `stats` router to host endpoints for user stats
* should call new SessionService function to retrieve cached data (#705)
* return data map for frontend to display
* only available to logged-in volunteers
  * this may require new middleware to see if someone is a volunteer

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod
- [ ] Prod smoke tests

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] New endpoint works",2
85974569,2021-04-26 17:23:29.525,Job that computes wait times for volunteer availabililty heat map,"* Executes weekly - update at 8am ET on Mondays and look at wait times from Mon-Sun from the prior week
* puts values into Redis under a key of ""allsubjectswaittimes"" and a json-stringified data map of the data to retrieve for that subject to fill the frontend
* job should execute immediately (maybe manually) when it is first deployed just to get things populated right off the bat
* calls the function written in #705 

## Tasks
- [ ] Code review
- [x] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod
- [ ] Add cron job with one off initialization
- [ ] Prod smoke tests

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Make sure heatmaps are actually populated correctly",2
85761891,2021-04-22 17:10:54.817,Implement redis pub/sub in whiteboard socket server,"## Acceptance Criteria

* Whiteboard communication works over multiple instances of the app
* By using redis pub/sub to communicate websocket messages across instances

## Testing notes

* Can test this locally by spinning up two version of the dev server with different ports
* Increase instance count in staging to ensure high probability of landing on different servers
* Test with one instance to make sure that scenario continues to function

## Tasks

- [ ] Pass code review
- [ ] Deploy to staging to validate
- [ ] Merge to main
- [ ] Deploy to production",5
85496094,2021-04-19 21:13:59.693,Corporate Partner analytics spreadsheet,"Sample of what I'd like to be able to pull: https://docs.google.com/spreadsheets/d/14crzaXpEZxQRsWDOG7-R7xxL0INxIZHvwbyYv-ieSr4/edit?usp=sharing

It is 1 report with all the data needed. I'll go in and delete columns as needed.


Acceptance Criteria:
* Report can be pulled via the admin panel like student and volunteer partner reports.",8
85207121,2021-04-14 20:41:58.620,Update telecom reporting to be accurate to new spec,"## Acceptance criteria

**Report columns**
* Name - firstname and lastname - correctly capitalized
* Email
* event id (4003)
* Date volunteered: max one row per date
* hours credited - take the sum of
  * certification hours (1 hour per quiz passed on a given date)
  * tutoring hours (total tutoring time on a given date, rounded up to 15 min increment) , in decimal format (eg 1 hour and 15 mins is 1.25)
  * elapsed availability hours (1:1 ratio for elapsed availability hours BUT ONLY on days where they had a tutoring session and the hours did not overlap with the time they tutored)

**Frontend**
* Generate Volunteer Partner Report button should be changed to Generate Telecom Partner Report

## Tasks
- [x] Pass code review
- [x] Deploy to staging and validate
- [x] Merge to main
- [x] Deploy to production",5
85195594,2021-04-14 16:28:09.141,Jobs catch and log their own errors internally making it difficult to track when they fail,"We should have jobs bubble up errors to the queue executing the job so that all job have a consistent mechanism for logging an error state. This can help us easily detect and monitor job performance.

- [x] Deploy to staging and check logs after jobs have run
- [x] Merge
- [x] Make Port Authority MR with main commit sha
- [x] Deploy to Production
- [x] Set up NewRelic alerts for jobs",3
85136016,2021-04-13 19:39:47.042,Unmatched sessions are not auto-ended after 45 minutes,"Problem:
Students first see a modal after waiting 15 minutes that we are having trouble matching their session. After 45 minutes, they should see another modal saying that we were unable to match their session. At the moment the modal is shown, the session should be auto-ended. However, there are currently unmatched sessions that are lasting longer than this 45 minute mark.

Desired outcome: 
- Ensure that the modals are shown at the 15 and 45 minute mark of an unmatched session
- The session should auto-end at the 45 minute mark",5
85135892,2021-04-13 19:36:44.157,SendGrid Volunteer contact list and segments are inaccurate,"The total number of contacts under ""Volunteers"" in SendGrid does not match the total number of volunteers that we have on the platform. 

The segment lists ""Subscribed Volunteers"" and ""Newsletter - Subscribed Volunteers"" under the contact list ""Volunteers"" also do not accurately align with the total number of expected volunteers that match the segment's filters

Desired outcome:
- The ""Volunteers"" contact list will have the correct total number of volunteers as there are on our platform
- The ""Subscribed Volunteers"" segment should have the correct total number of volunteers given a filter that is reproducible in MongoDB",5
85138924,2021-04-12 16:06:03.094,minor changes to contact form,"## Purpose

- Reduce duplicate submissions
- Reduce ""Other"" category submissions

##  Vision/Outcome
- Add new dropdown choice to the top of the list called ""General question""
- Change ""Feedback"" to ""General feedback""
- Replace everything on the contact form page under the header + help text (see screenshot below) with a simple text message saying ""Thank you for contacting us! We'll get back to you as soon as possible"" when the user submits the form (thereby preventing multiple submissions)
![image](/uploads/19603aaf2a35dbb024a37787381735be/image.png)

## Tasks

- [x] Pass code review
- [x] Deploy to staging and test
- [x] Deploy to production",2
85138130,2021-04-09 19:05:00.253,Store contact form submissions in db,"## Purpose

To help us better monitor trends in contact form submissions and make it possible to export into excel all the submissions over a specific time range. 


##  Vision/Outcome
- The objects in the collection should contain: createdAt, user id, user first name, user partner org (if it exists), user email, user type (student/volunteer), user banned status (true/false), topic of the submission, text of the submission
- We should have a new dashboard on retool which lets us track contact form submissions.. how many did we get over a specific time frame? what was the breakdown of topics? what % came from students vs volunteers? and a table that can be downloaded to excel with all of the data.",5
80967023,2021-03-15 21:27:05.537,Remove v2 compatibility from socket.io server,"After the v3 client upgrade has been released to prod, wait one day and then change server setting to
```
const io = require(""socket.io"")({
  allowEIO3: false
});
```

## Tasks

Smoke tests:

- [ ] Dashboard works, specifically the waiting sessions queue
- [ ] Volunteer can join session
- [ ] Chat works
- [ ] End a session ends the session for both users, when ended by student, or by volunteer",1
80966957,2021-03-15 21:25:34.883,Upgrade socket.io client to v3,"Update client library to v3 and test it against a deployment with a v3 server

## Tasks

Smoke tests:

- [ ] Dashboard works, specifically the waiting sessions queue
- [ ] Volunteer can join session
- [ ] Chat works
- [ ] End a session ends the session for both users, when ended by student, or by volunteer",1
80966316,2021-03-15 21:11:41.978,Upgrade socket.io server to v3,"https://socket.io/docs/v3/migrating-from-2-x-to-3-0/index.html

* We should be setting allowed origins
* We must be enabling the cookie
* Middlewares that we expect to always fire need to be explicitly added to any other namespaces
* socket.io-redis will need to be upgraded to 6.x.x
* join and leave can have callbacks removed
* code listening to Manager events (open, error, close, etc) need to be moved to socket.io.event
* Need to make sure that object ids for room names get changed to strings
* switch to ""socket.io-msgpack-parser""
* remove @types/socket.io 
* set
```
const io = require(""socket.io"")({
  allowEIO3: true // false by default
});
```
* set maxHttpBufferSize: 1e8 to a larger value

socket.io controls all socket connections except the whiteboard.

## Tasks

Smoke tests:

- [ ] Dashboard works, specifically the waiting sessions queue
- [ ] Volunteer can join session
- [ ] Chat works
- [ ] End a session ends the session for both users, when ended by student, or by volunteer",5
80828077,2021-03-12 20:11:25.057,Devise referral uri and parameters,"We need to determine what uri assistments should send the referral on and what the parameters should be.
* has to be a GET request
* parameters should be query parameters
* need to be able to transition from that url to a session for a logged in student
* need to be able to transition to sign-in, and then to a session using the parameters, when a student visits who is not logged in",0
102224000,2022-02-10 17:56:22.751,FRONTEND: favorited volunteers list in student coach page,"Update student profile view to display favorited volunteers

* create a new link in the sidebar to the coach page
* add a new route that renders the coach page view
* create small `FavoritedVolunteer` card component expecting to take the volunteer name, id, and number of past sessions with the student
  * include the [toggle favorite component](1005) that calls `POST /api/student/favorite-volunteer`
* retrieve paginated list of favorited volunteers from `GET /api/student/favorite-volunteers`
* within the coach view instantiate a card component for each of the favorited volunteers
* when a volunteer is unfavorited the list DOES NOT update - until the student leaves the view or refreshes they will have the opportunity to re-favorite

See Student Profile v1.3: https://www.figma.com/file/EaawhUyLG36EQDtJhKatzStS/WebApp-Redesign-2019?node-id=37%3A161

Note: You do not need to add the subjects under the total session amount that a student has had with the tutor

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [x] Coach page with favorited list renders
- [x] List paginations works
- [x] Unfavoriting a volunteer does not change the list until refresh",1
102223978,2022-02-10 17:55:31.929,FRONTEND: component to toggle volunteer favorite status,"Create component for favoriting a volunteer (see V1.3 [here](https://www.figma.com/file/EaawhUyLG36EQDtJhKatzStS/WebApp-Redesign-2019?node-id=37%3A161))

Component:
* boolean prop that is toggled
* can render a heart as a view for the component
* has different style states for when boolean prop is toggled

Encapsulated logic (moved to a new ticket): 
* when clicked on opens modal to confirm whether user wants to favorite/unfavorite volunteer
* hits `POST /api/student/favorite-volunteer` to toggle the volunteer favorite status in the backend
* on error pop up error modal
    * if error is that student has max favorites include that in the modal


## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",3
102223946,2022-02-10 17:55:01.238,BACKEND: endpoints to check if volunteer is favorited and retrieve list of favorited volunteers,"1. Create endpoint to check if the current student can favorite more volunteers
   * `GET /api/student/remaining-favorite-volunteers`
   * parse the student id from the request authenticated user
   * on `200` return integer counting number of favorite slots available
1. Create endpoint to check if a provided volunteer ID is favorited by the current student
   * `GET /api/student/favorite-volunteer/:volunteerId`
   * parse the student id from the request authenticated user to prevent possible abuse
   * on `200` return a boolean indicating if the volunteer is currently favorited or not
1. Create endpoint to retrieve paginated list of favorited volunteers of a given student
   * `GET /api/student/favorite-volunteers` with pagination page number on query param
   * parse the student id from the request authenticated user to prevent possible abuse
   * handler function must get paginated list of favorited volunteers and find total number of sessions with the student and volunteer
   * sort list by recency with which the student has had a session with the volunteer
   * returns something like

```typescript
type FavoriteVolunteer = {
  id: ObjectId,
  firstName: string,
  numSessions: number,
}

type FavoriteVolunteersResponseType = { body: FavoriteVolunteer[], isLastPage: boolean }
```

## Tasks
- [x] Update swagger docs
- [ ] Code review
- [x] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session",1
102223930,2022-02-10 17:54:34.011,BACKEND: endpoint update volunteer favorited status,"Create endpoint to update a volunteer in a student's set of favorited volunteers

* `POST /api/student/favorite-volunteer:volunteerId` with payload on `req.body` including a favorited boolean and an optional session id
* parse the student id from the request authenticated user to prevent possible abuse
* else if the student already has `FAVORITE_LIMIT` volunteers favorited then return an error code with a message
* on successful `200` return a boolean indicating if the volunteer is currently favorited or not
* Record a user action of `VOLUNTEER_FAVORITED` or `VOLUNTEER_UNFAVORITED` with the student id, volunteer id, and optional session id whenever the status changes

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Update swagger docs
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Hitting endpoint while logged in as student updates volunteer status
- [ ] User action is recorded on both favorite and unfavorite",2
102223880,2022-02-10 17:53:51.992,DATABASE: favorite volunteers data model,"Add `student_favorite_volunteers` table to the schema
```sql
CREATE TABLE student_favorite_volunteers (
    student_id uuid NOT NULL,
    volunteer_id uuid NOT NULL
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);
ALTER TABLE ONLY upchieve.student_favorite_volunteers
    ADD CONSTRAINT student_favorite_volunteers_student_id_fkey FOREIGN KEY (student_id) REFERENCES upchieve.user(id),
    ADD CONSTRAINT student_favorite_volunteers_volunteer_id_fkey FOREIGN KEY (volunteer_id) REFERENCES upchieve.users(id);
```

## Tasks
- [ ] Code review
- [ ] Staging schema update
- [ ] Merge to main
- [ ] Prod schema update",1
102174809,2022-02-09 23:19:59.221,FRONTEND: Session recap view,"* Create new call in NetworkService that calls `api/session/:sessionId/recap`
* Create a new view, `SessionRecapView`, in `src/views` for the session recap page
  * Calls the new NetworkService call in the previous bullet point
  * This view consists:
    * User information
    * Chat component (use the one in the admin chat but abstract it out to be used in both session recap and admin page)
    * Doc Editor component (conditionally rendered based on type of session - update the current DocEditor component to take a prop that is triggers a read only view)
       * Do not emit socket events or show toolbar in this read only view
    * Whiteboard component (conditionally rendered based on type of session)
* Include the new favoriting volunteer component created in #1005 to the Session Recap view for students only
* Create new path, `/sessions/:sessionId/recap`, in `src/router.js` that renders SessionRecapView

Design: https://www.figma.com/file/JPZ9LQZ8ytnvS07WqLZprx/Session-History%2F-Coaches%2FProfile?node-id=2%3A21584
- Whiteboard + Doc Editor follow 1.1 
- Rest of Design follow 1.2
- Web and Mobile Web (responsive version of web) only


## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Student recap view should match design specs",3
102174774,2022-02-09 23:19:08.926,BACKEND: Session recap endpoint and mock query,"* Create a new mock query, `getSessionRecap`, in `server/models/Sessions/queries` (or the respective file where Postgres queries are held) that returns the same projection of a session `getSessionHistory` (https://gitlab.com/upchieve/subway/-/issues/992) + quillDoc:
  * `subject`
  * `createdAt`
  * `timeTutored`
  * `volunteerFirstName`
  * `volunteerId`
  * `isFavorited`
  * `studentFirstName`
  * `studentId`
  * `id`
  * `quillDoc`
* Create a new endpoint `GET api/session/:sessionId/recap` which will call `getSessionRecap` and fetch the whiteboard if the session subject required one
* Create Postgres query and write tests for it
   * Add to the seed data to be able to quickly test this feature and for future testing purposes

Note: Once the Postgres migration is complete, the mock `getSessionRecap` query will be replaced with the actual Postgres query in https://gitlab.com/upchieve/subway/-/issues/997

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Hitting endpoint with Postman should return mock query results",2
102174753,2022-02-09 23:17:53.253,FRONTEND: Session history view,"* Create a NetworkService call to the server endpoint `api/session/history`. It should have a query param for a `page`
* Create a `SessionHistoryView` in `src/views` that will hold a paginated list of sessions. It should call the NetworkService function created in the previous bullet point. It'll retrieve mock data from https://gitlab.com/upchieve/subway/-/issues/992
* Create a new path, `/sessions/history`, in `src/router.js` that renders `SessionHistoryView`
* Create a linkable ""component"" (do not *need* to create a new component file for this since this will only be rendered to this view) that links to the session recap page, `/sessions/:sessionId/recap` for the session. This ""component"" requires the following info to be displayed:
  * Session Subject
  * Date and time of session
  * Duration of session **(uses timeTutored off of the session)**
  * First name of partner (if a student is viewing the session history page, show the volunteer's name and vice versa)
* Include the new favoriting volunteer component created in #1005 to the Session History view for students only

Design (Session History v2.1) https://www.figma.com/file/JPZ9LQZ8ytnvS07WqLZprx/Session-History%2F-Coaches%2FProfile?node-id=2%3A17816

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
102174743,2022-02-09 23:17:32.447,FRONTEND: Session history in student sidebar and feature flag,"* Create a feature flag called `session-history` in the Subway repo
* Add ""Session History"" to the student sidebar that links to `/sessions/history`
  * Should be underneath ""Dashboard"" in the sidebar
  * Wrap this in the `session-history` feature flag. Add the feature flag to the [feature flag store](https://gitlab.com/upchieve/subway/-/blob/main/src/store/modules/feature-flags.js#L51) and create a getter for it called `isSessionHistoryActive`
* Keep the feature flag off for production

See design (Session History v2.1 as example): https://www.figma.com/file/EaawhUyLG36EQDtJhKatzStS/WebApp-Redesign-2019?node-id=37%3A161

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Student should see ""Session History"" in sidebar",1
102174514,2022-02-09 23:06:14.637,BACKEND: Session history and recap Postgres query,"* Replace `getSessionHistory` with actual Postgres query
* Replace `getSessionRecap` with actual Postgres query


## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Students should be able to retrieve their actual session history",1
102174511,2022-02-09 23:05:50.025,BACKEND: Session history endpoint and mock query,"* Create a new mock query, `getSessionHistory`, in `server/models/Sessions/queries` (or the respective file where Postgres queries are held) that returns a list of the user's past sessions (remember to exclude any current sessions) with a projection of:
  * `subject`
  * `createdAt`
  * `timeTutored`
  * `volunteerFirstName`
  * `volunteerId`
  * `isFavorited`
  * `studentFirstName`
  * `studentId`
  * `id`
* `getSessionHistory` query should take in a user id, return a limited set to support pagination, and all sessions should have `timeTutored` > 0
* Create a new endpoint `GET api/session/history` to retrieve history of sessions that calls `getSessionHistory`, expects a page number as query param
  * This should retrieve the user's ID from `req.user`
* Create Postgres query and tests for it


Note: Once the Postgres migration is complete, the mock `getSessionHistory` query will be replaced with the actual Postgres query in https://gitlab.com/upchieve/subway/-/issues/993

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Hitting endpoint with Postman should return mock query results",3
101602889,2022-01-31 16:04:14.314,Backend: Fix broken reference objects,"Context of the issue: https://gitlab.com/upchieve/subway/-/issues/962#note_823802880

- This line of code https://gitlab.com/upchieve/subway/-/blob/main/server/services/VolunteerService.ts#L245 should be inside the if block with the line above it `UserActionCtrl.AccountActionCreator(volunteerId).accountApproved()`
- Dynamically build the `update` object https://gitlab.com/upchieve/subway/-/blob/main/server/services/VolunteerService.ts#L222 only if there are truthy values for the reference statuses
- Create a DB script to remove all broken references from volunteers


## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Volunteers should be able to add and delete references
- [x] References should be able to submit a reference form
- [x] Admins should be able to see pending volunteers
- [x] Admins should be able to approve or reject separate approval process steps and should not result in broken references for the volunteer",2
101484700,2022-01-28 18:21:30.047,Frontend: Fix closed whiteboard socket after connect-error,"See for context on the problem: https://gitlab.com/upchieve/subway/-/issues/983

Make the changes proposed in the ""Proposal"" section of this comment: 
https://gitlab.com/upchieve/subway/-/issues/983#note_825175160

- Remove `this.zwibblerCtx.stopSharing()` in https://gitlab.com/upchieve/subway/-/blob/main/src/views/SessionView/Whiteboard.vue#L661
- Remove the `isSessionConnectionAlive` watcher. We don't _need_ to call `joinSharedSession` https://gitlab.com/upchieve/subway/-/blob/main/src/views/SessionView/Whiteboard.vue#L751 since Zwibbler will attempt to reconnect to the whiteboard server (as long as we don't call `stopSharing`) and join the collaboration server on its own. Please validate this first with further testing on this behavior. If this cannot be removed, simply put an `await` before `joinSharedSession`. 
- Remove `this.zwibblerCtx.newDocument()` https://gitlab.com/upchieve/subway/-/blob/main/src/views/SessionView/Whiteboard.vue#L750, see docs for [newDocument()](https://zwibbler.com/docs/#newdocument)


## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session",2
101484466,2022-01-28 18:13:01.258,Fix document editor text issues,"The document editor has text issues because of race conditions with Redis. You can see more of the findings here https://gitlab.com/upchieve/subway/-/issues/938. 

There's currently a working draft that uses Redis lists https://gitlab.com/upchieve/subway/-/merge_requests/939, however discussion has not been finalized on using Redis transactions or Redis lists.


## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session",1
100265209,2022-01-07 16:50:41.381,FRONTEND: new banner copy and condition,"On frontend copy logic for display of original banner but read `UPF.partnerSchoolGatesQualified` instead

* use MR [!864](https://gitlab.com/upchieve/subway/-/merge_requests/864/diffs#93cf7a75f81c2ba33e2e20b9d3a85aa4d00eee53) as a template
* reuse the existing feature flag to gate whether banner is shown
* the copy of the existing banner can be defined by a ternary on which banner to show
* make the condition on displaying the banner be `date before 1/28 AND feature flag on`

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Old banner displays for non partner qualifying students
- [ ] New banner displays for partner school qualifying students",1
100265197,2022-01-07 16:50:19.286,BACKEND: migration script for partner school students,"Create backfill script on all student accounts made since 10/13/21

* check if UPF.gatesQualified || UPF.partnerSchoolGatesQualified is true
* if true pass
* else run `processPartnerSchoolGatesQualified` on student

Only run script once #979 is deployed

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod
- [ ] Run script against prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
100265183,2022-01-07 16:49:56.475,BACKEND: GatesStudyService for partner schools,"add `processPartnerSchoolGatesQualified` GatesStudyService listener to `student-created` event doing similar logic to existing gates check

* check if 9th or 10th grade
* check if school belongs to custom list in [google doc](https://docs.google.com/document/d/1bj5mFn8zgGS-tNMtf5qsZlhWP6n6ljCJi18tiqRo00s/edit)
  * parse list form config key
* add new product flag `partnerSchoolGatesQualified` and set that to true

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] New student with relevant partner school gets partner gates flag set to true",2
100159230,2022-01-05 16:45:55.259,BACKEND: Add IPWhois API Key,"We should add the IPWhois API key to config since we are no longer using the free version. We need to refactor so that the backend uses the key, and refactor any necessary frontend calls that go through the backend

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Ensure eligibility IP checks still work",1
100039439,2022-01-03 18:13:46.595,Bug: Only follow-up text being received by a volunteer,"From Academic Coach Slack:

Addison Doherty  11:18 PM
I’m not sure if this is happening to anyone else, but recently I’ve only ever been texted with the “heads up” text, I haven’t received any texts saying that a student needs help beforehand![Image_from_iOS__2_](/uploads/15ceb282d45e624cce10e4c6636e0a65/Image_from_iOS__2_.png)

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",3
99284192,2021-12-17 19:51:21.625,BACKEND: Add partner students helped column to analytics report for AT&T and Verizon,"The AT&T / Verizon volunteer reports should have new columns/metrics added (see the things shaded in yellow [here](https://docs.google.com/spreadsheets/d/1KYwNIRtmqakJ_NX0TrWlFMG3Mr1-YPCJ1FioXjp9akw/edit#gid=833012707)). Essentially:

* Sumary: total unique AT&T/Verizon students helped by AT&T/Verizon volunteers
* Per volunteer: total sessions and tutoring hours completed with AT&T/Verizon students
* Per volunteer: total unique AT&T/Verizon students helped
* NOTE: we do not care if the sessions used to compute the stats above we matched due to the new priority filters - just that the volunteer and student came from the same org

Up to your discretion if these columns are part of a new report just for AT&T/Verizon or if they are added to the existing analytics report. If you do make a new report you must also add a button to the frontend to request to generate that report.

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Admins can generate report",1
99284138,2021-12-17 19:50:52.032,BACKEND: add student/volunteer partner org check to notifyVolunteer,"`TwilioService.notifyVolunteer` should lookup the session's student partner org (and school) to see if it's AT&T or one that belongs to the verizon sponsor org. If so, change the `volunteerPriority` array of priority filters such that the 1st and 3rd entries reflect the below for the student's respective affiliation:
```
1. volunteers with <AT&T>/<Verizon> partner org - not notified in the last 3 days AND they don’t have ""high level subjects""

2. volunteers with <AT&T>/<Verizon> partner org - not notified in the last 24 hours AND they don’t have ""high level subjects""
```

Also when setting `messageText` check the volunteer's partner org to set the content to reflect the below for the student's/volunteer's respective affiliation:
```
""Hi {volunteerName}, a <Verizon>/<AT&T> student needs help in {subjectName} on UPchieve!""
```


## Tasks
- [ ] Code review
- [x] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Correct texts are going out
  - [x] Partner volunteer gets their message ONLY for their partner student sessions
  - Make the check for partner org that kicks off the custom behavior capable of accepting different partner org names/strings for easy testing or expansion",3
98429812,2021-12-03 18:20:52.999,Sign Up Source: CLEAN-UP: remove discovery-source feature flag and dead paths,"Remove all feature flags for ` discovery-source` and related dead code paths.

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Partner/Open students can still sign up
- [ ] Manually approved students can still sign up",1
98429567,2021-12-03 18:13:48.987,FRONTEND: ask all open students and appealed partner students for discovery source,"* add question to open student form signup view
* add `showDiscoverySource` check for partner student sign up view (same pattern as other org options checking manifest prop)
  * gate's display of student source question
* hard code question options
  * randomize order of questions on initialization (mount, definition of constant at runtime, etc)
* send response to question as part of registration payload of both
Feature flag display of question

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Open/Partner student can sign up
- [ ] Manually approved student can sign up",2
98429524,2021-12-03 18:13:19.640,BACKEND: updatestudent registration routes to accept discoverySource field,"* make open student registration route REQUIRE `discoverySource` in payload
  * save field to student document at creation
  * feature flag this change so this can go out independent of frontend
* make partner student registration route OPTIONALLY take `discoverySource` in payload
  * save field to student document IFF studentPartnerOrg === customManualOrg (`eligibility-appeal`)
* update relevant route tests
* update swagger doc

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
98429505,2021-12-03 18:12:55.920,BACKEND: add discoverySource field to student model,"store `discoverySource` field on student document (student profile in postgres) - name up for debate
* maps to enum of question options
* nullable for legacy compatibility

No need to backfill since field is optional

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
98277054,2021-12-01 21:32:24.463,HOTFIX: gleap not loaded causing sessions to not be created or joined in rare occasions,"We're having students and volunteers fail to join sessions because Gleap is not loaded into the window, and we're catching all the errors that could potentially happen in starting a session at once and throwing up an alert. There's more refactoring that we should do on that function, but at the least this will allow people to load/join the session, we just won't get the session id in Gleap.

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
98120115,2021-11-29 18:27:40.468,Refactor Twilio/NotifyTutor and notification job to send additional rounds of notifications,"Refactor notification process to allow the chatbot to send additional rounds of notifications.

* Doesn't notify people already notified for a given session
* Should be able to call for a given session id regardless of how many times it has been called already
  * should be able to assume that it's been 10 minutes since the last time it was called
  * test timing issues of kicking off one round before the previous one ends
  * we might need to add the ability to check for last time notifications went out
* Follows the same timing and number of volunteers to notify in each round
* Keep the same entry point: notifyTutors job

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
97834008,2021-11-23 19:45:37.960,Algebra Two Subject: CLEAN-UP: clean up feature flagged code,"Remove all feature flags for `algebra-two-launch` and related dead code paths. Also remove base `algebra` from `MATH_CERTS` and TrainingCtrl num questions

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
97833967,2021-11-23 19:44:12.345,MIGRATE: clean-up script to run on 3/1/22,"Write script to: 
  - delete `algebra` certification from ALL volunteers
  - delete `algebraTwo-temporary` subject from all volunteer
  - delete `algebra` questions from the questions collection


## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod
- [ ] Run against prod on 3/1/22 - add to the cron so that is executed on this day

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Volunteers can still be certified in algebraOne and Two
- [x] Volunteers can still pick up session in algebraOne and Two
- [x] Volunteers still see AlgebraOne and Two in unlocked subjects",1
97833885,2021-11-23 19:41:17.256,MIGRATE: update old algebra questions -> algebra1,"Write script to clone existing algebra quiz question with category = `algebraOne`

Purpose: Cloning so that the existing quizzes do not break

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
97833862,2021-11-23 19:41:00.322,MIGRATE: update algebra 2 temporary subject,"Goal:

Volunteers who have only completed Algebra as their highest level of math will have to take a separate Algebra 2 quiz to remain certified in `algebraTwo`. These volunteers will have temporary eligibility to help students with Algebra 2 requests until 03/01. Volunteers who have completed levels of math that unlock Algebra 2 [click here for subjects that unlock algebraTwo](https://gitlab.com/upchieve/subway/-/blob/main/server/constants/subjects.ts#L114) (Calc BC, Calc AB, precalculus) will not have their `algebraTwo` moved to temporary. It's important to note that, currently, passing an Algebra quiz unlocks both `algebraOne` and `algebraTwo` for volunteers. This data is reflected in one certification on the Volunteer schema, `certifications.algebra`. We have separated out the algebra certifications to `certifications.algebraOne` and `certifications.algebraTwo` in https://gitlab.com/upchieve/subway/-/merge_requests/898. Volunteers who were previously certified in `certifications.algebra` should now be certified in `certifications.algebraOne`

Write migration script to do this:
- for all volunteers with `algebraTwo` in subjects array
  - if they have calc/precalc in their subjects array -> do nothing
  - else -> replace `algebraTwo` with `algebraTwo-temporary` in their subjects array
  - if they had passed the `algebra` quiz (`certifications.algebra.passed` === true) copy the `certifications.algebra` data to `certifications.algebraOne`

## Tasks
- [ ] Code review
- [ ] Run script against staging
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod
- [ ] Run script against prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Volunteers can still pick up algebra2 requests
- [x] Volunteers can still take algebra cert",1
97832751,2021-11-23 19:17:43.604,BACKEND: update math certs/subjects constants,"- Add `algebra1` and `algebra2` to `MATH_CERTS` and `MATH_SUBJECTS` constants
  - update SUBJECTS_UNLOCKED accordingly (put new constant behind feature flag)
- add to object `numQuestions` in `TrainingCtrl` for `algebraOne` and `algebraTwo`
- change uses of `MATH_CERTS.ALGEBRA` to `MATH_CERTS.ALGEBRA_ONE`

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
97832466,2021-11-23 19:09:10.467,FRONTEND: update algebra -> algebra1/2,"* update `TrainingView.vue` list of quizzes to include algebra 1 and 2
  - include the new quizzes under a feature flag that replaces the old algebra quiz
* in `ReviewMaterialsView.vue` split algebra into algebraOne and algebraTwo
* in `@utils/topics.js` add `algebraTwo-temporary` topic + displayname for showing temporary cert in volunteer profile view
  - make temporary cert name just `Algebra2` under feature flag to be changed to `Algebra 2 Temporary` when we launch
  * in StudentDashboard/SubjectSelection hide the temporary subject by adding to `temporarilyHiddenSubjects`
  - include the new topic under a feature flag
- delete line 135 in `Admin/VolunteerCoverage`
- in volunteer dashboard filter incoming list of unmatched sessions to allow algebra2 to be shown to volunteers with `algebraTwo-temporary` subject

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Volunteer training view is correct
- [ ] Volunteer profile unlocked subjects is correct
- [ ] Student math subject selection is correct
- [ ] Algebra2 subject is shown to volunteer with temporary cert",2
97832459,2021-11-23 19:08:41.662,FRONTEND: create algebra 2 app header,"- create app header for Algebra 2 notification with link to training page
  - in volunteer dashboard view `created` hook check if volunteer meets criteria to see algebra 2 header and set the new header via the header vuex state
    - criteria: Volunteers who are NOT certified in precalculus, calculus 1 or calculus 2 but ARE certified in Pre-algebra, Algebra 1, Geometry, Trigonometry, Statistics, chemistry, physics 1 or physics 2
  - feature flag showing the header

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Qualified volunteer sees header in dashboard
  - they DO NOT see header while session is active",1
97832036,2021-11-23 18:57:36.953,BACKEND: add algebraOne and algebraTwo certification objects to volunteers,"Add `algebraOne` and `algebraTwo` certification objects the volunteer model schema and write a migration script to add empty certifications to every volunteer. Also update the init seeds to match this new shape. Also udate the buildCertifications and buildSession test utilities to match. Finally update `notifyVolunteer` subjects filter to match `algebraTwo `against `algebraTwo `or `algebraTwo-Temporary`

## Tasks
- [ ] Code review
- [ ] Run script against staging
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod
- [ ] Run script against prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
97383402,2021-11-15 20:24:51.670,Modernize chat box CSS,"Change the entire chatbox element tree CSS to use modern CSS techniques like flexbox instead of stacking specific pixel padding/heights.

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Student/volunteer chat looks correct on Safari",5
97379940,2021-11-15 19:16:30.059,SPIKE: why does Safari not render chat correctly,"use lambdatest to simulate safari with specific version (<12, possibly up to 14)

## Tasks
- [ ] Investigate bug
- [ ] Schedule tech meeting to report findings",2
97373834,2021-11-15 17:07:50.697,add HS name to student feedback retool dashboard,"## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",0
97267923,2021-11-12 23:53:28.730,Banned students aren't receiving appropriate emails,"We have it set where we don't send emails to banned students, so they don't get emails letting them know they're banned. Need to fix this.

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
97201162,2021-11-11 22:29:14.861,Add user identification and custom event data,"Identify the user with UPchieve data when reporting to Gleap
https://docs.gleap.io/javascript/user-identity
https://docs.gleap.io/javascript/custom-data

Do this in `src/components/app/index` where we set Sentry and Posthog user data (line 222).

## Waiting on
- [ ] Exact identity fields we want to send to Gleap
- [ ] Exact custom data fields we want to send with a feedback

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Relevant UPchieve user data is show in Gleap dashboard",1
97127634,2021-11-10 19:36:14.627,Work through Gleap Design,"Via telepresence work with Grace directly to go through all pages/views and validate the bug report button looks good. If custom behavior is required for a page implement it via the gleap SDK

## Tasks
- [x] Grace review
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session",3
97127497,2021-11-10 19:33:30.893,Add Gleap SDK to index.html,"https://docs.gleap.io/javascript#installation

Integrate API key via string interpolation from config

## Tasks
- [x] Include gleap in security settings
- [x] Add gleap API key to doppler
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Default Gleap settings show up across app
- [x] Everything still works on refresh/VPN (international)",1
97124338,2021-11-10 18:19:49.216,Use CSRF token in frontend,"On app router start hit `/api/csrftoken` to get a token to store in memory for the life of the app. Modify the vue router to check for token existence and include the token as a header before every request to the app using interceptors (use this [guide](https://github.com/pagekit/vue-resource/blob/develop/docs/http.md#request-processing). 

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Refreshing app doesn't cause problems
- [ ] Sign up works",2
97124323,2021-11-10 18:19:07.898,Update retool API calls to use CSRF token,"Add a retool admin API auth step to get the csrf token from the new endpoint, store it in some variable, and add it to the request headers (basically scripting out what the app does)

## Tasks
- [ ] Add extra auth steps in admin API resource to get csrf token
- [ ] Get work reviewed by another engineer

## Smoke tests
- [ ] Retool modules that use API requests still work",2
97124308,2021-11-10 18:18:18.493,Add CSURF token endpoint,"Use [csurf](https://expressjs.com/en/resources/middleware/csurf.html) to generate a token per cookie via an `/api/csrftoken` endpoint. Include the csurf middleware on all API routes except for swagger and index.html

## Tasks
- [ ] All router tests pass
- [ ] Code review
- [ ] Merge to main",1
96959831,2021-11-08 18:33:00.440,Query student usage report by sponsor org in admin panel,"In `AdminStudentReportsView` include a new search filter to pull report by sponsor org. Include sponsor org in report request payload. Also be sure to saturate list of sponsor orgs on view mount using #921 

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Can pull sponsor org usage report
- [x] Full list of sponsor orgs show up in filter option
- [x] Pull regular usage reports before changes and validate your changes didn't affect that",2
96959818,2021-11-08 18:32:37.764,Get all sponsor orgs endpoint,"Create an endpoint similar to `auth/partner/volunteer-partners` that returns the manifests for all sponsor orgs. Up to discretion if needs to be part of auth service or if route just returns in memory sponsor manifest

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Endpoint can be hit by only admins and returns sponsor manifest",1
96959804,2021-11-08 18:32:18.292,Group by sponsor in student usage report,"StudentUsageReport payload should now accept a sponsor org string in payload and filter down students to only those associated with the sponsor via school or partner org.

Output report should include a column for the student HS name and student partner org (if not exist put a `-`).

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Locally (or staging) generated report is of correct shape
  - ensure there is at least 1 student who is associated with partner org and 1 that is not",2
96959792,2021-11-08 18:31:50.734,Parse sponsor org manifest,"Create a function to parse sponsor org manifest environment key at server start up. Output should be something like
```
sponsor: {
  schools: Types.ObjectId[],  // stored as objectID strings to school objects
  partnerOrgs: string[],  // studentPartnerOrg keys from that manifest
  displayName: string
}
```

## Tasks
- [ ] Code review
- [ ] Create staging doppler manifest
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Create prod doppler manifest
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Sponsor org manifest object is correct shape in memory",2
96288590,2021-10-28 00:51:25.318,Student welcome email changes,"The student welcome emails have been updated in SendGrid and their current names and respective categories in our codebase no longer reflect their names in SendGrid.

For example `sendStudentWelcomeEmail` in `/server/services/MailService/index` should be called something more along the lines of `sentStudentOnboardingWelcomeEmail`

The changes that were made in SendGrid
- ""Student Welcome Email"" -> ""Student Onboarding Email 1 - Welcome""
- ""Student Welcome Email - Student Use Cases"" -> ""Student Onboarding Email 2 - How It Works""
- ""Student Welcome Email - Meet Our Volunteers"" -> ""Student Onboarding Email 3 - Meet Our Volunteers""
- ""Student Welcome Email - Independent Learning"" -> ""Student Onboarding Email 4 - Mission""
- ""Student Welcome Email - Goal Setting"" -> ""Student Onboarding Email 5 - Survey""


`categories` that need to be changed:

- ""student welcome email"" -> ""Student Onboarding Email 1 - Welcome""
- ""student welcome email - student use cases"" -> ""Student Onboarding Email 2 - How It Works""
- ""student welcome email - meet our volunteers"" -> ""Student Onboarding Email 3 - Meet Our Volunteers""
- ""student welcome email - independent learning"" -> ""Student Onboarding Email 4 - Mission""
- ""student welcome email - goal setting"" -> ""Student Onboarding Email 5 - Survey""

All of the welcome emails should use the `students` upchieve email as the sender

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
96278698,2021-10-27 19:31:36.436,Investigate Intermittent issues with verification code,"Hi, I just created a student account, but the verification section on web had some glitches.
When I tried to verify my email the first time, it told me “not authenticated” and when I tried pressing the verify button again, my “session expired” and logged me out. I tried logging in again, and it took awhile for me to get a verification code. Once I got my code after waiting for about ~3 mins? I entered the code and pressed verify my account, and I get the “not authenticated” alert again, then shortly the session expired and I am logged out again. So I log back in again and this time I type in my verification code, and nothing happens.
So I moved onto my mobile app to finish my verification. this time, no glitch, and i got my verification email instantly and I was able to verify.
But this might explain some of the drop off thats happening between create account and verify.

![Screen_Shot_2021-10-27_at_2.50.03_PM](/uploads/2196b4db48ec732ba2d41e11d89c821d/Screen_Shot_2021-10-27_at_2.50.03_PM.png)

![Screen_Shot_2021-10-27_at_2.52.39_PM](/uploads/50b7c61bf2fd80cdb418a40564d4615e/Screen_Shot_2021-10-27_at_2.52.39_PM.png)

Aly Murray  1:17 PM
this was on production, is that correct Grace?

Grace Kim:trophy:  1:17 PM
yes

Aly Murray  1:20 PM
there’s more students than I expected that are craetigna ccounts but not completing verification so I’m definitely worried about this now!

but it doesnt look like it necessarily started beginning of last week, so not necessarily craeted by the fix to russian attack

can we think of any other changes we might have made recently that would have impacted verification? :thinking_face:

1:22
(for student sonly)
1:22
its significantly higher for volunteers actually

## Tasks
- [ ] Investigate/reproduce problem
- [ ] Schedule knowledge share with tech team",2
94969411,2021-10-06 15:04:35.189,Add currentGrade to ineligiblestudents model,"No need to backfill

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
94630063,2021-09-30 16:37:47.618,App graceful shutdown,"Add a graceful shutdown handler to `app.ts` or `main.ts` following [this pattern](https://hackernoon.com/graceful-shutdown-in-nodejs-2f8f59d1c357). Include a `setTimeout(5 seconds)` before disconnecting from mongo/closing the process so events can finish.

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Events finish running before process quits
  - connect via telepresence
  - make fake events that set timeouts and log distinct messages
  - log before entering graceful shutdown waiting period and again after right before shutdown
  - end a session and quickly close the server manually
  - ensure event logs are done before shutdown message",1
94630047,2021-09-30 16:37:19.987,Remove Merkury,"Remove the Merkury package and replace it's use with Node event emitter

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Events (end session) still work",1
94465534,2021-09-28 16:20:52.146,Create reusable toast component,"Create a re-usable toast component with full testing with [storybook](https://gitlab.com/upchieve/subway/-/wikis/Writing-components-with-Storybook).

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Approval from grace
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
94465189,2021-09-28 16:12:55.588,Implement local storage key and browser toast,"If a user visits the site from safari desktop check their local storage for a key representing whether or not we've shown them a toast recommending them to use chrome/firefox. If the key is not set then show them the toast. This should work from ANYWHERE in the app (not logged in, sign up flow, dashboard, etc)

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Toast appears only on safari desktop
- [ ] Toast does not appear after being seen once
- [ ] Toast appears anywhere in app
  - dashboard
  - session
  - sign up
  - login page
  - profile",2
94396738,2021-09-27 17:18:16.104,Update unleash-client and move frontend to unleash-proxy-client,"Update unleash-client npm package to latest (3.10.1) and install unleash-proxy-client (1.5.2). Update frontend code to utilize unleash-proxy-client instead of unleash-client (basically just initializing the client). Find the proxy address in the pulumi code.

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod
- [x] Make almanac/wiki page for feature flagging

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Verify the existing feature flags are still working (front and back)",1
94201608,2021-09-23 15:05:13.903,Createjob to send gates invite email,"Write email job that can be scheduled for 2pm eastern the following day that sends the gates invite email given a day and student. Reach out the programs for the sendgrid template id

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Email is sent the next day at 2pm eastern",2
94068010,2021-09-21 22:18:14.293,Refactor reportSession to have side effects be part of the metric trigger actions,"Refactor `SessionService.processReportSessionMetric` to use the metric processor pattern from `USMService/index` by having reportSession emit `session-reported`, registering a metrics preparation step as listener on `session-reported`, emitting `reported-processors-ready`, registering the opName factory functions on `reported-processors-ready`.

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Reported sessions have their metrics tick up
  - check if works when session is reported AFTER it ends",2
94067088,2021-09-21 21:41:37.570,Refactor EndSession to add past sessionto users instead of offloading to event,"Waiting until we compute session metrics to add the past-session makes it difficult to rely on the `session-ended` event for a reliable view into the session/users. If we think of adding the past session as an atomic operation that must happen when a session ends then it makes sense to just do it sequentially not as a separate, asynchronous event.

Be sure to update any `past-session-added` listeners to listen to new parent events with the correct payload. Update the [event graph](https://lucid.app/lucidchart/627f889e-6edc-49a4-857a-e8a5db4daf95/edit?shared=true&page=0_0#) and push to j-max repo.

## Tasks
- [ ] Code review
- [x] Staging smoke tests
- [ ] Merge to main
- [ ] Update event graph
- [ ] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Past session gets added correctly
- [x] Past session side effects are completed correctly",2
94066446,2021-09-21 21:17:32.150,Make retool dashboard for qualified students,"Table to see which how many sessions study qualified students do each week
  - Full name
  - email
  - first session date
  - column per week and whether they had a session that week

## Tasks
- [ ] Review from programs",2
94066169,2021-09-21 21:08:46.530,Add Gates modal to student dashboard,"Re-use the pattern from student dashboard first session congrats modal for deciding how to show the modal/compose the components in the view. Coordinate with Grace to confirm current modal design is fine. Copy is in requirements doc. Will need a network call to check/update state of `hasSeenGatesModal` product flag endpoint.

Put this modal behind a feature flag for `gates-study`

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Pop up modal shows when appropriate",2
94066160,2021-09-21 21:08:27.982,Endpoint to update hasSeenGatesModal product flag,"Implement in a new `ProductFlagsRouter` with post endpoint `api/v2/flags/gates` that reads the user id from `req.user` (requires authentication)

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Can manually hit endpoint with authenticated cookie",1
94066148,2021-09-21 21:08:08.595,update end session logic to set GatesQualified on product flag object,"Add an event listener to `session-ended` that checks if the student qualifies for the gates survey and sets that flag on their ProductFlag object

Implement in a new `GatesStudyService` following the [architecture ](https://gitlab.com/upchieve/subway/-/wikis/Backend-Architecture)

Create a feature flag for the gates study

Follow the gates study scenarios written here: https://gitlab.com/upchieve/whoop-whoop/-/blob/main/tests/gates-study/qualification.feature

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] gates qualified function properly run when session-ended",1
94065717,2021-09-21 20:53:35.673,Create UserProductFlags repo and backfill,"Model should be of shape as follows. Also include getter/create functions to be used by app/backfill script. Backfill objects to all users; can default fields to false.
```
{
  gatesQualified: Boolean,
}
```

## Tasks
- [ ] Code review
- [ ] Run backfill script against staging
- [ ] Merge to main
- [ ] Deploy to prod
- [ ] Run backfill script against prod",2
94065665,2021-09-21 20:51:16.420,Frontend: add current grade form to open student sign up view,"Follow wireframe (#884 ) and include grade in registration payload. Options for grade are 9-12 and other

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Sign up an open student with grade",1
94065660,2021-09-21 20:50:56.110,Update registerOpenStudent route to require a grade parameter,"Save the grade as part of the new student object. Only do this for the open student sign up. Validate is 9-12 or other

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Manually hit the endpoint with a grade set",1
94065654,2021-09-21 20:50:29.462,Add currentGrade to student model,"No need to backfill

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
94065531,2021-09-21 20:46:53.226,backend: eligibility/school/partner endpoint  to update partner status,"Follow pattern of school/approval to update this boolean field. Also update swagger doc

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Can hit endpoint manually to change partner status of school (postman replace cookie with admin account)",1
94065521,2021-09-21 20:46:26.823,Frontend: toggle switch for school.isPartner to AdminSchoolDetail,"Will need to make network call when toggling switch to new endpoint (#875). Reuse pattern from the approved status toggler

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Toggle makes network call",1
94065344,2021-09-21 20:41:08.908,Add isPartner to school model and backfill,"Boolean field. Backfill script should set field to false for ALL documents

## Tasks
- [ ] Code review
- [ ] Run script against staging
- [ ] Merge to main
- [ ] Run script against prod",1
93595176,2021-09-13 19:29:25.310,ReportService changes - Usage and Session Report,"Bug in the usage report:

Students who do not have an `approvedHighschool` do not show up on the usage report. The [$unwind stage here](https://gitlab.com/upchieve/subway/-/blob/85a44e19401ee90df1cdeb78c873523c791d3b76/server/services/ReportService.ts#L493) removes the document if the provided path, `highschool`, in our case, is null, missing, or an empty array. 

Possible steps for a solution:
1. set `preserveNullAndEmptyArrays` to `true` in the `$unwind` stage
2. remove the subsequent `match` stage so that we can match documents that do not have a high school 
3. In the projection stage, add the high school name using a `$cond` see https://docs.mongodb.com/manual/reference/operator/aggregation/cond/

-----

There are also additional changes that need to be made to the usage and session report that mainly revolve around inconsistency with date formats. Since we're now running some of these reports locally, we need to make sure that we are consistently pulling the correct data for these reports

TODO:
- Make necessary changes to the reports so the data is pulled at a consistent date range regardless of local machine timezone
- This [snippet of code](https://gitlab.com/upchieve/subway/-/blob/85a44e19401ee90df1cdeb78c873523c791d3b76/server/services/ReportService.ts#L340) adds a day to `sessionRangeTo` and similarly, does it to `joinedBefore`. The behavior of the date ranges should be startDate - endDate (not inclusive). This includes making any necessary updates to the date values that are sent from the client to ensure that the reports are generating correctly with the proper date values


## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
93211068,2021-09-06 19:29:30.884,Set log level to Error in production,Logs in prod are super noisy and it's hard to easily find errors in the noise. We should set log level for the pino logger in prod to error.,1
92824952,2021-08-30 20:04:22.967,Change undefined hours tutored to show 0 instead of --,"![image](/uploads/7d3b5eea61baa678ad191d110b2b8130/image.png) that's a nono

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Volunteer dashboard shows 0 instead of --",0
92812989,2021-08-30 17:09:56.937,Bug: the banner for not making a session for 5 more minutes is broken,"The object interface for this banner was changed when we made the banned student banner. Need to fix the interface so that this shows up again.

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] All banners appear at correct time",1
92812925,2021-08-30 17:08:48.814,Bug: notify tutors resend doesn’t work if there’s less than 15 notifications,"If we are resending notifications because 6 minutes has passed, but we haven’t notified 15 people, then we are trying to look up an undefined notification and it fails. We need to reference the number of unique volunteers we have notified rather than the hardcoded value of 15.

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session",1
92665795,2021-08-26 21:34:37.983,Student referral signup is broken,"When a referred student enters their information on /sign-up/student, the Continue button does nothing. We have no new referred signups after April 8th, 2021, so a commit that got deployed around then is probably the culprit.

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Student referral sign up works",2
92658364,2021-08-26 18:24:15.497,Fix backend tests so they complete in CI,"## Goals
1. Fix the memory leak so the full test suite actually finishes
  - try to remove the force exit and instead detect open handles
  - make sure individual test suites close themselves
2. Parallelize the tests so the memory usage is spread out (and they run faster)
  - make sure tests don't READ or WRITE anything in the db besides what they instantiated

If the issue title can be accomplished with just #1 then we're good otherwise (or if you have more time) try 2

## Tasks
- [ ] Code review
- [ ] Merge to main

## Smoke test
- [ ] CI test runners complete and pass",5
92586419,2021-08-25 16:59:00.745,Determine which missing zwibbler handlers are needed,"The [zwibbler protocol](https://docs.google.com/document/d/1X3_fzFqPUzTbPqF2GrYlSveWuv_L-xX7Cc69j13i6PY/edit) specifies many different message types that we have no implemented and ignore. We could have even implemented handlers incorrectly and need to check this logic

Produce a summary document outlining what the message types are and the status of our current handlers

## Tasks
- [ ] Summary document
- [ ] Review with tech team",2
92584844,2021-08-25 16:25:15.245,Complete and test Websockt PubSub implementation,"Check out MR !807 for the first draft implementation. Complete it's prod-ready implementation via code reviews and deploy to all staging environments to smoke test as below.

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Usual Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use all whiteboard tools
  - [ ] upload photo
  - [ ] change pen/color
  - [ ] write text
  - [ ] shapes

## Special smoke tests
- Deploy 2 copies
  - [ ] create 2 sessions with different student/volunteer (main staging)
    - Student/volunteer can use all whiteboard tools
  - [ ] student connects to fern.upchieve, volunteer to trey.upchieve
    - Student/volunteer can use all whiteboard tools
  - [ ] Kill pod while in session and bring back up
    - Student/volunteer can reconnect to whiteboard (might require some refreshes)",3
92526556,2021-08-24 21:04:07.112,Convert backend to strict typescript,"We are going to all work collaboratively on a single feature branch cut from main head at start time. We'll work on a single working copy via pair programming and multi-user text editors. Once a noticeable chunk of progress has been made on the conversion we'll commit the single working copy to the branch and continue working. Once we reach 0 errors we can merge the branch to main WITHOUT SQUASHING.

As we develop we'll have multiple pairs of eyes on every change and can turn off strict mode to run tests to ensure no bugs are introduced.

## Tasks
- [x] 0 typescript errors
- [x] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] all of them",13
92287055,2021-08-19 17:18:14.534,Change final feedback question copy,"The feedback question on both student and volunteer post-session survey should be updated to the following copy with the email hyperlinked to app.upchieve.org:
```
Question text: Do you have any other feedback you’d like to share with UPchieve?
Help text: This can be about the website, about your coach, about the services/features UPchieve provides, about any technical issues you encountered, etc. We read every single comment, but if you need to connect with UPchieve staff about a question or concern please email us directly. 
```

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",0
92286874,2021-08-19 17:11:28.254,Add reporting data to session review views,"For reported sessions we want to see the report reason and report message in the session review view

Check out `src/views/Admin/AdminSessionDetail.vue`. The hydrated session includes necessary reporting data on the object. There is no exact copy for formatting so up to your discretion.

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Reported session have report message and reason shown",2
92049402,2021-08-16 16:01:01.592,Refactor endSession/saveFeedback to event architecture,"The first step to moving to the new event based architecture is to refactor `SessionService.endSession` and `FeedbackService.saveFeedback` to emit events that a session/feedback has been saved.

endSession especially needs much of it's internal logic refactored to move side effects into subroutines registered as listeners for the `session-ended` event.

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Ending a session still produces the same result and side effects
- [ ] Saving a feedback still produces the same result and side effects",3
92048423,2021-08-16 15:40:18.258,SPIKE: investigate registering eventlisteners,"With our new event based architecture we need to confirm that registering listeners within services actually works. Otherwise we may need to register listeners at the root app level before services get created.

## Tasks
- [ ] Code share with tech team
- [ ] Staging smoke tests",2
92048372,2021-08-16 15:39:26.460,Create UserSessionMetricsService,"The UserSessionMetrics service should expose 2 core functions:
1. takes a session and updates the metrics objects for any involved users
2. takes a user and computes their historical metrics


~~Both these functions are ideally idempotent~~

Both functions will need a way to fill `MetricData` for each session.

The first function is attached to an event that a session has ended and should somehow be on a delay (3 minutes) to allow time for feedback forms to have been submitted

The second function is run by a script to backfill session metrics. The script should have a downgrade function to delete all USMs so we can retry if anything goes wrong

Also need to remove existing flagging logic to avoid double flagging

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Service computes metrics correctly",3
92048356,2021-08-16 15:38:59.023,Create metric events and corresponding actions/conditions,"Create a set of `MetricEvents` objects with `condition` and `action` methods. The condition method reads a UserSessionMetrics object and determines whether or not the event applies and the action method should be called. The action method executes any consequences of the event such as sending an email. The event conditions/actions should correspond to the epic's rules/examples.

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] MetricEvent conditions/actionsm atch rules/examples for epic",2
92048344,2021-08-16 15:38:30.179,Backfill UserSessionMetrics,"Write a script that backfills all users' UserSessionMetrics objects using the new service. The script is ideally idempotent and includes a downgrade function

## Tasks
- [ ] Code review
- [ ] Merge to main
- [ ] Deploy to prod
- [ ] Run backfill script

## Smoke tests
- [ ] Script creates correct session metrics objects for all users",1
92048291,2021-08-16 15:38:16.386,Create UserSessionMetrics type,"Create a `UserSessionMetrics` model that tracks basic session metrics like has the user been ghosted, have they been reported, session ratings, etc. Exact fields are up to discretion so long as they fulfill needs of epic rules/examples. Model is metrics aggregator so we can easily add any missing metrics in the future.

## Tasks
- [x] Code review
- [x] Merge to main",1
91885739,2021-08-12 16:28:41.961,Update sessions to review filter,"Include the new `session.toReview` and `session.reviewed` fields in the sessionToReview filtering and remove the old checks for volunteer/student reviewed.

Update frontend where old fields are searched/set and collapse that code to just the 'reviewed'

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Properly flagged session still show up in session review",2
91885732,2021-08-12 16:28:25.973,Update Session model and backfill,"Add `session.toReview` and `session.reviewed` to the session schema and backfill session objects in DB to have these fields. Set the `toReview` field to true if `session.reviewedStudent` or `session.reviewedVolunteer` are false for sessions from the past 30 days otherwise always false . Set `reviewed` to true if either was true otherwise always false.

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod
- [ ] Run backfill script

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
91885396,2021-08-12 16:19:20.137,Create flagging service to replace current flag functions,"Rip out all flagging code from FeedbackService and SessionService/Utils ~~to create a new FlaggingService. This service should handle all flagging logic and determining when a session should be included in session review. Invoke the new service in the end session and save feedback code.~~

~~Code that checks flags can be implemented something like below. The `getPopulatedSession` function will need to return a an object that meets the spec of the `PopulatedSession` interface as defined by ticket #832 
NOTE: you can optimize the flag filters by partitioning out session flags vs feedback flags so they don't get double checked~~
```
function checkFlags(sessionId) {
  session = getPopulatedSession(sessionId)
  flags = []
  review = false
  for (flag in ALL_FLAGS) {
    if (flag.qualifies(session)) {
      flags.push(flag)
      if (flag.toReview(session)) review = true
    }
  }
}
session.updateFlags(Array.map(flag => flag.key))
session.update({ toReview })
```

## Deployment
Hold off on deploying until the frontend filter changes (#835) is completed. Merge that work onto this branch and deploy them all at once

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Completed sessions get flagged correctly",3
91885141,2021-08-12 16:15:06.297,Create Flag objects for all new flags,"Create flag objects that look like the interface below based on the rules/examples on the epic. Will also need to define the `PopulatedSession` interface for the code that will call these functions.
```
interface Flag {
  key: string,  // for legacy keying
  displayName: string, 
  toReview: async (session: PopulatedSession): Promise<boolean>,
  qualifies: async (session: PopulatedSession): Promise<boolean>
}

function checkFlags(sessionId) {
  session = getPopulatedSession(sessionId)
  flags = []
  review = false
  for (flag in ALL_FLAGS) {
    if (flag.qualifies(session)) {
      flags.push(flag)
      if (flag.toReview(session)) review = true
    }
  }
}
session.updateFlags(Array.map(flag => flag.key))
session.update({ toReview })
```

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
91705741,2021-08-09 19:01:41.380,Add check on every message for activity promt cache key,"When a new session is created add a cache key for something like `${sessionId}-activity-prompt-sent = false`. In the socket router session message handler add a check for this cache key. If it is set to true kick off a new round of notifications and remove the key otherwise do nothing different than before.

This can be deployed without the bot since unless the key is set to true this logic should be a no-op.

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
91705727,2021-08-09 19:01:19.096,Create job to handle chat bot flow chart,"To keep the logic all in one place we should have a single job that implements all the chatbot flow chart decision logic. The job can re-queue itself with different timings and parse the session message history to know where in the chart it is.

Also add a quick handler to app server to check for socket event `activity-prompt-sent` with the sessionID in the payload.

[Flowchart](https://docs.google.com/drawings/d/1wOGuFaH1r5YBe3Ob9BgpyYqIG0dRIqWSxOvI-5qB45s/edit)

## Tasks
- [x] Code review
- [x] Add doppler API key to staging
- [x] Run staging migration script
- [x] Staging smoke tests
- [x] Merge to main
- [x] Add doppler API key to prod
- [x] Run prod migration script
- [ ] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Chatbot flow chart is followed correctly (minus notifications going out)
- [x] Server handling new socket event for activity prompt",3
91705680,2021-08-09 19:00:02.781,Check for volunteer already notified for the session to twilio.notifyVolunteer,"When we find volunteers to be notified for a session we don't want to repeat a volunteer so add this check to `twilio.js:notifyVolunteer`

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Volunteers still notified for sessions",2
91382416,2021-08-03 15:11:32.062,Documentation for when subjects were released to students,Create documentation outlining when subjects were released to students,1
91290606,2021-08-02 17:04:00.206,Get unit testing working on frontend components,"Frontend tests were never rendering the <component> tag when we attempted to do both snapshot and jest unit testing on the RecentSubjectCard component.

We are using this component to render an SVG. Is there a better way to pass dynamic SVGs? Can we figure out why component tags aren't rendering?

## Tasks
- [x] Get tests passing on the RecentSubjectCard component.",2
91288144,2021-08-02 16:25:08.548,Design for chatbot messages/icon,"- [x] SVG icon for chatbot 
- [x] Color hex code for chatbot messages",2
91166920,2021-07-30 17:40:45.010,Send historical ASSISTments data to ASSISTments,"* Write a script that backfills ASSISTments session data to ASSIStments
* Following same contract as in #821 .
* Should take a datetime OR a pair of datetimes, AND an auth token
  * If given a datetime, should backfill all sessions prior to that date
  * If given a pair of datetimes, should backfill any sessions where the `sent` key is false or does not exist between those datetimes
* Should be rate limited to 1 per second

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod
- [x] Run backfill script
- [x] Flip feature flag",2
114882632,2022-09-12 17:01:45.029,Migration: Fix the student_favorite_volunteers table to remove self-favorited volunteers,"Due to the bug described in https://gitlab.com/upchieve/subway/-/issues/1210, volunteers were being stored under `student_id` and `volunteer_id` in the student_favorite_volunteers. We need to create a migration that removes those self-favorited volunteers from the table and the relevant user actions that follows those events

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
114882534,2022-09-12 16:59:09.043,BUG: Volunteers are seeing an error message that they have reached the favoriting limit,"A volunteer that they kept getting a message that the ""Favorite volunteer limit reached."" when ending a session and when submitting the post-session form. Our checks to see if a user is a volunteer is failing and causing volunteers to self-favorite themselves

Fixed in https://gitlab.com/upchieve/subway/-/merge_requests/1168

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
111327581,2022-07-07 16:34:37.845,Investigate issue where some volunteers do not see the results page after taking a quiz,"""It appears there is a bug with our ceritfications. A couple of coaches complained after submitting they never advanced past getting your results page. (Volunteer name) was on microsoft edge on a PC, Windows 11,""

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
110967236,2022-06-30 13:25:28.099,BUG: US History cert failing,"![Screen_Shot_2022-06-30_at_8.48.36_AM](/uploads/f0bcc6b44fd44b778b1ce132049c901c/Screen_Shot_2022-06-30_at_8.48.36_AM.png)

![Screen_Shot_2022-06-30_at_9.15.03_AM](/uploads/1f06ae9d122adfcb93dd40a701e8cbad/Screen_Shot_2022-06-30_at_9.15.03_AM.png)

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
110852140,2022-06-28 17:08:25.156,"Launch ""U.S. History"": Automatically update dashboard banner on July 15th","## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
110788128,2022-06-27 19:26:24.389,Keep Historical Data: Turn off links for corporate partnerships,"Change logic around how app creates partner links to not allow links for disabled or inactive partners so people can't keep signing up for them - Instead this should redirect users to regular sign up page https://app.upchieve.org/sign-up

- relevant file: src/views/StudentPartnerSignupView.vue
- Add check if partner is valid

Open Question for Katie O: Do we add a message for previous partners? **Answer:** Yes I think we should at some point when we are ready - so for now keep as is
   

## Tasks
- [x] Posthog event user visited inactive partner link
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session",2
110788109,2022-06-27 19:25:39.994,Keep Historical Data: Write scripts to move data to new schema,"We need to migrate are existing data from all relationships below from their creation point 

May need to do research here to make sure we do this correct 

Need estimated dates (month and year) for when sponsor orgs, volunteer partners, student partners, (any org) joined

Assume that current lengths are correct for rest of relationships - from time person joined or org was created 

Need to migrate data to schema created here https://gitlab.com/upchieve/subway/-/issues/1175

Note: Make it clear not to run again - Maybe goes into another directory for one time data migrations 

**Likely places that will require code changes:**
- notification groups
- hour summary on dashboard
- reports (own story)
- weekly emails
- sign ups (own story)
- chron jobs, queued jobs, partner jobs
- sponsor orgs (own story)

**Relationships:**

* Sponsor Orgs -> Student Partner Orgs
* Sponsor Orgs -> Schools
* Schools -> Student Profiles
* Volunteer Partner Orgs -> Volunteer Profiles
* Associated Partners -> Student Partner Orgs
* Associated Partners -> Sponsor Orgs
* Associated Partners -> Volunteer Partner Orgs  

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod

## Smoke tests
- [ ] **Once Scripts and code changes are made reassess what we want to test** 
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session",5
110788096,2022-06-27 19:24:52.341,Keep Historical Data: Create schema,"**Migration files that create a schema that can receive new data and historical data that covers all these use cases while maintaining compatibility with current code ie we may remove partner org id from partner org but that will need to be staged with code changes**

**If there are code changes forced by the new schema then put notes for updates here https://gitlab.com/upchieve/subway/-/issues/1176**

Edge Cases:

* What if a sponsor orgs stops sponsoring a s schools or nonprofit?
* What if a volunteer changes companies?
  * What if a volunteer is not part of a company and then joins one?
* What if a student leaves one of our nonprofit partners?
* What if a paid partner org churns?
* What if a student changes schools?
* What if any of above reverse? - this happens most with sponsor orgs
  * What if a person goes back to working at a company they left
* What if a student becomes a volunteer
* What if a student graduates? 
* What activities did student take when in certain grade level?

Metadata:

* StartDate
* EndDate
* LastUpdatedBy - user admin system 

Relationships:

- Sponsor Orgs -> Student Partner Orgs
- Sponsor Orgs -> Schools
- Schools -> Student Profiles 
- Volunteer Partner Orgs -> Volunteer Profiles
- Associated Partners -> Student Partner Orgs
- Associated Partners -> Sponsor Orgs
- Associated Partners -> Volunteer Partner Orgs

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Write queries that we can update or read all Edge Cases to ensure schema is working as expected
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",8
110687150,2022-06-24 17:36:33.981,"Launch ""Environmental Science"": Turn off Feature Flag for Students + Clean up Environmental Science subject flags","## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
110687144,2022-06-24 17:36:05.839,"Launch "" Environmental Science"": Turn on Flag subject for Students","## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",0
110687005,2022-06-24 17:30:59.998,"Launch ""Environmental Science"" as subject to students (web)","Example Reading: https://gitlab.com/upchieve/subway/-/merge_requests/1065

Create feature flag for this 
Make sure to update route with feature flag too

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
110686794,2022-06-24 17:22:05.619,"Launch ""U.S History"": Turn on Flag subject for Students",Turn on `us-history-launch-student` in PROD https://gitlab.com/upchieve/subway/-/feature_flags,0
110686736,2022-06-24 17:19:57.989,"Launch ""U.S History"": Turn on Flag for banner and subject for Volunteers","Turn on 
`dashboard-banner` and 
`us-history-launch-volunteer` in PROD https://gitlab.com/upchieve/subway/-/feature_flags",0
110682282,2022-06-24 15:49:36.744,HEIC photo conversion for desktop,"Here is a wrap up from a spike that we did on whether the HEIC photo conversion should be on the frontend or backend: https://gitlab.com/upchieve/subway/-/issues/1068#note_1004437374

Here's another [comment](https://gitlab.com/upchieve/subway/-/issues/1068#note_1002783111) that goes more into the finding of what happened when the photo upload operations and the conversion was moved to the backend

A majority of the implementation was drafted in this MR https://gitlab.com/upchieve/subway/-/merge_requests/1111 while investigating the upload speeds of the conversion on the client-side. That can be used as a base to close out this ticket

The remaining work that is left
- Fixing the tests
- Better UX for error handling
- Better way to determine if a user is on a desktop browser instead of relying on the screensize

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Students can upload an HEIC file to whiteboard 
- [ ] Students can upload jpeg, png, and gif images to whiteboard
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
110630650,2022-06-23 18:59:49.464,"Launch "" Environmental Science"": Update materials for volunteers","![Screen_Shot_2022-06-21_at_2.42.03_PM](/uploads/9feba232946c6d84bf657dd045f86dbd/Screen_Shot_2022-06-21_at_2.42.03_PM.png)

hyphen in subject name was removed in files above to match file names for example `environmentalscience-topics-and-resources.pdf`

Update materials from ""Sorry, review materials for Environmental Science are currently under development. Check back soon!"" to material links above 

https://app.upchieve.org/training/review/environmental-science

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
110627219,2022-06-23 17:38:06.289,Web Socket Observability: Clean up code to not use promise chaining - instead await,"Code is hard to read because instantiates new promises instead of awaiting - cleaning this will help reading code and this will help with other issues in epic

**This is in sockets.ts**

Need to add unit tests

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod

## Smoke tests
* [x] Ensure volunteers can still see sessions to pick up from dashboard
* [x] Sending and receiving messages during sessions
* [x] Reset whiteboard during session
* [x] Quill doc updating and reseting during session
* [x] Refresh get correct state of document during a session
* [x] Typing indicator during session (shows correctly when person is typing and when person is not typing)
* [x] Student/volunteer can login
* [x] Student/volunteer can make/join session
* [x] Student/volunteer can use whiteboard and chat in session",2
110627217,2022-06-23 17:37:57.612,Web Socket Observability: Replace passport-socket.io,"Gives instructions on how to replace here: https://github.com/jfromaniello/passport.socketio/issues/148#issue-865236471

We should have accurate typing after this is done 

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod

## Smoke tests
- [x] Ensure volunteers can still see sessions to pick up from dashboard
- [x] Sending and receiving messages during sessions
- [x] Reset whiteboard during session 
- [x] Quill doc updating and reseting during session
- [x] Refresh get correct state of document during a session
- [x] Typing indicator during session (shows correctly when person is typing and when person is not typing) 
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session",2
110504117,2022-06-21 19:29:34.826,BUG: References cannot submit the reference form when the view is in mobile mode,"Related gleap report: https://app.gleap.io/share/gCT8JvtkIhXykPklYHVycPMEJzY3o5HHQYkLlR4TAxgphQxp5xWoPnhkjUCaKf247Rk8xR

As shown in the screenshot, the submit button is still grayed out even after answering all of the questions on the form. 
Looking at the Vue devtools, the state `""multipleRadioResponse""` for ReferenceForm.vue never gets populated with the answers from questions with dropdowns


## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
110296260,2022-06-17 12:39:08.318,Summer Program: Turn off flag and Clean up code,"Turn off flag on July 26th
Clean up code 
- remove flag
- remove banner
- clean all references

https://gitlab.com/upchieve/subway/-/issues/1135 created summer program banners. They'll stop showing up after 7/26 - this ticket is to remove the code from the associated MR https://gitlab.com/upchieve/subway/-/merge_requests/1101/diffs

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
110296211,2022-06-17 12:38:53.003,Summer Program: Turn on Flag for web banner,"Turn on Flag when ready to go live with banner 

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",0
110100735,2022-06-14 14:19:25.142,SPIKE: Verizon Mobile App Stats,"Time Box: 2 Days

**Answer these Questions:**
1. What is possible to pull from app store?
2. Can we match up the data and determine how many VILS students in-particular downloaded or updated the app not  just total number of downloads?
3. Is there another way to tell a VILS student user is using mobile app besides them making a request on mobile app?
4. Is there a benefit of integrating with API?
5. Can we get % of app downloads that have no activity? 

**Some things we can try:**
1. Maybe we can do logical explanation for why we believe X% of downloads are VILS students
2. number of downloads from app store minus number of VILS students who have made a request on mobile = non-vils students who have downloaded app

**Note from Dave:**
Some of this is going to come from Posthog as well, in that we should be able to pull and correlate VILS students from there, by getting the user IDs that take some action there then getting if that ID is a VILS student from the database or adding a new property in Posthog and backfilling it

Slack: https://upchieve.slack.com/archives/G0161HX53SM/p1655153007045299

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
110035885,2022-06-13 15:19:43.650,^^^^^^^^^ THIS WEEK ^^^^^^^^^,Placeholder to keep track of work closed this week,0
109874509,2022-06-09 19:30:31.386,Summer Program: Create banner (web),"banner to show to students with at least one session and not banned or reported something like ""Sign up for our Summer College Prep Programs"" link to bit.ly/upchievesummer

- Read if any sessions off legacy user object 
- Show banner or not 
- Feature flag to show or hide 
- Replicate down time banner and change text to this 

Open Questions:
1. Confirm this is **at least** one session? **Answer:** Yes
2. When is this needed? If possible **Answer:** Jun 22 - wait for Bailey to confirm before launching 

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
109874212,2022-06-09 19:17:26.121,Summer Program: Push notifications: Create job to send notification,"looks at their token and payload - need to figure out how to format payload for firebase

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
109874207,2022-06-09 19:17:18.736,Summer Program: Push notifications: Spike does firebase still work with new app?,"If this does not work we will need additional time to investigate this me be bigger

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
109750094,2022-06-08 01:13:56.797,BUG: Undefined text shows when Can't find school is selected from school search autocomplete component,"Time box: 2

The input says `undefined` when clicking on ""Can't find school"" - this should not show the undefined object should show nothing or ""Can't find school"" text

![Screen_Recording_2022-06-07_at_5.36.10_PM](/uploads/12405a37f71267547f8855f580e6066e/Screen_Recording_2022-06-07_at_5.36.10_PM.mov)
## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
109749950,2022-06-08 01:04:17.467,BUG: Investigate if students can/can't upload images,"Investigate to see if we can recreate this issue. - Create follow up issue to fix after confirming issue and understanding what is happening 

Thread: https://upchieveaccommunity.slack.com/archives/C01E128V8R4/p1653343792207799

```
Asking for a feature to upload pictures onto the whiteboard. I've had many students who wanted to upload a picture of their work or question and couldn't do so. I mainly ask them to send an imgur link or external applications but would prefer for it to stay on Upchieve.
```

```
The students I've had that uploaded pictures can see them on their end, but I cannot. I have reported the bug in the past and nothing has changed. I've even tried switching to mobile (instead of desktop) and I still can't see it.
```

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
109736167,2022-06-07 18:24:31.648,"Launch ""U.S. History"": DB: Create Social Studies Topic","- Add seeds for social studies topic and US History sub topic
- Add quiz to quizzes table 
- Add certification to certifications table  

![Screen_Shot_2022-06-17_at_8.57.52_AM](/uploads/1892811e10cc4e1f201ec2baf2fa7f5f/Screen_Shot_2022-06-17_at_8.57.52_AM.png)

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
109736012,2022-06-07 18:18:34.265,"BUG. Error with Verizon, Twilio, Goldman Sachs & PwC Corporate Partners Analytics Report","Check `getAnalyticsReportSummary` in `server/utils/reportUtils.ts` - for summary sheet Check `server/utils/reportUtils.ts` line 405 where we set the onboarding status for every volunteer - for data sheet

Connect to prod read only and run date range with a lot of data and check how close numbers are and run script

The partners listed in the title have errors in their analytics reports. See the attached 'Partner Report Errors' for specifics. The reports with errors are also attached.

[Verizon-analytics-report.xlsx](/uploads/020edc52c84418fd3a271069e788cef1/Verizon-analytics-report.xlsx)

[PWC-analytics-report.xlsx](/uploads/26556ee5730e2108cf67f6d1bb5b8f2b/PWC-analytics-report.xlsx)

[Twilio-analytics-report.xlsx](/uploads/5d09640f67d3a250ed70972c7bd0e285/Twilio-analytics-report.xlsx)

[Goldman_Sachs-analytics-report__1_.xlsx](/uploads/3e6a5a6aea7b58205e82fde934cb9160/Goldman_Sachs-analytics-report__1_.xlsx)

[Partner_Report_Errors__1_.xlsx](/uploads/68da0be12391009d104e13cfdaea8ea7/Partner_Report_Errors__1_.xlsx)

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",5
109652222,2022-06-06 14:04:37.677,Pre Survey: Database: Update final copy (BLOCKED until we have final copy),"## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
109522285,2022-06-02 17:51:39.540,Post-Survey: Create endpoint to submit post-session survey content,"Save survey data and emitting a post session survey event 

Note: This is a new service 

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
109522099,2022-06-02 17:46:17.663,Post-Survey: Backend Write Swagger,"This is a separate ticket because logic coming from the backend determines how the frontend orders and handles optionality of survey questions 
EDIT: handled in #1114
## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
109402613,2022-05-31 19:00:17.161,Post-Survey: Remove old feedback endpoints and handlers,"- Clean **both** pre and post survey legacy code 

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
109402331,2022-05-31 18:53:23.086,Post-Survey: Update retool dashboard (Session Metircs),"Add to sessions retool dashboard 
- In section modifiable by a date range selector
  - Pie chart of student feelings pre session
  - Pie chart of student feelings post session
  - Nice to have: pie charts for each of the goals

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
109402175,2022-05-31 18:50:10.435,Post-Survey: New Email for Student Reports,"Automated session review emails:
- [Warning] Student was pushy / just wanted answers 
  - Current trigger: 1st time student is flagged as “looking for answers”
  - New trigger: Volunteer post-session form: 1st time Student was pressuring me to do their work for them
- Absent users no changes
  - Volunteer + student still get auto email on 1st absent users trigger
- Apology email no changes
  - Unmatched student still gets apology email on 1st not matched sessions
  - Volunteer gets ghosted for first time still gets email
  - Student gets ghosted for first time still gets email
- Tech issue trigger should be the same but will be in a slightly different question: not sure if this impacts any code 
  - Auto send emails to volunteers and students
- NEW: Reported sessions
  - Volunteers should get an automatic apology email each time they report a student. These are two different reported emails
    - One if the student is rude
    - Other one if they are concerned about the students well-being
- NEW: emotional distress
    - If “Report” button has not been used for session: Follow “Report” button flow for ​​severe emotional distress selection (auto email with resources, emailing volunteer, etc)
    - If “Report” button has been used for session: Do nothing


Open Questions: 
1. Is new trigger for warning only first time or every-time? **Answer:** Only first time

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
109401475,2022-05-31 18:34:26.155,Post-Survey: Update feedback session to show old feedback and new post session survey format,"Admin Session View
- (Nice to have) Add all student pre-session responses to admin session view
- Add all student post-session responses to admin session view
  - Currently we can see open-ended written content from two boxes, we will only need to see this from “Your Thoughts” box in the new version
- Add all volunteer post-session responses to admin session view 
  - Currently we can see open-ended written content from two boxes, we will only need to see this from “Your Thoughts” box in the new version

https://docs.google.com/document/d/17k0zRVsNeYAAzfbPUVxv4RlZPs-LlX2wK1ZP3Mh-_zQ/edit

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
109400727,2022-05-31 18:19:48.860,Post-Survey: Create chip component (web - view),"Note: Similar style used in Session Review for flags

Figma: https://www.figma.com/file/JPZ9LQZ8ytnvS07WqLZprx/Session-History%2F-Coaches%2FProfile?node-id=645%3A14846

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
109399796,2022-05-31 18:16:58.626,Post-Survey: Frontend: Display and submit survey (web),"Come up with the shape of data that is most convenient to receive from backend to display optional questions 

Submit answers when pressing the submit button 

Figma: https://www.figma.com/file/JPZ9LQZ8ytnvS07WqLZprx/Session-History%2F-Coaches%2FProfile?node-id=645%3A14846

Will be merged/tested/closed with #1113

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",5
109398691,2022-05-31 18:15:26.771,Post-Survey: Backend for post session survey and session review,"Note: 
- Create new system not converting old feedback 
- Add email to job queue 

## Tasks
- [ ] Seed update to add new flags
- [ ] Change logic around flagging - increment user session metrics
- [ ] Trigger logic for emails
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",8
109397662,2022-05-31 18:15:05.734,Post-Survey: Create endpoint to get post-session survey content,"Hook database schema to swagger schema 

**This is where we are going to encode business rules for optional questions for a survey**

Will be merged/tested/closed with #1114 

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
109396638,2022-05-31 18:14:02.955,Post-Survey: Make initial surveys in DB for testing,"Source of Truth for content: https://docs.google.com/document/d/17k0zRVsNeYAAzfbPUVxv4RlZPs-LlX2wK1ZP3Mh-_zQ/edit

Only add 1 set of questions for now so we can go forward with development and testing. Another issue later on will complete remaining questions when final copy is confirmed 

## Tasks
- [ ] Add optional column to `surveys_survey_questions` type boolean 
- [ ] Add to seeds 
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
109387723,2022-05-31 16:07:55.553,BUG: Unable to type in Document Editor and text prompt is vertical,"The ""type or paste something"" prompt is vertical and you cannot type into the document editor. Likely has to do with overriding CSS rules

![Screen_Shot_2022-05-31_at_17.05.56](/uploads/bd5aafc6482555a0884771ff428c87e4/Screen_Shot_2022-05-31_at_17.05.56.png)

Users are able to type on the document editor as long as they selected the upper-left most part of the document editor to begin typing

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Sessions with a document editor display the text prompt properly",1
109382429,2022-05-31 14:43:43.108,Launch U.S. History: Turn off flag for dashboard banner flag TBD DATE,"## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",0
109382352,2022-05-31 14:42:25.821,"Launch ""U.S. History"":  Turn off Feature Flag for Students + Volunteers + Clean up U.S. History subject flags","- Turn on feature flag for students 
- Clean up feature flag(s) and remove paths
`us-history-launch-volunteer` and  `us-history-launch-student`
Don't deploy this until we feel confident with feature and no longer need the flag (a couple days)

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
109382309,2022-05-31 14:41:47.600,"Launch ""U.S. History"" as subject to students (web)","Example Reading: https://gitlab.com/upchieve/subway/-/merge_requests/1065

Open Questions:

1. Where should Social Studies fall on list of Topics in Training Materials? **Answer:** 1. Math  2. Reading & Writing  3. Science 4. Social Studies 5. College Counseling 6. Standardized Testing
2. Do we need an icon? **Answer:** Yes Grace will have this by June 30th

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
109381901,2022-05-31 14:36:56.295,"Launch ""U.S. History"" as a subject to volunteers","- Update the dashboard banner to have US History text
  - Add condition to check if not certified in US History then show banner
- Turn on banner 
- Add quiz + materials so volunteers can get certified
- The certification is in the app under ""U.S. History""
- add subject to trainging view here (src/views/TrainingView.vue)

![Screen_Shot_2022-06-17_at_8.57.52_AM](/uploads/250f14e3f0e0b801423271bc6721e633/Screen_Shot_2022-06-17_at_8.57.52_AM.png)

Open Questions:
1. Where should Social Studies fall on list of Topics in Training Materials? **Answer:** Social studies in between reading and writing and college counseling
2. Confirm if design is good as is with new topic added **Answer:** Good for now but will need update in future 

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
109055621,2022-05-24 18:45:11.124,Sign Up Eligibility V1: Remove continue button from college sign up page,"## Tasks 
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
108990871,2022-05-23 17:07:32.170,BUG: Completing UPchieve 101 material gives users an UPchieve 101 cert without taking the quiz,"Tested on staging with `volunteer4@upchieve`

Steps to reproduce:
1. Complete the required material to unlock the UPchieve 101 quiz
2. The quiz will be completed when visiting the dashboard
3. Inspecting the user object in the network shows that `ceritfications.upchieve101.passed` is `true`


Relevant areas of code:
- https://gitlab.com/upchieve/subway/-/blob/main/server/services/TrainingCourseService.ts#L67
- https://gitlab.com/upchieve/subway/-/blob/main/server/models/User/legacy-user.ts#L134


## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session",2
108989385,2022-05-23 16:30:02.349,BUG: Partner students with an optional school sign up are required to enter in a highschool,"When signing up as a partner student who has `school_signup_required` as `false`, if you do not click the checkmark for ""Are you currently a high school student?"" an error is thrown: `Database transaction error: Key schoolId was unexpectedly null or undefined` See screenshot below

To test:
Try creating an account with student partner org `community-org` either locally or on staging
`http://localhost:3000/signup/student/community-org`

![Screen_Shot_2022-05-23_at_17.28.04](/uploads/8c1b633512541eae2dbc47898074a449/Screen_Shot_2022-05-23_at_17.28.04.png)


## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
108830193,2022-05-19 18:24:22.866,Chatbot: Clean up: feature flag and legacy chatbot code,"- Clean `chatbot` feature flag code and anywhere it is referenced 
- Remove code for legacy chatbot

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
108773586,2022-05-18 21:57:35.197,Retool Dashboard: map old session id to a new session id,"Given a text input of an old mongo session ID return the new postgres session id so staff can view it in the admin panel

**Open Question:** What dashboard should this live in? **Answer:** This should be its own dashboard 

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
108701998,2022-05-17 19:51:55.961,Update reading banner text,"Change the text of the reading banner to ""Introducing our new subject: READING! Take the quiz today"" CTA “Get Certified”

## Tasks
- [ ] Update text
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
108637173,2022-05-16 19:15:57.367,Fix whiteboard on session recap view,"The whiteboard document from our storage bucket is not loading when we retrieve it. There are a couple of issues that we have noticed while trying to debug this problem. The first one is a known problem that we will not tackle now

1. This issue is well documented here https://gitlab.com/upchieve/subway/-/issues/983#note_825196682. TLDR (Too long didn't read): The client sends an ""INIT"" message to the server, but the server never responds to it. This means we actually never try to get the whiteboard document from Azure. We will not be tackling this problem in this ticket. We will instead show the user that we had a problem loading the document. 
2. Zwibbler doesn't load the document when we actually get the whiteboard document from storage
3. We need to have a fail-safe in case issue #1 happens. This involves having a timeout on the frontend just in case Zwibbler never gets connected to the server


## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
108628867,2022-05-16 16:49:54.417,BUG: Sessions showing no texts sent,"The frontend expects an array of text messages on `session.notifications` but we don't include that at all. Lookup notifications for a session and add it to the return type on `getSessionByIdWithStudentAndVolunteer` which is used to populate the admin session detail

From Mark:
I've been going through sessions and it looks like it still says no messages sent (although I may just be missing all the ones that do send messages + maybe we are sending and the site isn't reflecting that + maybe we ran out of coaches to text). Is there another way to search / look for sessions and the number of messages sent?
Some of the sessions 

I looked at below where volunteers joined more than a minute after the session was made (from the last several days)
- https://app.upchieve.org/admin/sessions/0180cad9-af7f-2497-ec54-283c6647a17f
- https://app.upchieve.org/admin/sessions/0180cacc-0f5b-fbf8-b5b6-f67bcffca92b
- https://app.upchieve.org/admin/sessions/0180caba-fb26-b849-5dfd-4a861b2854c1
- https://app.upchieve.org/admin/sessions/0180ca3a-ac99-9641-ca1a-dd4f6864557d
- https://app.upchieve.org/admin/sessions/0180c574-b270-e310-1115-871c33b182ea
- https://app.upchieve.org/admin/sessions/0180be49-1e55-bb6a-8635-30c1bee6ab8f
- https://app.upchieve.org/admin/sessions/0180ba1e-f2d4-381c-eeb4-5d96cd49f43a
- https://app.upchieve.org/admin/sessions/0180b96e-a99d-9a64-9ab2-6e1184d2b9a9
- https://app.upchieve.org/admin/sessions/0180b5d9-5ab4-57a0-b2a2-4125eac59944
- https://app.upchieve.org/admin/sessions/0180b44f-38e7-9473-934c-d1f3fcb0e78c

## Tasks
- [ ] join total notifications in query - getSessionForAdminView
- [ ] Update to return array of notification ids 
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
108533535,2022-05-13 20:59:45.373,Create new auto email after 35 days,"Audience: Volunteer 

Sent 35 days after volunteer creates an account but has not completed onboarding: https://mc.sendgrid.com/dynamic-templates/d-dbd1c17e9c334a3d9280f0ff296c5204/version/31b7ba77-41b2-4236-8ac8-de960bac7622/editor 

Open Question - what time should this be sent out?

## Tasks
- [ ] Query to check for volunteer
- [ ] cron job to send after 35 days if volunteer is still not onboarded
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
108533311,2022-05-13 20:50:44.618,"Volunteer Funnel: Remove non-onboarded volunteers from 30, 60, 90 day inactive emails","Remove non-onboarded volunteers from 30, 60, 90 day inactive emails 

30 day inactive: https://mc.sendgrid.com/dynamic-templates/d-e2c9917e22c24d72a187ff00a5eff5e9/version/b82ec278-ed41-4873-872c-0d009dc57cf5/editor

60 day inactive: https://mc.sendgrid.com/dynamic-templates/d-659b7e8d08754ef58d9b6e594f748e19/version/bbcbe4b4-bab6-4677-89a5-583b9494df05/editor

90 day inactive:
https://mc.sendgrid.com/dynamic-templates/d-1bb491dbb4a044f5a4cd9cd926eacf38/version/d7247855-8ecd-4dce-9083-059961e8e968/editor 

**volunteer/queries.ts**

**getinactivevolunteers**

## Tasks
- [ ] Update query to not include non-onboarded volunteers (only include onboarded volunteers)
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
108532646,2022-05-13 20:22:39.054,Volunteer Funnel: Responsive reference form,"Make form mobile web friendly (currently only see “strongly disagree”)

Open Questions: Ask Grace about design

Current look:

![Screen_Shot_2022-05-17_at_2.49.33_PM](/uploads/0b9f4a84efcf3c06c093921270959b0b/Screen_Shot_2022-05-17_at_2.49.33_PM.png)


Dropdown:
- change view to use existing dropdown ()2 **DESIGN:** https://www.figma.com/file/n1E6MRQLw2RFrevM6yduHh/Onboarding?node-id=3%3A6453

Pullup: 
- a lot of work since that is native on mobile app would be harder on 
- Would need to see design  
- emulate platform native modals 
**- Probably double or triple the size of Dropdown  **

**DECISION: USE DROPDOWN **

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
108532207,2022-05-13 20:13:11.117,Volunteer Funnel: Update volunteer email reference logic,"- When volunteer is entering references they should be allowed to delete and re-add the same email address 
- Make sure not allowed to enter their own email address for reference 

1. Check references that user has and do logic in code - does reference already exist and what is status? (should be able to readd if status of the reference wasn’t previously “rejected”)
1. Disallow Volunteer from entering their own email address for reference
1. Reference email should not be globally unique but should be per user
 
## Tasks
- [x] Remove existing constrain on reference and make new one 
- [x] Update code logic to handle unique references/status
- [x] Update code logic to disallow volunteer entering own email 
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",3
108474686,2022-05-12 20:36:17.849,Context Sharing: Frontend: update chat design,"**Figma Design:** https://www.figma.com/file/JPZ9LQZ8ytnvS07WqLZprx/Session-History%2F-Coaches%2FProfile?node-id=392%3A9861

**open to outside contributors**

Update:
- [ ] ""End Session"" Button shape
- [ ] Color of chat to blue
- [ ] Add ""in session"" text 

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
108469692,2022-05-12 18:39:03.412,Chatbot: Make changes to chatbot messages and flow,"Follow source of truth: https://docs.google.com/drawings/d/1wOGuFaH1r5YBe3Ob9BgpyYqIG0dRIqWSxOvI-5qB45s/edit

- **subway/server/worker/jobs/chatbot/messages.ts**
- **subway/server/tests/jobs/chatbot/messages.test.ts**

**Note:** unicode should not be used for quotes / symbols 

## Tasks
- [ ] Rewrite all of the `messages.ts` scenarios to match the source of truth
- [ ] make sure when copy pasting text to not use unicode
- [ ] Rewrite the `messages.test.ts`
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",3
108468741,2022-05-12 18:19:23.509,"Context Sharing: Analytics - ""About The Session"" press button","Capture analytics for how often a volunteer presses the ""About The Session"" button

## Tasks
- [ ] Add analytics service.capture event to function that is called when button is pressed 
- [ ] Add const for event 
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
108468290,2022-05-12 18:08:37.569,"BACKEND: Migrate notification priority groups from specific partners to ""Associated partners""","We are migrating our notification priority group names from having specific partner names like ""Big Telecom volunteers - not notified in the last 24 hours AND they don't have ""high level subjects"""" to have more generic naming like ""Associated partner volunteers - ..."" this allows us to capture multiple associated partners without having to create a new notification priority group for each new volunteer partner org that is added

The notification priority group static seeds changes and migration additions were added in this MR https://gitlab.com/upchieve/subway/-/merge_requests/1068/

We now need to migrate over notifications with the specific partner priority groups, e.g Verizon, to the ones created in that MR. We also need to create a migration script that removes the specific partner priority groups

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
108451569,2022-05-12 14:16:47.250,BUG: Partner text notifications are not being captured in the database,"It is likely that the check for `getAssociatedPartner` in https://gitlab.com/upchieve/subway/-/blob/main/server/services/TwilioService.ts#L207 is not correctly determining if a student is from a partner/sponsor org that has associated partners. This means that our targeted text notifications to certain partners are not stored with the appropriate priority group in the database.

Check if `getAssociatedPartner` is properly getting the associated partner for a student. If so, the issue may be related to a query or how the notification is being stored. There is some investigation that has to be done here.


## Tasks
- [x] Tests to make sure that this is the actual issue
- [x] Fix the `getAssociatedPartner` function in TwilioService
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] A student with an associated partner org should send out specific text notifications to counterpart volunteer",1
108397194,2022-05-11 20:02:54.346,BUG: student sign up school dropdown,"Issue:
1. There is no ""Can't Find School"" option as a drop down when students sign up
2. It is showing results for a school that should not have any results. For example type “Pottstown” and you’ll correctly see two results, but type “Pottstownrandom” (or anything else added to the end of it) and it will still show you the same two results when it should only show ""Can't Find School""

**This is happening in web**

May be getting an error code that isn't being handled and not updating list 

It should behave like this: 

![Screen_Shot_2022-05-11_at_3.12.50_PM](/uploads/88ee28696f8a7f89263bb56b3c635162/Screen_Shot_2022-05-11_at_3.12.50_PM.png)

![Screen_Shot_2022-05-11_at_3.11.26_PM](/uploads/2226eb3dd1ffe33f91c566f5a115ae66/Screen_Shot_2022-05-11_at_3.11.26_PM.png)

## Tasks
- [ ] Investigate issue
- [ ] Should always have ""can't find school?"" at bottom of list
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
108330664,2022-05-10 19:49:02.043,Turn off flag for reading launch 5/15,"## Tasks
- [x] Turn on student flag on 5/15
- [x] Turn off the volunteer tutoring banner flag - confirm with Katy when to do this (1 or 2 weeks after launch)

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",0
108326991,2022-05-10 18:20:11.856,Context Sharing: Frontend: Create Modal + About The Session Button,"## Tasks
- [ ] Create Feature Flag to show/hide button in chat
- [x] Create button in chat ""About the session"" only for volunteers
- [x] Create modal
- [x] Add tip at bottom of modal
- [x] Add alert tip at top of modal
- [ ] Get data from endpoint - when session component mounts for the volunteer 
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",3
108326887,2022-05-10 18:18:26.136,Context Sharing: Backend: Create endpoint for volunteer to retrieve pre-session survey data,"## Tasks
- [ ] Update swagger
- [ ] Update routes and services with new endpoint
- [ ] Write sql query to get data 
- [ ] Uncomment existing tests - if too much to fix create additional issue 
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
108269102,2022-05-09 19:27:12.742,BUG: Some sessions have more than two feedbacks available - which makes sessions not viewable,"Query:

```
select
  session_id,
  count(*),
  max(created_at) as created_at
from
  feedbacks
group by
  session_id
having
  count(*) > 2
order by created_at
```

## Tasks
- [ ] Investigate why this was happening
- [ ] Fix if it is easy
- [ ] Make script to remove duplicate feedback
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
108267124,2022-05-09 18:30:55.079,BUG: Backfill data outage,"Get list of jobs to backfill data

Create a job for these scripts 

## Tasks
- [ ] Create job for scripts
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
108266870,2022-05-09 18:22:28.832,BUG: Gracefully reconnect to redis in worker,"Fix reconnect 

`server/worker/index` should look at errors: 
- promise block
- queue.onerror 

start worker run redis and see where it bubbles up and reconnect - test this works 

confirm we have alert looking for this log (connection error) 

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session",2
108161461,2022-05-06 18:02:52.791,Session Recap: Fix admin session whiteboard view,"Whiteboard not showing we need to figure out why and fix (most likely backend router)

If not in cache does nothing - cache.get throws error 

Handle error at end of document 

**Point on Monday - durning sprint planning**

## Tasks
- [x] Code review
- [ ] Staging smoke tests
- [x] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session
- [ ] Can view whiteboard in admin panel",1
108161150,2022-05-06 17:54:31.735,Pre Survey: Create stepper component,"**Heather to confirm if this is needed**

Create new component for stepper or find an existing one we can use.

Note: Make sure we have check mark asset - Get SVG for this

Open Question for Grace:
- How will it look if someone goes back a step? Answer: It will look like it did on the previous step. For example the check will now be the current question number. 

## Tasks
- [x] Look at open source and see what we can use from those 
- [x] CSS
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session",2
108027579,2022-05-04 17:57:48.432,Users can get multiple push notifications because we store multiple user/push-token records,"When a student starts a session and a volunteer joins, we are sending them multiple push notifications simultaneously. I believe this is because we are storing their device push token every time they give permission? For bailey.lowenthal@yahoo.com we have the same push token stored 7 times and she's getting that many notifications.

We should probably have a unique index on (user_id, token) on the push_tokens table but also examine why we're storing it every time.

## Tasks
- [ ] Clean duplications
- [ ] Making unique index
- [ ] Don't store twice 
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
107957910,2022-05-03 20:13:45.937,HEIC: SPIKE: Determine how handles load - Need to allow students to upload HEIC images on whiteboard,"**As found here: https://gitlab.com/upchieve/subway/-/issues/1129 Students are not able to upload HEIC images to the whiteboard. We need to allow students to upload this image type.**

The reason we are doing this spike is to decide if we want to continue converting these on client side or backend

**Need to log size and upload speed, for multiple images (on off hours) to see how punishing is this to CPU**

Browsers don't support HEIC need to convert HEIC images to a supported image format

**Note:**
- Everything we enforce on frontend now should also be enforced on backend
- Upload these to existing whiteboard bucket

**Options for converting HEIC images:** https://www.npmjs.com/package/image-magick-js https://www.npmjs.com/package/heic-to-jpeg-middleware https://github.com/catdad-experiments/heic-convert https://www.npmjs.com/package/file-type

You can upload the following image formats to Cloudflare Images:
- PNG 
- GIF8 
- JPEG 
- WebP 

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
107884485,2022-05-02 17:25:59.395,FRONTEND: Update Session History view to include session recap,"## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
107880658,2022-05-02 15:48:24.836,BUG: background info missing for admin detail view,"We have a defect in the `admin detail view`. The frontend expected background info data to be nested on the user object under `user.background` .  

Relevant code: `UserAdminDetail` and `components/BackgroundInfo`

## Tasks
- [ ] figure out where data is wrong and fix depending where that is
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
107240394,2022-04-26 18:44:08.797,Pre Survey: Database: Update schema + seeds in staging (final copy to come),"Note: use this using process in Grand Central Station Dave will document 

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod
- [ ] Dave documents process

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
107240341,2022-04-26 18:43:02.040,Pre Survey: Frontend: Display and submit Survey (Web) (BLOCKED until we get final confirmation on emojis),"https://www.figma.com/file/JPZ9LQZ8ytnvS07WqLZprx/Session-History%2F-Coaches%2FProfile?node-id=392%3A9106

Note: content is still changing. Designs are most likely going to stay as they are now.

Update what gets displayed in view based on feature flag

**Heather to confirm if progress bar is okay instead of stepper**
- Create new component for stepper (make one or find one) (own story) -- Make sure we have check mark asset 

## Tasks
- [ ] write services to retrieve and submit data for survey 
- [ ] Add feature flag
- [ ] Update styles
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
107240197,2022-04-26 18:38:03.750,Pre Survey: Backend: Given a survey submission save to database,"Note: make sure to fix tests - they may be commented out

## Tasks
- [ ] Write swagger
- [ ] Write endpoint
- [ ] Write service
- [ ] Write database queries with tests
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",3
107240139,2022-04-26 18:35:56.540,Pre Survey: Backend: Given subject get survey to display to that user,"Note: make sure to fix tests - they may be commented out 

## Tasks
- [x] Write swagger
- [x] Write endpoint
- [ ] Write service
- [x] Write database queries with tests
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session",3
107240039,2022-04-26 18:33:06.939,Pre Survey: Write pre session user survey schema,"**Analytics:**
From Aly: I recommend having `question_types` and `survey_types` perhaps so that I could run a query like
for `question_type = confidence` and `subject = algebraOne`
`what is the average response on survey_type = pre?`
to answer a question like, what subject on our platform do students have the lowest pre-score on confidence for?
or:
find all the sessions where the pre and post answers to a specific question exist. then calculate the difference between them, and then calculate the average of the differences. so we could make a statement like “on average students confidence increases by X points from the beginning to end of a session”

Also like to see if they correlate to user behavior too (session rating = any correlation to pre or post surveys)

Also user specific queries too, like to understand..for a given student, have their pre confidence scores increased over a year of using us?

very long term but it would also be cool to share increases in confidence with students: You've had 10 sessions and each time you were able to increase your confidence in your ability to learn! When you first started coming to UPchieve you felt really sad a lot about your ability to learn, now you're confident in your abilities!
(or even volunteers) (though that's not an analysis I guess) ""You've helped Dave go from :cry: to :smile: about his ability to master Alg 1-great job!""

![Whiteboard_1_-01](/uploads/9805c278a7b18ba5e6bd6e183b5e2899/Whiteboard_1_-01.png)
## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
107234141,2022-04-26 16:06:36.915,Update condition for: Waiting on References email,"CLOSE - THIS IS NOT NEEDED 

**Audience:** Non corporate partner volunteers

Condition: 4 days have passed since the applicant uploaded any references, and at least one reference has not yet submitted the form.

Update condition for: Waiting on References email (https://mc.sendgrid.com/dynamic-templates/d-65bf8204d28746f58ad28a4aa92407c7/version/19beb75b-fe96-48b8-9d35-98a2ec55b522/editor) 

## Tasks
- [ ] Query for has volunteer ever uploaded reference 
- [ ] Query for has any reference responded (filled out form)
- [ ] Write the new job
- [ ] Take old job and put in date check (if 5 day from day deploy this then return)
- [ ] Queue the job at reference creation if this is first reference using first query  
- [ ] Register job handler
- [ ] Send grid template key to config
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod
- [ ] 5 days after deploy remove old job from redis so it doesn't run anymore 

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
107233494,2022-04-26 15:50:50.054,"Launch ""Reading"" as subject to students (web)","Description: Launch ""Reading"" Subject to students on 5/15 so they can request assistance with Reading.

## Tasks
- [x] Make a feature flag for the temp student reading subject
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod


## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
107233386,2022-04-26 15:49:29.859,"Launch ""Reading"": Convert reading banner and  feature flag to be dashboard banner + clean up reading subject flag","1. Convert feature flag for `reading-launch` to `dashboard-banner`
2. Rename related dead code paths for reading banner
3. clean up reading student subject feature flag
4. remove dead code paths for student subject feature flag 

Do this after launched May 15th 

## Tasks
- [ ] Remove student reading subject flag and code path
- [ ] Convert reading-launch to `dashboard-banner`
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
107233069,2022-04-26 15:44:47.249,"Launch ""Reading"" as a subject to volunteers","* Please add a new sub-subject to ""Reading & Writing"" called ""Reading"" to launch to volunteers
* Add the review materials linked [here](https://docs.google.com/presentation/d/1rJZ0wg9vgMC0ip-nTGKqwFv07BlRnlUaf9FeF9DZkfw/edit#slide=id.ge5c4b5fce2_0_704)
* The certification is in the app under ""reading""
* When this goes live, all volunteers should see a banner that says: ""Introducing our new subject: READING! Take the quiz by May 15th to help us launch to students"" CTA “Get Certified”
* Banner should have same styling as the Algebra 2 launch banner had
* Plan is to launch to students on 5/15",3
107162036,2022-04-25 19:10:27.010,Fix admin session detail view,"There are a few sessions on the admin page that will not load because they do not have user agent data. This usually occurs if the student is using the new mobile app. Update the null restrictions in `server/models/UserAction/queries/getSessionRequestedUserAgentFromSessionId` to allow null values for the following:
- device
- browser
- browserVersion
- operatingSystem
- operatingSystemVersion

## Tasks
- [x] Code review
- [ ] Staging smoke tests
- [x] Merge to main
- [x] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
107155016,2022-04-25 17:52:26.338,Fix Corporate Partnership Retool Dashboard,"https://upchieve.retool.com/apps/58d3db18-c0e0-11ec-9b57-93143c5b9b51/Postgres%20Converted%20Dashboards/CP%20Health%20Metrics

Some of the data is still not displaying correctly. Compare timestamps with the Mongo one to check accuracy.

* There are some null problems in transformers.
* There are percentages that are above 100%",2
106800555,2022-04-18 23:14:34.892,BUG: ineligible student insertion failing because of an invalid zip code,"We have a foreign key relationship on the ineligible students table. Insertions have been failing because the provided zip code wasn't in our zip code table. These students are likely putting in fake zip codes, which we need to account for. We should:

* change that column in the ineligible students table to a plain, non-foreign-key string, and remove the constraint.
* OR we need to improve the sign up process so that students can only provide zip codes that are in our table.",2
104871987,2022-03-15 18:12:04.599,Implement college ineligibility,"* /check in eligibility router needs to be modified to check grade level for being ""college""
  * if `isEligible` is false, we need to provide a reason in the response, so the frontend can differentially show the modals
  * name this field in the json whatever makes sense (maybe ""message"" as we use that elsewhere)
* differential text on the ineligibility page (show the picture in the epic in whatever way makes the most sense)
* frontend logic
  * if eligibility check comes back with reason being grade level, show this modal instead of the regular one
* update swagger
* update tests

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
104322455,2022-03-07 18:47:02.797,Resending weekly summary emails and creating NR alert,"- Create a new alert when the worker fails or we fail to send the weekly summary report
- Resend the weekly email summary report

## Tasks
- [x] Send weekly summary email out from Feb 7th",1
104312713,2022-03-07 17:09:03.969,Update push notification message to new spec for mobile app,"New spec:

```
{
    ""to"": ""expo_push_token"",
    ""notification"": {
        ""title"": ""Notification Title"",
        ""body"": ""Notification Body"",
        ""mutable_content"": true,
        ""sound"": ""Tri-tone""
    },
    ""data"": {
        ""type"": ""chat"",
        ""sessionId"": ""62223045d984af637875f2d9""
    }
}
```

This should be behind a feature flag so we can turn it on when the new mobile app is released.


## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
104312620,2022-03-07 17:07:58.319,Put together testing data for App and Play store testers,"We need to provide data/instructions so that the testers working for Apple/Google can test the submitted app.

Sign up:
They'll need known good schools/zip codes to sign up with.

Logins:
So they can test areas of the app with a known good login.",1
104312576,2022-03-07 17:07:38.895,Create endpoint that allows account deletion,"We need an endpoint that allows for user account ""deletion.""

We're not ready for actual full deletion flows, so what we're going to do is modify their email to have ""deactivated"" appended on it, basically to mark it for manual deletion. This is the pattern I've followed for manual deletions before. Then when we have the full deletion flow ready (how we're going to modify or anonymize data so we can remove their personal data) we can go find it and do that flow.

This is just for the iOS app mainly, as it is a hard requirement. We're concerned that the testers will try deleting account, be able to log back in, and not approve the app.

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",2
104312532,2022-03-07 17:07:16.606,Update privacy policy to reflect ability to delete account,"We need to update the privacy policy to reflect the ability to delete your account (as well as earlier changes we have in draft around Gleap/Posthog).

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
104120347,2022-03-04 15:53:39.143,INVESTIGATE: Weekly summary emails are not being sent out?,"There are no logs on New Relic regarding if we sent the weekly summary emails to volunteers. SendGrid activity shows that some volunteers have received the weekly summary email. We need to investigate if the weekly summary emails have been sent to users, and why New Relic didn't show any of the logs

## Tasks
- Document findings",1
103851688,2022-02-28 19:21:22.130,FRONTEND: Remove Algebra 2 header,"A fast follow to running the migration script here https://gitlab.com/upchieve/subway/-/issues/1020, we should remove the algebra 2 launch header

Relevant areas of code: 
- src/views/DashboardView/VolunteerDashboard/index.vue
- src/components/App/AppHeader/AlgebraTwoLaunchHeader.vue

We can remove `AlgerbraTwoLaunchHeader.vue` file.

Searching `algebraTwoLaunchHeaderData` will show you all the snippets of code that calls the AlgebraTwoLaunchHeader. We also want to remove `isEligibleToSeeAlgebraTwoHeader` function that decides if we should show the header or not

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
103850890,2022-02-28 19:01:10.749,BACKEND: Execute Algebra 2 cleanup migration on 3/1/22,"We initially planned to use a Kubernetes cron job to execute the migration clean up, see details here: https://gitlab.com/upchieve/port-authority/-/issues/11

Due to time constraints and missing the deadline, we'll mainly run this migration script on 3/1/22

## Tasks
- [x] Run migration script against production

## Smoke tests
- [x] Check that no volunteer has algebraTwo-temporary",0
103848736,2022-02-28 17:54:36.318,FRONTEND: modal-pop up and hitting endpoint to update volunteer favorited status,"* when clicked on opens modal to confirm whether user wants to favorite/unfavorite volunteer
* hits `POST /api/student/favorite-volunteer` to toggle the volunteer favorite status in the backend
* on error pop up error modal
  * if error is that student has max favorites include that in the modal

## Tasks
- [ ] Code review
- [ ] Staging smoke tests
- [ ] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [ ] Student/volunteer can login
- [ ] Student/volunteer can make/join session
- [ ] Student/volunteer can use whiteboard and chat in session",1
102436841,2022-02-14 19:44:06.939,SPIKE: Whiteboard turning black,"We have received a number of Gleap reports that the whiteboard turns black. If a user is on mobile, switching the phone from portrait mode to landscape mode sometimes fixes the problem. Switching from chat to whiteboard view has also been reported to fix the problem. Here are a few reports:

- https://app.gleap.io/share/tnezxCariq6hNOKiwNF5KQU4Dp32Xu19QvdhRAoaYRmDpUOlcCpd4McbJOL33Val2aEfpQ
- https://app.gleap.io/share/HISCiiPlkHyfctx5sljSUH1POEc8zAgk0FVD0SgC5pu1QOKVZHTJCQ0bxZ31IL6rw0ApSF
- https://app.gleap.io/share/BmKcshEj21iKrs19iZl6vhu6kxj5A5rve4LB6RK5666CVkpJtGGEgOuevdZMHJ6bdhIYLc
- https://app.gleap.io/share/NBjoAIBViwJNWEoZq8hC0xWed2GSuyVmPo2Pcv3qz4VSjevhIIww1R5MwogZsSJqfJwbNh
- https://app.gleap.io/share/LZuu1psDRrUbWiaL6HpNdYTmjvJVfyKHltGLAL9IYo8hZdvrWvRNOLXnO17HvmKE5TdyBy

Please investigate why the whiteboard is turning black, what are the causes of this bug, and document your findings


## Tasks
- [x] Investigate why the whiteboard turns black and document findings",3
102224453,2022-02-10 18:08:45.120,FRONTEND: dynamic favoriting question in feedback form,"Add dynamic question to post session feedback forms (see copy in v2 post session feedback [here](https://www.figma.com/file/EaawhUyLG36EQDtJhKatzStS/WebApp-Redesign-2019?node-id=37%3A161))
* Non-CC sessions: students see an option to favorite their coach from the session if they rate the coach as a 4 or a 5
* CC sessions: students see an option to favorite their coach from the session if they rate the statement “I would like to receive help from this coach again” as a 4 or a 5
* Students do not see the question to favorite a coach, regardless of other answers, if the coach is already favorited
    * hit `GET /api/students/favorite-volunteer` to determine if they are already favorited
* Students should not see a question to favorite a volunteer if they're at max favorite limit
* DO NOT include question answer in feedback form save request
  * INSTEAD hit `POST /api/students/favorite-volunteer` with the session ID in the request body
* In the provided copy there are small changes like placeholder text in the volunteer feedback text box

* Backend: Make storing feedbacks an upsert, overwrite the entire `responseData` json

## Tasks
- [x] Code review
- [x] Staging smoke tests
- [x] Merge to main
- [ ] Deploy to prod

## Smoke tests
- [x] Student/volunteer can login
- [x] Student/volunteer can make/join session
- [x] Student/volunteer can use whiteboard and chat in session
- [x] Student only sees question on correct conditions
- [x] Answering question changes volunteer favorite status",3
