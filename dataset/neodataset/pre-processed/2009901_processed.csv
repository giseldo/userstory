,issuekey,storypoints,context
0,33319034,3,include praefect usage usage ping gitlab feature usage ping send simple json gitlab server track certain datum customer for example show version git instal internal analysis determine deprecate git version proposal x extend usage ping send datum praefect usage x extend version app record version ping accept new parameter
1,33293341,2,omnibus praefect dashboard improvement demo from demo notice follow potential improvement the table contain latest know elect primary include instance ip hostname the replication queue size break praefect instance virtual storage need panel replication delay metric virtual storage flapping use label instance from demo notice include a panel query m a panel node time
2,33252162,3,replicaterepository create bitmap replicaterepository multiple case move repository shard in describe good case ensure gitaly write bitmap run housekeeping move repository shard the current inter shard implement git fetch original shard repository new shard the repository new shard lack bitmap pack repository old shard this measurable performance impact we change fetchinternalremote replicaterepository future force housekeeping run good performance optimisation trade short term i o load new shard well performance wide range rpc include order magnitude improvement isancestor find motivate change that change feature flag close issue remove flag make sure replicaterepository rpc
4,33100397,4,smarter praefect election process problem solve right primary election process praefect treat gitaly node possible candidate election however happen secondary fail replication sync we need consider mark gitaly node unelectable take rotation far details we probably need consider number input be job leave replication queue if node queue prefer failure rate replication queue if node unable sync current primary number repository indicative go sync need repair idea consideration during election process sort node descend number outstanding job track metric fetchinternalremote replicaterepository rpc praefect proposal when promote secondary new primary use gitaly node pending replication job link reference
6,33016702,2,remove primary praefect config sql election merge default sql leader election merge mean long need idea default primary config we remove x praefect example config toml gitaly x gdk omnibus x gitaly cluster admin doc
8,32967456,2,stale file prevent branch delete we see gitlab org gitlab repository stale aborted file prevent branch delete inside mergerequestworker cause worker retry time unnecessarily root sudo ls opt gitlab git data total drwxr git root apr drwxr git root dec r git root apr config r git root dec description r git root apr drwxr sr x git root apr gitlab worktree r git root feb head drwxr sr x git root dec hook drwxr sr x git root apr info r git root apr drwxr sr x git root apr object r git root apr pack ref r git root apr drwxr sr x git root dec ref root date tue apr utc attach file pack pack it look like write get abort few question issue what leave i presume git pack ref i packrefs rpc complete successfully should run cleanup stale file mergerequestworker idempotent deletion branch cause duplicate merge commit these error message go can port rpc go use structured logging
9,32951949,2,documentation source truth when receive git push gitaly http callback gitlab rail this git pre receive post receive hook in callback gitaly tell gitlab rail repo hook run we use opaque token call this token come rpc request field get hand git hook environment variable git receive pack process there group rpc need callback request sshservice sshreceivepack git push ssh smarthttpservice postreceivepack git push http operationsservice usercommitfiles operationsservice usermergebranch etc rpc modify repo impersonate user in case operationsservice pass repository protobuf message in case sshreceivepack postreceivepack confusing situation these rpc implement field repository message what instead explicitly pass value request message example example the purpose issue discuss problem want
10,32839108,2,praefect grpc log visible run subcommand the praefect grpc log appear terminal run subcommand this regression desirable make noise
11,32804854,2,automatically clean move project different shard problem solve move project shard leave repo original shard clean automatically this mean manual work require reclaim space proposal if project move new shard successfully space reclaim old shard delete repo link reference
12,32791485,2,praefect enable database replication queue default as default praefect use memory implementation replication queue this switch postgre implementation provide configuration parameter value true once postgres implementation test parameter remove postgres implementation default
13,32783997,3,praefect storage different virtual storage if setup multiple virtual storage storage node node processing another node treat duplicate skip code expect node bind proper virtual storage operation route properly
14,32774722,1,walkrepos handle directory delete file walking service internalgitaly walkrepos handle possible exist error this happen repository delete rpc file walk
15,32760295,3,detect node failure read write failure problem solve health check succeed problem server gitaly git for example gitaly process run fine respond healthy signal persistent disk available prevent git operation succeed far detail health check relatively slow detect failure second perform frequently total number git operation for example busy gitaly node handle hundred request second commit file list etc if multiple health check fail failover mean thousand operation fail system notice failure proposal praefect monitor gitaly rpc success failure mark node bad multiple failue row for example rpc fail row strong signal node work bad case scenario fail date replica strong consistency mean date replica test functional end end coverage provide new failover test and broad coverage run entire end end test suite environment praefect storage include staging performance end end testing implement detailed plan performance test failure condition link reference
16,32409342,2,expose node level metric automatic failover disabled currently node metric populate true we populate metric regardless this involve refactore node manager healthcheck node false here start health check the easy way probably prevent node promotion failoverenable
17,32242603,2,on startup praefect talk gitaly nodes pick replication job during demo observe praefect bring sql replication queue job ready praefect pick job immediately try replicate fail talk gitaly to reproduce bring praefect create replication job sql database bring praefect log praefect complain talk gitaly job fail
18,32212850,1,drop golang support with release go support stop go golang policy support release this mean gitaly support compile unsupported golang version action item x remove go pipeline remove go doc project gitlab
19,32114771,4,enable partial clone blob size filter default problem solve once possible enable blob sparsity filter independently enable blob filter default low risk easy customer try partial clone proposal currently feature flag control blob sparsity filter reuse exist feature flag blob filter default enable create new feature flag sparsity filter default false link reference
21,32037158,2,document praefect sql schema date praefect sql database every time deploy new version praefect need sure run pende sql migration the status quo multi node gitlab installation local administrator process run database migration in gitlab rail case mean run rake db migrate i think extend documentation information run praefect migration
22,31850391,2,add praefect replication delay metric per demo useful metric total time replication job create complete this total replication delay additionally metric graph grafana
23,31685325,1,turn info ref advertisement cache default right info ref advertisement cache guard feature flag we run feature major incident incident todo link issue cache walker incident this enable default
25,31270038,2,add praefect storage performance bar problem solve when gitaly ha hard reconcile browser happen server which node primary if i stop node node promote primary this easy know information performance bar proposal include information performance bar gitaly node cluster respond request link reference
26,31269946,2,praefect dial node garbage output problem solve in demo today observe large amount garbage output this like regression proposal remove noise output
27,27970392,2,gitaly perform well rail validation for example api query cause dozen error minute the gitaly ruby client basic client validation ensure ref valid contain whitespace etc this prevent remote grpc git spawn etc error basic validation error more example
28,27479933,2,remove old praefect config nod once gdk update change allow multiple praefect virtual storage remove backwards compatible support praefect need remove text fixture internal praefect config testdata single virtual
29,27083225,4,observe project suffer dataloss failover problem solve as administrator failover occur i want know repository experience dataloss this provide indication developer effect target effort recover miss datum possible for example let team know need push feature branch further detail at minimum able specific project suffer dataloss cause replication operation complete incomplete replication queue a possible future improvement summarize number replication job lose repo count ref repository proposal store fail replication job period time praefect database provide method report perhaps mvc command run praefect server dump fail replication job useful analysis summarize fail replication job
30,26989784,2,use option gitdsl require minimum version git from gh release blog git new way prevent sort option injection attack option when git see argument command know treat remain argument wo interpret option so instead string previously mention write following history admittedly pretty oddly name branch git log option dangerous option not standard intentional choice widely mechanism git separate reference name file in example write git log option dangerous option path file history range modify specific file example git behaviour git diff option head fatal option come non option argument
31,26782454,3,add getstoragediskstatistics grpc it useful implement method obtain collection disk space statistic in fact reduce overall load server avoid need invoke multiple remote procedure call obtain separate detail so issue suggest feature addition grpc resemble getstoragediskstatistics return collection ideally dictionary contain disk avail disk portion output df opt gitlab invocation give target storage node system
32,26778710,3,add getstoragediskused grpc currently gitlab rail acquire disk usage information individual project repository gitaly ultimately appear use du as sre i responsible manage storage node configuration gitlab rail web application admin section add new node need automate procedure helpful team to accomplish datum require i like reliable access disk disk current use statistic only example implementation recommendation ssh df opt gitlab tail after have speak i think good suggestion implement grpc resemble getstoragediskuse return parsed result df operation relevant detail detail
33,26778708,3,add getstoragediskavail grpc currently gitlab rail acquire disk usage information individual project repository gitaly ultimately appear use du as sre i responsible manage storage node configuration gitlab rail web application admin section add new node need automate procedure helpful team to accomplish datum require i like reliable access disk avail remain unused disk space available use statistic only example implementation recommendation ssh df opt gitlab avail tail after have speak i think good suggestion implement grpc resemble getstoragediskavail return parsed result df operation relevant detail detail
34,26718942,1,remove rpc depend the rpc go unused remove protobuf schema golang ruby code relate
35,26227127,3,gitaly spike cpu usage move project branch detail call api summary this affect environment customer workload different shard we find test new reference architecture i notice gitaly node spike performance testing repository branch details api in setup identical gitaly nodes cpu gb memory copy large project our test tool test environment rate rps make call equally project copy approximately rps gitaly node the copy prohect usage the difference apply copy project import affect gitaly node it specifically move gitaly node project edit api import gitaly node directly ui setting to verify i import copy project today way gitaly node able reproduce issue successfully of note affected node show numerous git operation detail log section interestingly linux task manager show git operation average cpu usage step reproduce import project environment gitaly node api case specific project copy gitlab foss move project gitaly node project edit api set way monitor cpu use gitaly node contain project prometheus watch node directly prepare gitlab performance tool proceed run test environment the rps rate dependent environment test as test run note cpu usage spike massively example project we use copy gitlab foss it specifically backup backup github gitlabhq sanitise contain private datum what current bug behavior gitaly cpu usage spike massively repository branch details api endpoint poll project move gitaly node project edit api what expect correct behavior that gitaly node show cpu usage project move project edit api relevant log screenshot perf output take couple minute long version test run sample m event cpu clock event count approx overhead command shared object symbol git inflate git git git git git git git git git git git git git git git git git k git k git git git git git git git git k git git git k git k git malloc git k git git git k git git git k git git git k go tool pprof output top cumulative show node account total dropped node cum show node flat cum output check result gitlab environment info detail summary expand output relate gitlab environment pre system information system ubuntu proxy current user git use rvm ruby version gem version bundler rake version redis version git version sidekiq go version unknown gitlab information version ee revision directory gitlab embed service gitlab rail db adapter postgresql db version url http clone url ssh clone url git elasticsearch geo use ldap use omniauth yes omniauth providers gitlab shell version repository storage path default opt gitlab git data repository opt gitlab git data repository opt gitlab git data repository opt gitlab git data repository opt gitlab git data repository gitlab shell path gitlab embed service gitlab shell git gitlab embed bin git result gitlab application check detail summary expand output relate gitlab application pre check gitlab subtask check gitlab shell gitlab shell gitlab shell version ok run gitlab embed service gitlab shell bin check check gitlab api access ok redis available internal api ok gitlab shell self check successful checking gitlab shell finish check gitaly gitaly default ok ok ok ok ok check gitaly finished checking sidekiq sidekiq run try fix sudo git production bin start for information doc install section install init script log possible error please fix error rerun check check sidekiq finished check incoming email income email reply email disable config check incoming email finished checking ldap ldap ldap disabled config check ldap finish check gitlab app git configure correctly yes database config exist yes all migration yes database contain orphan groupmembers gitlab config exist yes gitlab config date yes log directory writable yes tmp directory writable yes uploads directory exist yes uploads directory correct permission yes uploads directory tmp correct permission yes init script exist skip omnibus gitlab init script init script date skip omnibus gitlab init script project namespace yes yes yes yes yes yes yes yes yes yes redis version yes ruby version yes git version yes git user default ssh configuration yes active user be authorize key file accessible yes elasticsearch version skip elasticsearch disabled check gitlab app finish check gitlab subtask finish note sidekiq error ha environment run separate node
36,26167524,1,remove repository field inside conflictfileheader in change client behavior use repository pass request wait repository object attach response once merge remove repository field conflictfileheader completely
37,25228249,2,praefect pass proxy default gdk currently run praefect gdk run rake praefect enable give confident praefect work especially gitaly storage node daemon enable default the thing consider user like reseed gdk take long so change good forward compatibility
38,24662617,3,pass findremoterepository praefect gitaly node we proxy praefect gitaly nodes rpc dependent repository
39,24637979,1,remove commit signature feature flag getcommitsignature rewrite go the new rpc feature flag enable the feature flag remove gitaly gitlab ce todo remove feature flag remove feature flag gitlab ce
40,24637373,1,remove ruby implementation getcommitsignature rpc getcommitsignature rpc rewrite go the old rpc use ruby remove method signature func server request gitalypb getcommitsignaturesrequest stream gitalypb error todo remove rubygetcommitsignatures function fix broken spec possible remove ruby code relate
41,24395322,1,roll feature flag title suggestion feature flag enable description feature what remove feature flag owners team gitaly most appropriate slack channel reach good individual reach expectations commit signature request use use version rpc expect performant what release feature occur what expect happen well performance rpc what happen go wrong bad case scenario stop show commit signature verify exception we commit page break rpc async what monitor detect problem beta group project if applicable group project happy feature turn early some organization wish test big change interested small subset user ahead time example gitlab org gitlab org gitaly project gitlab com group roll out steps x read documentation feature flag x enable staging x test staging x ensure documentation update x enable individual group project list verify behaviour x announce issue estimate time enable x enable run chatop command production cross post chatop slack command com team channel x announce issue flag enable x remove feature flag add changelog entry
42,24173138,1,remove gitlab ce discuss step deprecate namespace service rid call there part issue modify renamenamespace create parent directory destination dir remove call call gitlab ce
43,23984510,1,remove deprecate message handle code the follow discussion address start discussion post merge i create issue remove code remove gitlab ce gitlab ee new message param currently target
44,23159924,1,deprecate listdirectories rpc this rpc cleanup rake task far i tell this problematic gitaly ha directory multiple different gitaly server want directly expose gitaly server we look thing use listdirectories reimplement inside gitaly in case automate cleanup case need new rpc in case rpc express want happen leave actual work gitaly
45,21848253,4,remote warning ignore extra bitmap file pull deduplicate repo see today gitlab org gitlab page repository git fetch upstream master remote warning ignore extra bitmap file opt gitlab git data i think try avoid display server path client case other affect fetch succeed object i expect
46,21331132,1,remove rugged patch gitlab we force walk gitaly migration project turn certain scenario old gitlab ce code rugged significantly performant new gitaly code specifically case gitlab installation host git repository datum slow nfs server the code question find this block complete gitaly migration project these rugged patch remove this issue mean track removal current plan record summary discussion thread we believe rugged patch necessary customer utilize nfs believe performance issue necessitate patch mitigate as rugged patch create additional maintenance concern gitaly team support direction move customer require ha gitaly cluster we feel remove start default disable rugged patch as state believe cause performance issue user mitigations pende customer issue the rugged patch currently feature flag start default feature flag disable rugged remove feature flag if customer notice performance degradation enable rugged patch feature flag pende significant customer performance issue current plan remove rugged patch couple release past associate feature flag
47,27219683,2,getcommitsignature message large received message large max grpc generic fail grpc generic grpc generic grpc generic gitlab additional display received message large max gitlab git rescue raise gitlab git def gitlab metric block super gitlab metric measure retval yield gitlab metric super additional display received message large max
48,20590064,2,fail start pid file gitaly start pid file first find i figure pid file probably handle situation
49,17980204,1,calculatechecksum invalid memory address nil pointer see instance hour customer gitaly log zendesk level error panic error invalid memory address nil pointer dereference repositoryservice calculatechecksum they run gitlab unfortunately i backtrace i think need fix asap
50,16771769,3,delete tag fail branch tag exist while test i test attempt delete tag fail ref head ref tag level info info push delete branch stanhu gitlab gitaly internal testhelper testdata data remote exec bin ruby cd stanhu gitlab src gitlab org gitaly internal service remote stanhu gitlab src gitlab org gitaly ruby bin gitaly ruby folder jf t gitaly gitaly fail testsuccessfulupdateremotemirrorrequestwithwildcard level error streaming code unknown error code unknown desc warning refname normally create ref end hex ignore specify hex these create mistake for git checkout br git rev parse hex ref create ref maybe delete turn message config stanhu gitlab gitaly internal testhelper testdata data new branch stable new branch stable refname normally create ref end hex ignore specify hex these create mistake for git checkout br git rev parse hex ref create ref maybe delete turn message config stanhu gitlab gitaly internal testhelper testdata data force new tag new tag new dst refspec match fail push ref stanhu gitlab gitaly internal testhelper testdata data unknown updateremotemirror gitaly remoteservice server system grpc test testsuccessfulupdateremotemirrorrequestwithwildcard error trace error receive unexpected error rpc error code unknown desc warning refname ambiguous git normally create ref end hex character ignore specify hex these ref create mistake for example git checkout br git rev parse this similar
51,16750530,1,remove the log error return client i think case interceptor use
52,16732142,3,snapshot work dedup gitaly snapshot wo work repository use object pool ignore object info alternate theoretically possible include object object pool tar archive see detail
54,15695396,1,stop symlinke hooks directory part the hook execute set explicitly git shellout instead execute path hook symlinke gitlab shell hook dir the symlinking happen stop downside stop client downgrade gitlab version minor release project get create mean time symlink the cost symlinke low i recommend remove symlinking avoid confusion way add milestone feel free remove
55,15977073,3,import project instance url fail summary import repository gitlab instance project creation fail error message display repository import screen every import attempt fail error import repository root greenie import createrepositoryfromurl clone cmd wait exit status please try step reproduce create new project select import git url enter url project gitlab instance run import example project fail reproduce reproduce successfully ee what expect correct behavior project import error this work customer upgrade relevant log screenshot
56,5257325,2,go this placeholder issue discuss upgrade go merge update ci stop test go update documentation developer requirement discuss potential code change follow change future example relate context
57,5200506,4,gitlab shell hook long send absolute path gitlab ce implementation additional task
58,5200434,2,test gitlab behave gitaly down idea test gitlab behave gitaly server need well resiliency nfs server go happen run gitaly host need sure application survive dark for i propose actually test grpc behave code resiliency afterthought
59,5200084,2,client implementation commitdiff change design implementation update gitlab ce commitdiff change
60,5200076,1,client implementation commitdiff change path design implementation update gitlab ce commitdiff change path
61,5199436,3,address unicorn grpc preforking issue gitlab ce resolve
62,5198569,1,document changelog process contributing also automation release script
63,5197911,2,rpc design endpoint analysis goal develop rpc interface require migrate
64,5197872,1,migration analysis workhorse sendblob perform analysis migration workhorse sendblob output list exist rpc list new rpc require risks estimate effort
65,5197697,1,define gitlab shell gitaly cli stub interface blocking relate as need way communicate gitlab shell gitlab cli interface do use environment variable configuration file argument block work able continue
66,5002397,3,validate see migration process documentation information acceptance testing stage process feature toggle environment variable x chef recipe enable disable feature x grafana dashboard monitor environment x x staging x test result post comment issue do migration perform expect do code reasonable performance characteristic do error rate jump unacceptable level have change roll pende final review runbook added link mr prometheus alerts added link mr we feature flag gitlab ce we validate work x test omnibus nightly x test rc omnibus package x test staging apply setting manual clone look prometheus counter error rpc x test production hour staging test production week enable feature flag default omnibus staging step update gitlab staging worker role sure change chef repo knife ssh role gitlab staging worker sudo chef client sleep sudo gitlab ctl term unicorn echo probably slow production knife ssh role gitlab staging worker p pgrep unicorn master ps pid etime args p sudo cat environ xargs grep gitaly check gitaly stage prometheus dashbord check sentry staging manual test revert config change local omnibus step in ruby to apply revert sudo gitlab ctl reconfigure sleep wait unicorn reload sudo gitlab ctl term unicorn test environment unicorn master print match p pgrep unicorn master ps pid etime args p sudo cat environ xargs grep gitaly the rigmarole gitlab ctl term
67,4985014,3,gitaly nfs staging test plan how test stage rcx x sure gitaly tcp work omnibus x test localhost x test remote host different repository root instruction prepare staging x wait package require capability deploy staging schedule time production access run experiment stage parallel production issue merge request require stage configuration change
68,4976958,4,operation commitdiff service diff implement functionality expect gitlab ce gitlab org the follow flag support path because reason fully migrate operation gitaly we implement support flag this require change gitaly proto
69,4700826,4,forward git ssh session gitlab shell gitaly server implementation gitlab org depend analysis depend design implementation forward git ssh session gitlab shell gitaly goal allow gitaly monitor control git upload pack git receive pack server process spawn git ssh transport we protocol we want able run command behalf ssh client git upload pack git receive pack each rpc sshuploadpack sshreceivepack the idea current proto read request message repository metadata variable case receive pack start git process request correct git repository path goroutine copy rest request stream stdin goroutine copy stdout stderr stream response wait git command err stream finish send final response message contain git exit code
70,4447094,1,test require file check currently test suite check file check fail local change notice date notice git ls file unmatch notice notice track file git diff code change file this happen git diff code i question in local development environment expect uncommitted change in ci environment serve purpose we able run test require change commit
71,124674510,3,findchangedpaths return path change merge commit if possible select relevant template choose template dropdown template source relate gitlab issue when user push list change gitlab perform diff check change if change include merge commit return change path include change history we solve gitlab issue link instead findchangedpaths git diff tree cmd combine diff return change different parent conflict resolution different parent manual change introduce merge i discuss slack point break change change flag introduce enum allow client specify output format note output format merge commit different parent mode sha status nextpath function need return multiple gitalypb changedpath merge commit
72,118373307,3,add support generate patch ids user interact mr page distance actual mechanic git underlie diff strength product however gently obfuscate concept commit branch find user confuse implication concept one area arise particular approval rule behavior rebase often user want approval rule reset new code enter diff fairly basic security requirement help ensure unreviewe unapproved code enter mr this sensible behavior break situation rebase occur git generate new commit sha look like new code app while work rebase commit sha disable approval rule reset ui generate rebase rebase command line way detect new commit come push this lead disjoint ux rebase change behavior depend execution method choose the real question attempt answer meaningful programmatic change diff detectable compare datum rather attempt compare diff potentially large text blob instead like ability generate representation raw diff allow compare actual change code this allow detect case rebase need reset approval potentially trigger additional management behavior review cycle notify previous reviewer change one approach accomplish add support git patch id new rpc allow rail request need store result db this allow quickly efficiently compare gestalt series commit giant diff commit potentially add remove squashed etc rebase impact result diff this previously open include initial discussion feedback rail stakeholder
73,117061447,2,introduce new whitespacechanges enum deprecate follow comment ultimately backwards incompatible change gitaly impact user how amend commitdiff rpc expose new enum whitespacechanges similar deprecate field it unspecified look dontignore ignore ignoreall control exactly render diff availability testing as change issue add new field potentially mark deprecate major issue any change behaviour rail happen we ensure omnibus gitlab mirror trig trigger qa job pass confirm unexpected downstream impact
74,108947683,2,optionally skip computing flatten path gettreeentries computing flatten path gettreeentries excessively expensive we add flag optionally skip step client need request case need
75,107255388,2,remove driver specification ci update the share runner use driver default part
76,94969384,1,feature flag enable pagination token exact match title suggestion feature flag enable description feature what enable feature flag owners team code most appropriate slack channel reach code good individual reach expectation what release feature occur what expect happen gitaly return error page token find previously try return element collection go unknown page token what happen go wrong user error request list branch what monitor detect problem beta group project if applicable group project happy feature turn early some organization wish test big change interested small subset user ahead time example gitlab org gitlab gitlab org gitaly project gitlab com group roll out steps x read documentation feature flag x add issue howto x be require code deploy howto x do need create change management issue howto x enable staging howto x test staging howto x verify feature flag check prometheus metric x announce issue estimate time enable x add issue x enable run chatop command production howto x cross post chatop slack command com team channel x verify feature flag check prometheus metric x announce issue flag enable x do set feature true howto x submit mr feature onbydefault true add changelog entry howto x have mr merge x possibly wait deployment cycle howto x submit mr remove pre feature code codebase add changelog entry howto x have mr merge x remove feature flag chatop howto x close issue
77,88793588,1,cleanup fallback logic gitaly binary path resolution merge deploy it safe remove fallback logic define path gitaly binary
78,81575543,1,geo help praefect recover internal failover from praefect respond code failedprecondition message repository read mode proposal when secondary encounter particular error sync geo schedule retry repository later usually for example set floor minute and double calculated delay
79,80369000,1,update doc minimum version ruby while upgrade ruby doc minimum version ruby update update doc require
80,78723064,4,gitaly make ruby default ruby part once ruby build gitaly ruby actually want switch default ruby happen separate step note we roll ruby build grpc rollback
81,77995430,1,enable prometheus default gitaly enable prometheus default administrator configure bucket this issue propose default bucket the config value remain override default value see
82,77882837,1,praefect use millisecond precision json log time field problem solve a customer report time praefect log standardize some item millisecond precision thank from customer we try ingest log datalog face date log standardize example file log gitlab praefect current commitservice streaming code notice time millisecond precision time proposal praefect log entry time millisecond precision iso
83,77822925,3,enforce default limit recursive call gettreeentries background in repository large tree recursive call gettreeentries consume system resource complete proposal enforce default limit number tree entry recursively fetch gettreeentries require explicit override request want default limit
84,77019673,1,feature flag enable go implementation fetchsourcebranch what enable feature flag switch ruby implementation fetchsourcebranch go implementation fetchsourcebranch create merge request fork fetchsourcebranch change source repo target repo cross repository diff the feature flag roll past cause severe performance regression there change mitigate regression avoid needless duplication work object contain target repository owners team gitaly most appropriate slack channel reach good individual reach expectation what release feature occur improve performance what expect happen no change behaviour expect ideally performance metric fetchsourcebranch change what happen go wrong error create merge request fork error diffe repository latency regress what monitor detect problem roll out steps x read documentation feature flag x add issue x be require code deploy howto x enable staging howto x test staging howto ensure documentation update x announce issue estimate time enable x add issue x enable run chatop command production howto cross post chatop slack command com team channel x announce issue flag enable x remove feature flag add changelog entry close issue
85,76044947,1,remove ruby implementation userupdatesubmodule rpc once feature flag go implementation userupdatesubmodule remove previous release safe time remove old ruby implementation
86,76044879,1,remove feature flag once issue find feature flag turn default remove follow
87,74220736,2,logging format text consider invalid when log format text gitaly chart consider invalid in documentation format value log section accept json text gitaly pod log root kubectl log gitlab gitlab set config gitaly template gitaly begin parse file gitaly template write gitaly copy config file find gitaly template exec sh process wrapper start gitaly log gitaly level info gitaly version level warn path configure use default path resolution local bin git level info disk cache object folder git repository level info disk cache object folder git tmp git repository level info cache object folder exist need remove git repository level info file walker git cache git cache level info file walker git state git state level info cache object file git tmp git repository level fatal logger format format text log section gitaly configmap text format root kubectl cm gitlab gitlab gitaly yaml grep log log format text dir log gitaly auth token gitlab secret gitaly normal behavior the work log section gitaly configmap json value root kubectl cm gitlab gitlab gitaly yaml grep log log format json dir log gitaly auth token gitlab secret gitaly gitaly log json log value format root kubectl log gitlab gitlab set config gitaly template gitaly begin parse file gitaly template write gitaly copy config file find gitaly template exec sh process wrapper start gitaly log gitaly level info gitaly version level warn path configure use default path resolution local bin git level info disk cache object folder git repository level info disk cache object folder git tmp git repository level info cache object folder exist need remove git repository level info file walker git cache git cache level info file walker git state git state level info cache object file git tmp git repository git unix tcp prometheus tempdir clean rss rss ruby gitaly ruby bin gitaly git ruby gitaly ruby bin gitaly git gitaly ruby ruby gitaly ruby bin gitaly git gitaly ruby ruby gitaly ruby bin gitaly git version detail kubernetes version gitaly version gitlab version gitlab cloud native helm chart version
88,74093600,3,build commit graph bloom filter in monorepo start observe slow response time findcommits grpc user edit merge requests timeout following stack trace deadline exceed lib gitlab git rescue lib gitlab git lib gitlab git log lib gitlab git app model commit lib gitlab metric block commit lib gitlab metric measure lib gitlab metric commit ee lib gitlab ee lib gitlab calculate ee app presenter ee app presenter block user lib gitlab util ee app presenter user ee app presenter ee app view share app helper app view share app view project app view project app view project app controller render ee lib gitlab ee app controller ee app controller lib gitlab app controller lib gitlab lib gitlab app controller lib gitlab app controller app controller block lib gitlab block use lib gitlab use lib gitlab app controller lib gitlab metric lib gitlab metric lib gitlab middleware lib gitlab metric block lib gitlab metric run lib gitlab metric lib gitlab ee lib gitlab database ee lib gitlab jira lib gitlab middleware lib gitlab lib gitlab middleware lib gitlab middleware lib gitlab middleware lib gitlab middleware lib gitlab middleware lib gitlab middleware lib gitlab middleware config initializer lib gitlab metric lib gitlab middleware what suggest call timeout gitaly i suspect big monorepo git log slow reason indicate the solution build commit graph bloom filter include add path git commit graph write i draft solution need develop fledged solution
89,73848356,3,fix resolve praefect address mixed tls deployment in deployement gitaly praefect different tls configuration fail correctly resolve inject praefect address the root cause resolvepraefectaddress decide resolve peer address inspect incoming tcp connection unencrypted dial unencrypted connection if encrypt dial encrypt connection this lot sense decide dial depend reachable gitaly node we care instead inject information get
90,73819963,3,praefect dial gitaly transaction for transaction require gitaly dial praefect order vote transaction this introduce problem gitaly configure praefect security token praefect send information include security token gitaly transaction relate call it clear customer dial requirement affect support network topology gitlab deployment sometimes praefect load balancer nat be able dial praefect desirable however praefect configure gitaly node security token clear praefect able reach individual gitalies network therefore robust praefect initiate grpc gitaly transaction vote this free gitaly need know network security detail praefect praefect trust client gitaly
91,73721249,2,improve input validation hook input the port usermergebranch rpc cause pipeline trigger production anymore the root cause postreceive hook execute input contain list update reference as result hook pretend change exist pipeline trigger this error hard diagnose log metric essentially absence if strict input verification hook expect change exist issue lot visible catch early
92,73263830,2,add fetchsha abstraction localrepository originally report fetch single sha multiple place gitaly verbose error prone have definitive easy use function improve code quality add new method fetchsha localrepo enable
93,73262492,2,inject single client connection pool main gitaly service currently service instantiate client pool use dialing gitalies to improve performance reduce connection dialing pool this ideally dependency inject main module originally report
94,73256843,2,enable verbose logging subcommand currently subcommand contain complex logic task squash commit resolve conflict commit multiple change the subcommand lack observability stderr return error message an alternative file descriptor allow command relay fine grain log when command exit non zero log level set certain level fine grain log emit
95,73184079,1,refactor newfeatureset remove unused error return value the test helper function newfeatureset capable return non nil error the helper fix return error affect code location update accept single return value any error assertion function remove the function define
96,72835557,1,miss hook environment summary as report present anymore environment custom server hook i able reproduce follow instruction the variable set pre receive post receive update hook normal project code repository i assume applie repository type this relate recent work port hook ruby go i variable set ruby code proposal explicitly document compatibility reason probably want support document we want double check miss variable set previous ruby code
97,72770726,1,follow pass gitaly ssh the follow discussion address start discussion comment just discover interceptor add i understand motivation i customize interceptor for tracing i like inject custom tracer withtracer directly labkit discussion for correlation i like set client like grpccorrelation suggest i look code workhorse shell add interceptor client workhorse as set client shell also set miss tracing interceptor maybe intentionally so current behavior ideal trace span place right redundant context creation correlating interceptor execute twice add correlation id twice bug i notice connopts mutate it safe append slice pass caller likely assume method mutate the slice large capacity method mutate original backing array the code copy it nice change signature varargs match grpc dial place functional option this address bug
98,72578977,2,intercept createrepository praefect set repository database state currently record repository virtual storage suppose contain this change we intercept createrepository call set expect database record repository relate select primary repository create relate select node host repository create additionally generation relate query strict expect repository present database allow example incremente generation repository exist stricter query prevent certain class error logic simple handle case record miss
99,72555029,1,usermerge rpc error failedprecondition merge conflict problem when user merge branch merge gitaly service detect return error this error unknown error currently surprising operator gitaly additionally error wrong error know last reason error unknown influence though solution gitaly return failedprecondition merge conflict
100,72076407,1,replace burntsushi toml package gitaly use toml configuration parsing that package go unmaintained toml stable gitaly depend new package support
101,72050561,1,createrepositoryfromsnapshot fail error promote temporary directory fail parent directory target path exist if createrepositoryfromsnapshot call parent directory target path exist request fail error rpc error code internal desc promote temporary directory fail rename opt gitlab git data tmp opt gitlab git data file directory strace find renameat fail enoent opt gitlab git data tmp opt gitlab git data o enoent no file directory generally rpc call second attempt create repository directory create call attempt expose issue replicaterepository ensure directory present rename tmp directory rpc
102,71993240,2,gitaly module version update gitlab workhorse gitlab shell on clean go installation i try update gitaly module gitlab workhorse gitlab shell download cat inconsistent version require accord go try enforce semantic compatibility in semantic versioning change major version number indicate lack backwards compatibility early version to preserve import compatibility command require module major version later use module path major version final element for example version instead use module path package module use path import path prefix include major version number module path import path way call semantic import versioning pseudo version module major version later begin major version instead i think say gitaly m module path a workaround tag tag late master code write semantic import versioning convention introduce use major version later describe set unversioned import path to accommodate code source code repository later tag file tree version consider module available version give incompatible suffix convert module version the incompatible tag apply pseudo version derive version tag february switch versione scheme what think
103,71984925,3,repository update intermittently disappear busy repos host nfs mount share multiple gitaly server issue occur large customer gitaly node share nfs mount load balancer appear single storage rail after upgrade week ago user high traffic project instance report recently merge change disappear no error receive merge check update file later time change present they report issue this underlying issue look specific example find gc run separate gitaly host usermergebranch execute the gc report following error gitlab sidekiq unknown garbagecollect repositoryservice garbagecollect service crm lightning lightning service service service crm lightning lightning service default service gitaly repositoryservice level error msg warn garbage find opt gitlab data git datum repository group project object warning garbage find opt gitlab data git datum repository group object warning garbage find opt gitlab data git datum repository group object warning garbage find opt gitlab data git datum repository group object warning garbage find opt gitlab data git datum repository group object pid server system grpc time these file indicate file open file handle delete nfs perform silly rename occur rename file format keep disk file handle release this suggest delete pack file process specific process unclear in addition intermittent rpc error code unknown desc fail read descriptor stale file handle message multiple gitaly ruby rpc in case request fail data loss occur current nfs mount setting gitaly nod rw relatime proto tcp sys note customer add lookupcache positive setting early opportunity
104,71737554,2,gitaly http client specify tlsclientconfig support mutual tls auth gitaly currently specify tlsclientconfig http client request gitlab internal api this prevent interoperation service require mutual tls auth nginx the non grpc client gitaly update use configure gitaly certificate client connection
105,71507387,2,leverage well memory utilization from man git config file large size store deflate attempt delta compression store large file delta compression avoid excessive memory usage slight expense increase disk usage additionally file large size treat binary default mib platform this reasonable project source code text file delta compress large binary medium file wo common unit suffix k m g support gitaly set default i think m well threshold create well trade as i think number source file mb limited point blob compress optimize pack this config dynamically inject relevant git command rpc improve uploadpack performance repack performance tradeoff user perspective
106,71198033,2,reference transaction hook vote twice reference update the reference transaction hook call transition git reference transaction mechanism currently include exactly transition start prepare commit start prepare aborted as hook ignore state transition hook service twice pass state transition as result hook service vote twice reference update one argue feature bug order assert actually perform transition expect but case vote second transition prepared commit aborted useless git ignore git hook return value transition after transaction wrap way change fact as result stop vote second transition vote move prepared state
107,70726576,1,no use checksum comparison replication once replication update repository gitaly storage praefect run calculatechecksum source target gitaly nodes the result execution compare match error message write log example json msg checksum match hostname stor gprd shard default level error primary file replica file environment gprd pid time tier sv type praefect fqdn tag praefect stage main this happen pretty start replication error match checksum as step properly propagate log entry info go place log it clear action regard different checksum repository
108,70504008,3,fixup reference transaction hook base argument while reference transaction hook release git get bug cause git accidentally execute wrong hook interleave call reference transaction hook this bug currently prohibit use hook reference transaction vote new git version release upstreamed fix give late release potentially use hook as temporary workaround manually fixup hook name gitaly hook binary gitlab system hook instal reference transaction pre receive update post receive because hook call able tell case git mean execute reference transaction hook instead inspect hook argument reference transaction receive argument prepare commit aborted pre receive get argument update argument reference update fully qualified form ref head master clash verb post receive get argument as consequence hook reference transaction hook execute prepare commit aborted if execute argument sure git want execute reference transaction hook instead by make use info able fix hook casualty unblock git release fix
109,70060227,3,port userupdatesubmodule go userupdatesubmodule currently handle gitaly ruby sidecar port go performance reason this handle shell git leverage way
110,70060225,3,port userapplypatch go userapplypatch currently handle gitaly ruby sidecar port go performance reason this handle shell git leverage way
111,70060224,3,port usersquash go usersquash currently handle gitaly ruby sidecar port go performance reason this handle shell git leverage way
112,70060223,3,port usercommitfile go usercommitfile currently handle gitaly ruby sidecar port go performance reason this handle shell git leverage way
113,70060220,3,port userrevert go userrevert currently handle gitaly ruby sidecar port go performance reason this handle shell git leverage way
114,70060218,3,port usercherrypick go usercherrypick currently handle gitaly ruby sidecar port go performance reason this handle shell git leverage way
115,70060215,2,port userffbranch go userffbranch currently handle gitaly ruby sidecar port go performance reason this handle shell git leverage way
116,70060212,2,port usermergetoref go usermergetoref currently handle gitaly ruby sidecar port go performance reason this handle shell git leverage way
117,70060205,2,port userdeletetag go userdeletetag currently handle gitaly ruby sidecar port go performance reason this handle shell git leverage way
118,70060200,2,port usercreatetag go usercreatetag currently handle gitaly ruby sidecar port go performance reason this handle shell git leverage way
119,69890593,2,ignore common certificate a temporary mitigation break change introduce this remove major version gitlab additionally user gitaly go client upgrade relate
120,69757246,2,re include reference transaction hook the reference transaction hook remove gitaly regression git cause wrong hook invoke input reference transaction hook interleaving hook call we need include reference transaction hook soon git release fix issue depend
121,69757169,2,call reference transaction hook ruby sidecar while pre receive update post receive hook manually ruby sidecar reference transaction hook this necessity want drop pre receive hook favor reference transacton hook this depend inclusion gitaly reference transaction hook release git
122,69722330,2,improve reconcile error handling individual repo failure occur currently reconcile command exit early repos experience unrecoverable error this stop command continue repository ideally error encounter individual repos report client display appropriately user
123,69699005,1,rename white blacklist reference git grep whitelist internal praefect whitelist contain project name repos wish replicate internal praefect whitelist internal praefect whitelist internal praefect withwhitelist configure whitelist repos allow replication internal praefect func string replmgropt internal praefect repo range whitelistedrepo internal praefect struct internal rubyserver headers prefix string whiteliste automatically internal rubyserver automatically whitelist ruby specific feature flag internal rubyserver require ok outgoing md contain non whitelisted key internal rubyserver require outgoing md contain whiteliste key internal rubyserver require outgoing md contain whiteliste feature key gitaly use black vs white instead use block allow list
124,69499544,3,praefect server metadata resolve pass ruby sidecar when receive praefect server metadata need resolve contain connection information base current peer connection information this fill remote ip address change depend praefect connect while normal call praefectfromcontext proxie call intend ruby sidecar as result sidecar receive invalid connection information use to fix need resolve address information gitaly inject resolve metadata ruby sidecar metadata reference
125,69398701,2,improved metric transaction today testrun show metric transaction improve way figure voter transaction client delay vote transaction miss server delay extremely static matter use primary win strategy maybe break
126,69174006,2,praefect reconcile hang fail staging praefect reconcile stage run normally minute hang fail stage follow error unable reconcile rpc error code unavailable desc transport close it reach point print finished
127,68935101,2,praefect subcommand miss user visible documentation when execute praefect list switch subcommand available praefect while switch short documentation available subcommand actually explain administrator want use as probably use stressful scenario incident happen have documentation handy admin praefect definitely helpful
128,68592316,1,document usage pgbouncer praefect cluster setup the doc include instruction setup configuration pgbouncer postgresql database
129,68589310,1,pgbouncer deployment terraform in order verify usage pgbouncer postgresql database praefect include pgbouncer terraform setup this allow verify praefect use pgbouncer protect postgresql issue
130,54077691,2,praefect distribute read counter mislabele storage during demo observe strange behavior distribute read counter area red rectangle note counter label storage the counter originate different praefects the objective read distribution distribute read multiple storage virtual storage we expect praefect distribute read different storage give time expect counter label storage case
131,54023862,4,implement support subtransaction with upcoming reference transaction hook implement gitlab org gitlab need extend transaction support subtransaction right know transaction invoke pre receive hook but reftx hook git operation give transaction arbitrarily time as know go happen transaction need cope allow multiple vote this subtransaction come each vote give node go create new subtransaction iff previous subtransaction node succeed if current transaction ongoing fail allow new subtransaction the outcome give node success subtransaction reach quorum thing node vote failure subtransaction arrive different thing start node create subtransaction
132,53975361,3,improve performance countcommits commit graph placeholder issue gitaly team know detail i in main performance issue gitaly cny node appear countcommits grpc method point speed git config true time git rev list real user sys git config false time git rev list real user sys if possible consider enable cc
133,53589477,2,refactoring listening address configuration the follow discussion address start discussion i think refactor allow set list address need serve mandatory schema listen var it simplify code wo need support couple place praefectserver type
134,50011205,3,filter environment variable execute custom hook our hook use set environment variable pass information process require operational while help variable sure filter envvar execute custom hook custom hook wo accidentally start depend internal variable mean public place thus execute custom hook equivalent avoid break customer script unknowingly start internal variable allow iterate fear breakage i label bug expose internal variable custom hook unintentional well
136,45200352,4,repair node fail reference transaction vote when vote reference transaction fail schedule replication job secondary date disagree vote compare primary this especially important soon implement voting strategy reach quorum node cast disagree vote
137,43404810,4,implement voting strategy transaction manager the transaction manager currently support single voting strategy register node need cast vote transaction abort in order support scenario resilient failure want implement additional strategy implement mechanism reach quorum subset node fail implement weight vote possible primary node fail subset secondary
138,38118155,3,protobuf generation behave differently ci our protobuf code generation behave differently ci vs locally our code generation process suppose download install correct version software deterministic continue
139,38110588,1,makefile test target prereq check git version many gitaly test depend correct minimum version git instal to save contributor waste time effort version detect prior run test contributor alert version support
140,37849669,2,run test git core master branch with new build git target quickly build git master branch in order catch issue upcoming git release early start run test git master branch this benefit aware backwards incompatible change git core find newly introduce bug fairly quick
141,36039988,3,on host locale output us ascii encode gitaly set environment variable lang child git process gitaly ruby on host locale instal cause ruby fall us ascii bit encoding default different locale as result encode output trigger argumenterror invalid byte sequence us ascii error string parse method execute a customer experience updateremotemirror return error probably place occur on host locale sh lang gitlab embed ruby p encoding lang gitlab embed ruby p encoding us ascii locale c posix locale lang on host instal work sh lang gitlab embed ruby p encoding lang ruby p encoding lang ruby p use encoding example encoding us ascii locale c posix locale lang
142,35722317,4,pass info gitaly nod avoid execute git hook secondary when proxye git operation multiple node node need know primary node secondary node this information require node decide execute custom hook primary
143,35479331,2,remove multi byte support line package the line package take input split delimiter send output define sender there currently support multi byte delimiter unused break break example twice byte delimiter send result there currently site feature test coverage therefor remove
144,35363262,3,lock worktree use the follow discussion address start discussion comment i wonder sense start worktree lock currently logic remove worktree old give threshold if threshold small i remove worktree use currently iff worktree strictly tie give operation tell operation lock worktree git worktree lock msg consequentially unlock worktree operation finish that guarantee delete worktree use the message choose way know operation lock lock additional context naturally happen worktree remove cause operation fail mid way unlock high threshold note we easily add def function add worktree lock if change make sense maybe create follow issue
145,35350580,1,omnibus gitaly dashboard support multiple node during demo observe omnibus gitaly dashboard gitaly time some panel current version support gitaly node instead table the dashboard allow view gitalies job set gitaly praefect gitaly node job praefect gitaly this option select gitalies
146,35316409,1,distribute read shard include primary problem currently read distribution feature skip primary node serve read traffic this understandable choice give write expensive read but soon write load distribute introduction transaction than load balance anymore solution primary node read traffic node
147,35255594,3,praefect coordinator streamdirector handle storage scope correctly current implementation streamdirector properly handle request storage option removenamespace case virtual storage storage gitaly differ like praefect storage coordinator write storage rpc request contain virtual storage instead map gitaly storage there open verify bug you check gdk testpraefecthandlesstoragescoperequest test locally
148,35144491,2,configure gitaly schedule nightly repo optimization we rpc optimizerepository design call improve performance repos currently utilize rail it complex figure good way invoke rail a incremental approach invoke internally gitaly routine schedule night weekend similar cron job
149,35039260,3,connection cache replicaterepository break token in drop support token token timestamp constraint it break replication production it unclear clock skew get timestamp old error
150,34819026,1,praefect migration drop gitaly table we old migration environment outdate gitaly table we write migration remove eg production environment list relation schema name type owner size description public table default bytes public sequence default bytes public table default bytes public table default bytes public table default bytes public table default bytes public sequence default bytes public table default bytes public sequence default bytes public table default bytes public table default bytes public table default kb public table default bytes public sequence default byte row
151,34785714,2,investigate sporadic praefect metric replication latency delay during demo observe sporadic datum replication delay latency metric we verify metric behave expect determine fix correct
152,34785652,1,expand praefect dashboard panel error rate include total rate the omnibus praefect dashboard panel error rate certain rpc proxie praefect this panel lack context total number handle request this add
153,34775378,2,improve gitaly connection error message a customer stand gitaly server recently run issue gitaly ruby process communicate main gitaly process execute usercommitfile specifically dns respond query gitaly hostname error rpc error code unavailable desc fail connect address give indication problem occur include target connect problem like significantly easy debug
155,34712319,2,replication queue size virtual storage label the prometheus metric break virtual storage this allow compare replication queue pressure virtual storage praefect aggregate virtual storage queue pressure praefects this require add label virtual storage metric relate
156,34595758,1,clean ruby implementation fetchinternalremote after port rpc go follow task remain x remove feature flag default go x wait release remove ruby implementation
157,34538258,3,explore use git mechanism when spawn git executable currently evaluate git actually observe runtime usual stdout stderr in order allow well traceing performance event git mechanism introduce we evaluate hook mechanism make sense insight git improve visibility ultimately allow well debugging pathological case
158,34501318,1,documentation how remove filterspec local repository during partial clone demo question ask remove filterspec repository git pull ensure present currently documentation provide proposal add section documentation unfilter repository
159,34416474,1,inforefsuploadpack disk cache file descriptor close use rpc method inforefsuploadpack use special cache base use file each request try find cache entry if exist datum read return result the read use os io stream but stream close miss result file descriptor leak
160,34383340,1,gitaly tmp folder cleanup run hour gitaly use special directory temporary folder name tmp it special background task run hour clean stale file but run start restart wrap infinite loop it observe check log miss log entry hour there entry service restart
161,34305990,3,port fetchsourcebranch go in fetchinternalremote port go like fetchsourcebranch thing ruby that make unreliable port go which improve sla rpc maybe performance
163,34086193,3,frame wise proxying write operation gitaly replicas problem solve when success signal send git protocol rpc write operation ha gitaly cluster want success signal communicate write succeed multiple location single node failure result data loss write operation currently route primary node this datum need send node cluster further detail replay write operation primary secondary node ideal performance reliability perspective it possible proxy write gitaly nod the simple approach frame wise proxying node slow block node in future stream wise proxying solve proposal implement frame wise proxying write operation gitaly node strong consistency test functional end end coverage provide exist replication test and broad coverage run entire end end test suite environment praefect storage include staging performance end end testing implement detailed plan performance test failure condition link reference
164,33980450,3,error fetchinternalremote git fetch fail signal terminate fetchinternalremote fail git fetch get sigterm and return error
165,33944108,2,praefect add latency misjudge calculatechecksum latency when look add latency praefect like calculatechecksum issue odd checksum extensively praefect proxye rpc client it like bug metric
166,33840434,3,praefect proper multi virtual storage support praefect advantage multi virtual storage support configuration real life handle properly current routing logic support multi virtual storage configuration allow request routing single virtual storage as replication multi virtual storage support affect helper subcommand dataloss proper multi virtual storage support require
167,33756926,2,revise usage replicasdatastore interface after move new approach leader election base different strategy method replicasdatastore interface need anymore they exist test to simplify project need clean refactor lead misunderstanding proper usage
168,33594811,3,the replicaterepository grpc automatically clean encounter error the replicaterepository grpc automatically clean encounter error currently error appear sort eat invoke rails process notify failure this result bad state project repository partially replicate destination gitaly storage shard file system in case underlying problem fix good however future proof unknown unencountered error replicaterepository grpc implementation include unwind rollback step ensure invoke error encounter this significantly unblock current process allow business spin large number project replication storage shard balance operation the fail replica repo matter original repository remain untouched define scope replicaterepository grpc method implementation
169,33497489,1,enable sql leader election default sql leader election available enable default sql base leader election default behavior automatic failover enable proposal when configure default leader election strategy sql ruby sql link reference
170,33397034,2,praefect behavior replication job fail persist currently praefect allow proxie rpc succeed associate replication job fail persist we simply log replication persist error impact success fail message client this incorrect behavior when praefect proxie rpc promise end user number thing the rpc proxie primary the replication job primary secondary schedule if replication job fail schedule fail rpc satisfy contract end user
